<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Slickflow.Engine</name>
    </assembly>
    <members>
        <member name="T:Slickflow.Engine.Business.Entity.ActivityInstanceEntity">
            <summary>
            Activity Instance Entity
            活动实例的实体对象
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Business.Entity.ActivityInstanceEntity.ComplexType">
            <summary>
            Sign Together /Sign Forward Type
            会签或加签类型       
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Business.Entity.ActivityInstanceEntity.MergeType">
            <summary>
            Sign Together Execution Type: Sequecne / Parallel
            会签执行类型：串行或并行
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Business.Entity.ActivityInstanceEntity.CompareType">
            <summary>
            Sign Together Passover Type: Count / Percentage
            会签通过率类型：个数或百分比
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Business.Entity.ActivityInstanceEntity.CompleteOrder">
            <summary>
            Sign Together Order
            Sequence:[1, 2, 3...]
            Prallele:[-1]
            会签执行顺序：串行为1，2，3 并行为-1
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.JobInfoEntity">
            <summary>
            Job Info Entity
            作业信息
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.LogEntity">
            <summary>
            Log Entity
            日志记录实体
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.LogQueryEntity">
            <summary>
            Log Query Entity
            日志查询实体
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.ProcessEntity">
            <summary>
            Process Entity
            流程实体类
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.ProcessFileEntity">
            <summary>
            Process File Entity
            流程文件实体对象
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.ProcessFilePool">
            <summary>
            泳道流程实体对象
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.ProcessFileQuery">
            <summary>
            Process File Query
            流程xml文件查询实体
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.ProcessInstanceEntity">
            <summary>
            Process Instance Entity
            流程实例类
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.ProcessInstanceQuery">
            <summary>
            Process Instance Query
            流程实例查询实体
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.ProcessQuery">
            <summary>
            Process Query
            流程查询类
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.ProcessVariableEntity">
            <summary>
            Process Variable Entity
            流程实体类
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.ProcessVariableQuery">
            <summary>
            Process Variable Query
            流程变量查询实体
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.ProcessVariableTaskView">
            <summary>
            Process Variable Task View
            流程变量的任务视图
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.QueryBase">
            <summary>
            Query base
            查询基类
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.Query`1">
            <summary>
            Query Generic
            查询泛型类
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.Table">
            <summary>
            Table
            映射数据库表对象
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.TaskEntity">
            <summary>
            Task Entity
            任务实体对象
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.TaskEntrustedEntity">
            <summary>
            Task Entrusted Entity
            任务委托实体
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Business.Entity.TaskEntrustedEntity.TaskID">
            <summary>
            被委托任务ID
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.TaskQuery">
            <summary>
            Task Query
            任务查询实体对象
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.TaskReplacedEntity">
            <summary>
            Task Rplaced Entity
            任务取代实体
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Business.Entity.TaskReplacedEntity.ReplacedByUserID">
            <summary>
            The task replaced with a new user
            任务被取代替换为新用户
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.TaskViewEntity">
            <summary>
            Task View
            任务视图类
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.TransitionInstanceEntity">
            <summary>
            Transition Instance Entity
            节点转移类
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Entity.TransitionInstanceQuery">
            <summary>
            Transition Instance Query
            转移查询实体
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Manager.ActivityInstanceManager">
            <summary>
            Activity Instance Manager
            活动实例管理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetById(System.Int32)">
            <summary>
            Retrieve activity instances based on ID
            根据ID获取活动实例
            </summary>
            <param name="activityInstanceID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetById(System.Data.IDbConnection,System.Int32,System.Data.IDbTransaction)">
            <summary>
            Retrieve activity instances based on ID
            根据ID获取活动实例
            </summary>
            <param name="conn"></param>
            <param name="activityInstanceID"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetRunningNode(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Obtain the current running node information of the process
            获取流程当前运行节点信息
            </summary>
            <param name="runner"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetRunningNode(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Business.Entity.TaskViewEntity@)">
            <summary>
            Obtain the current running node information of the process
            获取流程当前运行节点信息
            </summary>
            <param name="runner"></param>
            <param name="taskView"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetRunningNode(Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession,Slickflow.Engine.Business.Entity.TaskViewEntity@)">
            <summary>
            Obtain the current running node information of the process
            获取流程当前运行节点信息
            </summary>
            <param name="runner"></param>
            <param name="session"></param>
            <param name="taskView"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetBackSrcActivityInstance(System.Int32)">
            <summary>
            Get the instance of the return source activity
            获取退回源活动实例
            </summary>
            <param name="currentActivityInstanceID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.IsMineTask(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String)">
            <summary>
            Determine whether it is a processing task for a certain user
            判断是否是某个用户的办理任务
            </summary>
            <param name="entity"></param>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.IncludeRunningState(Slickflow.Engine.Business.Entity.ActivityInstanceEntity)">
            <summary>
            Determine whether the node is in a running state
            判断节点是否处于运行状态
            </summary>
            <param name="activityInstance"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetActivityInstances(System.Int32,Slickflow.Data.IDbSession)">
            <summary>
            Get Activity Instance
            获取活动节点实例
            </summary>
            <param name="processInstanceID"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetActivityInstanceLatest(System.Int32,System.String)">
            <summary>
            Get Activity Instance Latest
            获取活动节点实例
            </summary>
            <param name="processInstanceID"></param>
            <param name="activityGUID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetActivityInstanceLatest(System.Int32,System.String,Slickflow.Data.IDbSession)">
            <summary>
            Get Activity Instance Latest
            获取最近的节点实例
            </summary>
            <param name="processInstanceID"></param>
            <param name="activityGUID"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetActivityInstanceLatest(System.String,System.String,System.String)">
            <summary>
            Get Activity Instance Latest
            获取最近的节点实例
            </summary>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <param name="activityGUID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetActivityInstanceList(System.String,System.String,System.String)">
            <summary>
            Get Activity Instance List Latest
            获取最近的节点实例
            </summary>
            <param name="processGUID"></param>
            <param name="version"></param>
            <param name="activityGUID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetActivityRunning(System.Int32,System.String,Slickflow.Data.IDbSession)">
            <summary>
            Get activity instances with running status
            获取运行状态的活动实例
            </summary>
            <param name="activityGUID"></param>
            <param name="processInstanceID"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetActivityByState(System.Int32,System.String,Slickflow.Engine.Common.ActivityStateEnum,Slickflow.Data.IDbSession)">
            <summary>
            Obtain activity instances based on states
            根据状态获取活动实例
            </summary>
            <param name="processInstanceID"></param>
            <param name="activityGUID"></param>
            <param name="activityState"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetActivityInstanceListCompleted(System.String,System.String)">
            <summary>
            Retrieve nodes that have already completed running
            获取已经运行完成的节点
            </summary>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetPreviousActivityInstanceSimple(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String)">
            <summary>
            Obtain instances of activities that have already been completed in the previous step
            获取上一步已经完成活动的实例
            </summary>
            <param name="runningNode"></param>
            <param name="previousActivityGUID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetPreviousActivityInstanceSimple(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Data.IDbSession)">
            <summary>
            Obtain instances of activities that have already been completed in the previous step
            获取上一步已经完成活动的实例
            </summary>
            <param name="runningNode"></param>
            <param name="previousActivityGUID">previous activity guid</param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetActivityInstanceListCompletedSimple(System.Int32,System.String)">
            <summary>
            Obtain activity instances with completion status
            获取完成状态的活动实例
            </summary>
            <param name="processInstanceID"></param>
            <param name="activityGUID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetActivityInstanceListCompletedSimple(System.Int32,System.String,Slickflow.Data.IDbSession)">
            <summary>
            Obtain activity instances with completion status
            获取完成状态的活动实例
            </summary>
            <param name="processInstanceID"></param>
            <param name="activityGUID"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetByTask(System.Int32,Slickflow.Data.IDbSession)">
            <summary>
            Retrieve activity instance information from task ID
            由任务ID获取活动实例信息
            </summary>
            <param name="taskID"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetByTask(System.Int32)">
            <summary>
            Retrieve activity instance information from task ID
            由任务ID获取活动实例信息
            </summary>
            <param name="taskID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetRunningActivityInstanceList(System.String,System.String,System.String)">
            <summary>
            Get the activity nodes running in the process instance
            获取流程实例中运行的活动节点
            </summary>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetRunningActivityInstanceList(System.String,System.String,System.String,Slickflow.Data.IDbSession)">
            <summary>
            Get the activity nodes running in the process instance
            获取流程实例中运行的活动节点
            </summary>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <param name="version"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetMultipleInstanceListCompleted(System.Int32)">
            <summary>
            Retrieve the list of completed child nodes under the main node
            获取主节点下已经完成的子节点列表
            </summary>
            <param name="mainActivityInstanceID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetMultipleInstanceListCompleted(System.Int32,Slickflow.Data.IDbSession)">
            <summary>
            Retrieve the list of completed child nodes under the main node
            获取主节点下已经完成的子节点列表
            </summary>
            <param name="mainActivityInstanceID"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetPreviousParallelMultipleInstanceListCompleted(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String)">
            <summary>
            Retrieve completed multi instance nodes
            获取已经完成的多实例子节点
            </summary>
            <param name="runningNode"></param>
            <param name="previousActivityGUID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetPreviousParallelMultipleInstanceListCompleted(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Data.IDbSession)">
            <summary>
            Retrieve completed multi instance nodes
            获取已经完成的多实例子节点
            </summary>
            <param name="runningNode"></param>
            <param name="previousActivityGUID"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.IsAssignedUserInActivityInstance(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.Int32)">
            <summary>
            Determine whether the user is the assigned task user
            判断用户是否是分配下来任务的用户
            </summary>
            <param name="entity"></param>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.IsMultipleInstanceChildren(Slickflow.Engine.Business.Entity.ActivityInstanceEntity)">
            <summary>
            Determine whether it is a signing together instance node
            判断是否为会签实例节点 
            </summary>
            <param name="child"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.FilteredActivityInstanceInTheSameBatch(System.Collections.Generic.List{Slickflow.Engine.Business.Entity.ActivityInstanceEntity})">
            <summary>
            Filter activity instance list
            过滤活动实例列表
            </summary>
            <param name="instanceList"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetActivityMulitipleInstanceWithState(System.Int32,System.Int32,System.Nullable{System.Int16})">
            <summary>
            Obtain multi instance nodes of signing together nodes based on activity status
            根据活动状态获取会签节点的多实例节点
            </summary>
            <param name="mainActivityInstanceID"></param>
            <param name="processInstanceID"></param>
            <param name="activityState"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetActivityMulitipleInstanceWithStateBatch(System.Int32,System.Int32,System.Nullable{System.Int16},Slickflow.Data.IDbSession)">
            <summary>
            Retrieve the list of child nodes under the same batch of master nodes
            Including: filtering of rollback identification types that need to be filtered back and forth
            获取同一批的主节点下的子节点列表记录
            包括：需要过滤回退后的回退标识类型的过滤
            </summary>
            <param name="processInstanceID"></param>
            <param name="mainActivityInstanceID"></param>
            <param name="activityState"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetActivityMulitipleInstanceWithState(System.Int32,System.Int32,System.Nullable{System.Int16},Slickflow.Data.IDbSession)">
            <summary>
            Obtain multi instance nodes of signing together nodes based on activity status
            根据活动状态获取会签节点的多实例节点
            </summary>
            <param name="mainActivityInstanceID">会签节点</param>
            <param name="processInstanceID">流程实例ID</param>
            <param name="activityState">活动状态</param>
            <param name="session">session会话</param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetGatewayInstanceCountByTransition(System.String,System.Int32,System.Int32,Slickflow.Data.IDbSession)">
            <summary>
            Query the number of branch instances
            查询分支实例的个数
            </summary>
            <param name="splitActivityGUID"></param>
            <param name="splitActivityInstanceID"></param>
            <param name="processInstanceID"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetValidSplitedActivityInstanceList(System.Int32,System.Int32,Slickflow.Data.IDbSession)">
            <summary>
            Obtain the number of valid branches
             获取有效的分支数目
            </summary>
            <param name="processInstanceID"></param>
            <param name="splitGatewayInstanceID"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetValidActivityInstanceListOfMI(System.Int32,System.Int32)">
            <summary>
            Obtain the number of valid branches
            获取有效的子节点列表
            </summary>
            <param name="mainActivityInstanceID"></param>
            <param name="processInstanceID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetValidActivityInstanceListOfMI(System.Int32,System.Int32,Slickflow.Data.IDbSession)">
            <summary>
            Obtain the number of valid branches
            获取有效的子节点列表
            </summary>
            <param name="mainActivityInstanceID"></param>
            <param name="processInstanceID"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.CreateActivityInstanceObject(System.String,System.String,System.String,System.String,System.Int32,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Create activity instance
            创建活动实例的对象
            </summary>
            <param name="appName"></param>
            <param name="appInstanceID"></param>
            <param name="appInstanceCode"></param>
            <param name="processGUID"></param>
            <param name="processInstanceID"></param>
            <param name="activity"></param>
            <param name="runner"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.CalculateActivityOverdueDateTime(System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.Boundary},System.DateTime)">
            <summary>
            Calculate the expiration time of activity nodes
            计算活动节点过期时间
            XmlConvert.ToTimeSpan()
            https://stackoverflow.com/questions/12466188/how-do-i-convert-an-iso8601-timespan-to-a-c-sharp-timespan
            </summary>
            <param name="boundaryList"></param>
            <param name="createdDateTime"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.CreateActivityInstanceObject(Slickflow.Engine.Business.Entity.ActivityInstanceEntity)">
            <summary>
            Copy child nodes based on the master node
            根据主节点复制子节点
            </summary>
            <param name="main"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.CreateBackwardActivityInstanceObject(System.String,System.String,System.String,System.Int32,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Common.BackwardTypeEnum,System.Int32,System.Int32,Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Create an object for the activity instance
            创建活动实例的对象
            </summary>
            <param name="appName"></param>
            <param name="appInstanceID"></param>
            <param name="appInstanceCode"></param>
            <param name="processInstanceID"></param>
            <param name="processGUID"></param>
            <param name="activity"></param>
            <param name="backwardType"></param>
            <param name="backSrcActivityInstanceID"></param>
            <param name="backOrgActivityInstanceID"></param>
            <param name="runner"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.IncreaseTokensHad(System.Int32,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Update the number of tokens for the activity node
            更新活动节点的Token数目
            </summary>
            <param name="activityInstanceID"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.Read(System.Int32,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Activity instance read
            活动实例被读取
            </summary>
            <param name="activityInstanceID"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.SetActivityState(System.Int32,Slickflow.Engine.Common.ActivityStateEnum,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Set activity instance status
            设置活动实例状态
            </summary>
            <param name="activityInstanceID"></param>
            <param name="activityState"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.Withdraw(System.Int32,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Withdraw activity instance
            撤销活动实例
            </summary>
            <param name="activityInstanceID"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.SendBack(System.Int32,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Sendback activity instance
            退回活动实例
            </summary>
            <param name="activityInstanceID"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.EndActivityState(System.Int32,Slickflow.Engine.Common.ActivityStateEnum,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Set the end status of the activity
            设置活动结束状态
            </summary>
            <param name="activityInstanceID"></param>
            <param name="activityState"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.Complete(System.Int32,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete activity instance
            活动实例完成
            </summary>
            <param name="activityInstanceID"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.SetApprovalStatus(System.Int32,Slickflow.Data.IDbSession)">
            <summary>
            Update approval status to agree
            更新审批状态为同意
            </summary>
            <param name="activityInstanceID"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.UpdateActivityInstanceBlockedBetweenSplitJoin(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Xpdl.IProcessModel,Slickflow.Data.IDbSession)">
            <summary>
            Update the running nodes between branches and merges to block status
            更新分支和合并之间的运行节点为阻止状态
            </summary>
            <param name="gatewayActivity"></param>
            <param name="gatewayInstance"></param>
            <param name="processModel"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.UpdateActivityInstanceBlockedBetweenSplitJoin(System.Int32,System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.Activity},Slickflow.Data.IDbSession)">
            <summary>
            Update the activities in the activity to block status
            更新活动里面的活动为阻止状态
            </summary>
            <param name="processInstanceID"></param>
            <param name="taskActivityList"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.Insert(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Data.IDbSession)">
            <summary>
            Insert activity instance
            插入活动实例
            </summary>
            <param name="entity"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.Update(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Data.IDbSession)">
            <summary>
            Update activity instance
            更新活动实例
            </summary>
            <param name="entity"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.Update(System.Data.IDbConnection,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.Data.IDbTransaction)">
            <summary>
            Update activity instance
            更新活动实例
            </summary>
            <param name="conn"></param>
            <param name="entity"></param>
            <param name="trans"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.Cancel(System.Int32,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Cancel activity instance
            取消节点运行
            </summary>
            <param name="activityInstanceID"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.CancelUnCompletedMultipleInstance(System.Int32,Slickflow.Data.IDbSession,Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Update the status of unfinished nodes in the countersignature node
            更新会签节点中未办理完成的节点状态
            </summary>
            <param name="mainActivityInstanceID"></param>
            <param name="session"></param>
            <param name="runner"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.WithdrawMainIncludedChildNodes(System.Int32,Slickflow.Data.IDbSession,Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Withdraw the master node and its multiple instance nodes below it
            撤销主节点及其下面的多实例子节点
            </summary>
            <param name="mainActivityInstanceID"></param>
            <param name="session"></param>
            <param name="runner"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.WithdrawMultipleInstance(System.Int32,Slickflow.Data.IDbSession,Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Update the node status of the counter signature processing node
            Notes:Nodes in a ready or suspended state can be withdrawn 
            更新会签办理节点的节点状态
            备注:准备或挂起状态的节点可以撤销
            </summary>
            <param name="mainActivityInstanceID"></param>
            <param name="session"></param>
            <param name="runner"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.Resuspend(System.Int32,Slickflow.Data.IDbSession,Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Put the node back in a suspended state
            Notes: Used when revoking the last sub node of the co signature
            重新使节点处于挂起状态
            说明：会签最后一个子节点撤销时候用到
            </summary>
            <param name="activityInstanceID"></param>
            <param name="session"></param>
            <param name="runner"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.Rerun(System.Int32,Slickflow.Data.IDbSession,Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Put the node back in a suspended state
            Notes: Used when revoking the last sub node of the co signature
            重新使节点处于挂起状态
            说明：会签最后一个子节点撤销时候用到
            </summary>
            <param name="activityInstanceID"></param>
            <param name="session"></param>
            <param name="runner"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.Delete(System.Int32,Slickflow.Data.IDbSession)">
            <summary>
            Delete activity instance
            删除活动实例
            </summary>
            <param name="activityInstanceID"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.Agree(System.Int32)">
            <summary>
            Agree
            同意
            </summary>
            <param name="taskID"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.Refuse(System.Int32)">
            <summary>
            Refuse
            拒绝
            </summary>
            <param name="taskID"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.CheckActivityInstancePassedResult(System.Nullable{System.Int32},Slickflow.Data.IDbSession)">
            <summary>
            Check the pass type of the current node
             检查当前节点的通过类型
            </summary>
            <param name="taskID"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.CheckMIPassRateInfo(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Data.IDbSession)">
            <summary>
            Check the satisfaction of the pass rate of the co signing nodes
            检查会签节点通过率的满足情况
            </summary>
            <param name="currentActivityInstance"></param>
            <param name="mainActivityInstance"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ActivityInstanceManager.GetMiApprovalThresholdStatus(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Data.IDbSession)">
            <summary>
            Obtain the approval rate type of the countersignature node
            获取会签节点的审批通过率类型
            </summary>
            <param name="currentActivityInstance"></param>
            <param name="mainActivityInstance"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Business.Manager.IXPDLStorage">
            <summary>
            Process definition database storage interface
            流程定义数据库存储接口
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Manager.JobInfoManager">
            <summary>
            Job Info Manager
            作业数据管理器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.JobInfoManager.GetJobSubscribedByTopic(System.String)">
            <summary>
            Retrieve job info by the topic
            根据主题获取作业信息
            </summary>
            <param name="topic"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Business.Manager.LogManager">
            <summary>
            Log processing and recording class
            日志处理记录类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.LogManager.Record(System.String,Slickflow.Engine.Common.LogEventType,Slickflow.Engine.Common.LogPriority,System.Object,System.Exception)">
            <summary>
            Record process exception logs
            记录流程异常日志
            </summary>
            <param name="title"></param>
            <param name="eventType"></param>
            <param name="priority"></param>
            <param name="extraObject"></param>
            <param name="e"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.LogManager.Insert(System.Object)">
            <summary>
            Insert log data
            插入流程日志数据
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.LogManager.RecordLog(System.String,Slickflow.Engine.Common.LogEventType,Slickflow.Engine.Common.LogPriority,System.Object,System.Exception)">
            <summary>
            Record log data
            记录流程异常日志
            </summary>
            <param name="title"></param>
            <param name="eventType"></param>
            <param name="priority"></param>
            <param name="extraObject"></param>
            <param name="e"></param>
        </member>
        <member name="T:Slickflow.Engine.Business.Manager.ProcessInstanceException">
            <summary>
            Process instance exception class
            流程实例异常类
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Business.Manager.ProcessInstanceManager">
            <summary>
            Process instance manager
            流程实例管理者类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.GetProcessInstanceLatest(System.String,System.String,System.String)">
            <summary>
            Get the current running process instance latest
            获取当前运行的流程实例
            </summary>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.GetProcessInstanceLatest(System.Data.IDbConnection,System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            Get the current running process instance latest
            获取当前运行的流程实例
            </summary>
            <param name="conn"></param>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <param name="version"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.GetById(System.Int32)">
            <summary>
            Obtain process instance data based on ID
            根据ID获取流程实例数据
            </summary>
            <param name="processInstanceID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.GetById(System.Data.IDbConnection,System.Int32,System.Data.IDbTransaction)">
            <summary>
            Obtain process instance data based on ID
            根据ID获取流程实例数据
            </summary>
            <param name="conn"></param>
            <param name="processInstanceID"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.GetByVersion(System.String,System.String)">
            <summary>
            Obtain process instance data by Version
            根据版本获取流程实例
            </summary>
            <param name="processGUID"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.GetByActivity(System.Data.IDbConnection,System.Int32,System.Data.IDbTransaction)">
            <summary>
             Obtain process instance data by activity instance id
            根据活动实例ID查询流程实例
            </summary>
            <param name="conn"></param>
            <param name="activityInstanceID"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.IsSubProcess(Slickflow.Engine.Business.Entity.ProcessInstanceEntity)">
            <summary>
            Determine whether the process instance is a subprocess
            判断流程实例是否为子流程
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.GetProcessInitiator(System.Int32)">
            <summary>
            Obtain the initiator of the process
            获取流程的发起人
            </summary>
            <param name="processInstanceID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.GetProcessInitiator(System.Data.IDbConnection,System.Int32,System.Data.IDbTransaction)">
            <summary>
            Obtain the initiator of the process
            获取流程的发起人
            </summary>
            <param name="conn"></param>
            <param name="processInstanceID"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.GetProcessInstanceCurrent(System.String,System.String,System.String)">
            <summary>
            Get the current process running instance
            获取当前的流程运行实例
            </summary>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.GetProcessInstanceCurrent(System.Data.IDbConnection,System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            Get the current process running instance
            获取当前的流程运行实例
            </summary>
            <param name="conn"></param>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <param name="version"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.GetProcessInstance(System.String)">
            <summary>
            Query process instances based on application instance IDs
            Explanation: The appInstanceID here only determines uniqueness if it is of type UUID. Otherwise, ProcessUID is added to determine uniqueness
            根据应用实例ID查询流程实例
            说明：此处appInstanceID 只有GUID类型，才确定唯一性，否则就加入ProcessGUID来确定唯一性
            </summary>
            <param name="appInstanceID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.GetProcessInstance(System.Data.IDbConnection,System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            Query process instance
            查询流程实例
            </summary>
            <param name="conn"></param>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <param name="version"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.GetSubProcessInstance(System.Data.IDbConnection,System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            Obtain sub process data
            获取子流程数据
            </summary>
            <param name="conn"></param>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <param name="subProcessGUID"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.GetRunningProcessInstance(System.String,System.String)">
            <summary>
            Get process instances in running state
            获取处于运行状态的流程实例
            </summary>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.GetProcessInstanceCount(System.String,System.String)">
            <summary>
            Obtain the number of process instances
            获取流程实例的数目
            </summary>
            <param name="processGUID"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.CheckSubProcessInstanceCompleted(System.Data.IDbConnection,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            Check if the sub process has ended
            检查子流程是否结束
            </summary>
            <param name="conn"></param>
            <param name="activityInstanceID"></param>
            <param name="activityGUID"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.Insert(System.Data.IDbConnection,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.Data.IDbTransaction)">
            <summary>
            Insert process instance
            流程数据插入
            </summary>
            <param name="conn"></param>
            <param name="entity"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.Update(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Data.IDbSession)">
            <summary>
            Update process instance
            流程实例更新
            </summary>
            <param name="entity"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.Update(Slickflow.Engine.Business.Entity.ProcessInstanceEntity)">
            <summary>
            Update process instance
            流程实例更新
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.Update(System.Data.IDbConnection,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.Data.IDbTransaction)">
            <summary>
            Update process instance
            流程数据更新
            </summary>
            <param name="conn"></param>
            <param name="entity"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.CreateNewProcessInstanceObject(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Business.Entity.ProcessEntity,Slickflow.Engine.Xpdl.Node.SubProcessNode)">
            <summary>
            Create a new process instance according to the process definition
            根据流程定义，创建新的流程实例
            </summary>
            <param name="runner"></param>
            <param name="processEntity"></param>
            <param name="subProcessNode"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.CalculateOverdueDateTime(System.DateTime,System.String)">
            <summary>
            Calculate the expiration time of process instances
            计算流程实例过期时间
            XmlConvert.ToTimeSpan()
            https://stackoverflow.com/questions/12466188/how-do-i-convert-an-iso8601-timespan-to-a-c-sharp-timespan
            </summary>
            <param name="current"></param>
            <param name="expression"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.Complete(System.Int32,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Process completed, set the status of the process to complete
            流程完成，设置流程的状态为完成
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.Suspend(System.Int32,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Suspend process instance
            挂起流程实例
            </summary>
            <param name="processInstanceID"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.Resume(System.Int32,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Resume process instance
            恢复流程实例
            </summary>
            <param name="processInstanceID"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.RecallSubProcess(System.Int32,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Recall sub process
            恢复子流程
            </summary>
            <param name="invokedActivityInstanceID"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.Reverse(System.Int32,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Reverse process, set the process status to reverse and modify the process incomplete flag
            返签流程，将流程状态置为返签，并修改流程未完成标志
            </summary>
            <param name="processInstanceID"></param>
            <param name="currentUser"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.Cancel(Slickflow.Engine.Common.WfAppRunner,System.Data.IDbConnection)">
            <summary>
            Cancel process instance
            流程的取消操作
            </summary>
            <param name="runner"></param>
            <param name="conn"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.Discard(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Discard process instance
            废弃单据下所有流程的信息
            </summary>
            <param name="runner"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.Terminate(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Terminate process instance
            流程终止操作
            </summary>
            <param name="runner"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.Terminate(System.Data.IDbConnection,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            Terminate process instance
            终结流程实例
            </summary>
            <param name="conn"></param>
            <param name="entity"></param>
            <param name="userID"></param>
            <param name="userName"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.SetOverdue(System.Int32,System.DateTime,Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Set process overdue time
            设置流程过期时间
            </summary>
            <param name="processInstanceID"></param>
            <param name="overdueDateTime"></param>
            <param name="runner"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.Delete(System.Int32,System.Boolean)">
            <summary>
            Delete abnormal process instances 
            Notes:the process can only be deleted when it is in a cancelled state!
            Or, delete it forcedly
            删除流程实例
            备注:流程在取消状态，才可以进行删除！, 或者强制删除
            </summary>
            <param name="processInstanceID"></param>
            <param name="isForced"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessInstanceManager.Delete(System.String,System.String)">
            <summary>
            Delete process instance
            删除流程实例
            </summary>
            <param name="processGUID"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Business.Manager.ProcessManager">
            <summary>
            Process Manager
            流程定义管理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.GetByID(System.Int32)">
            <summary>
            Obtain process entity based on ID
            根据ID获取流程实体
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.GetByID(System.Data.IDbConnection,System.Int32,System.Data.IDbTransaction)">
            <summary>
            Obtain process entity based on ID
            根据ID获取流程实体
            </summary>
            <param name="conn"></param>
            <param name="id"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.GetByVersion(System.String,System.String,System.Boolean)">
            <summary>
            Obtain the process based on the processGUID and version number
            Notes: throwException means whether to throw an exception if the query cannot be found
            根据流程GUID和版本标识获取流程
            说明:throwException 为如果查询不到，是否抛出异常
            </summary>
            <param name="processGUID"></param>
            <param name="version"></param>
            <param name="throwException"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.GetByVersion(System.Data.IDbConnection,System.String,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            Obtain the process based on the processGUID and version number
            Notes: throwException means whether to throw an exception if the query cannot be found
            根据流程GUID和版本标识获取流程
            说明:throwException 为如果查询不到，是否抛出异常
            </summary>
            <param name="conn"></param>
            <param name="processGUID"></param>
            <param name="version"></param>
            <param name="throwException"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.GetVersionUsing(System.String,System.Boolean)">
            <summary>
            Get the current version of the process being used
            获取当前使用的流程版本
            </summary>
            <param name="processGUID"></param>
            <param name="isNotThrownException"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.GetVersionUsing(System.Data.IDbConnection,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            Get the current version of the process being used
            获取当前使用的流程版本
            </summary>
            <param name="conn"></param>
            <param name="processGUID"></param>
            <param name="isNotThrownException"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.GetByName(System.String,System.String)">
            <summary>
            Obtain the process based on the process name and version identifier
            根据流程名称和版本标识获取流程
            </summary>
            <param name="processName"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.GetByCode(System.String,System.String)">
            <summary>
            Obtain the process based on the process code and version identifier
            根据流程代码和版本标识获取流程
            </summary>
            <param name="processCode"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.GetByVersionInternal(System.Data.IDbConnection,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            Obtain process records according to version
            按照版本获取流程记录
            </summary>
            <param name="conn"></param>
            <param name="processGUID"></param>
            <param name="version"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.GetByMessage(System.String)">
            <summary>
            Obtain process based on message subject
            根据消息主题获取流程
            </summary>
            <param name="topic"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.GetSingleByAppType(System.String,Slickflow.Data.IDbSession)">
            <summary>
            Obtain process based on App type
            根据AppType获取流程记录
            </summary>
            <param name="appType"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.GetAll">
            <summary>
            Get all process
            获取所有流程记录
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.GetListSimple">
            <summary>
            List of process definition records for obtaining basic attributes
            获取基本属性的流程定义记录列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.Insert(Slickflow.Engine.Business.Entity.ProcessEntity)">
            <summary>
            Insert process
            新增流程记录
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.Insert(System.Data.IDbConnection,Slickflow.Engine.Business.Entity.ProcessEntity,System.Data.IDbTransaction)">
            <summary>
            Insert process
            新增流程记录
            </summary>
            <param name="conn"></param>
            <param name="entity"></param>
            <param name="trans"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.Update(Slickflow.Engine.Business.Entity.ProcessEntity)">
            <summary>
            Update process
            更新流程记录
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.Update(System.Data.IDbConnection,Slickflow.Engine.Business.Entity.ProcessEntity,System.Data.IDbTransaction)">
            <summary>
            Update process
            流程定义记录更新
            </summary>
            <param name="conn"></param>
            <param name="entity"></param>
            <param name="trans"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.UpdateUsingState(System.String,System.String,System.Byte)">
            <summary>
            Update process version IsUsing=0
            更新流程版本IsUsing=0
            </summary>
            <param name="processGUID"></param>
            <param name="version"></param>
            <param name="usingState"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.Upgrade(System.String,System.String,System.String)">
            <summary>
            Upgrade process version
            升级流程记录
            </summary>
            <param name="processGUID"></param>
            <param name="version"></param>
            <param name="newVersion"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.UpgradePoolProcess(System.Data.IDbConnection,System.Int32,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            Upgrade pool process
            升级泳道流程记录
            </summary>
            <param name="conn"></param>
            <param name="originProcessID"></param>
            <param name="newProcessID"></param>
            <param name="newVersion"></param>
            <param name="trans"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.Delete(System.String,System.String)">
            <summary>
            Delete process
            删除流程记录
            </summary>
            <param name="processGUID"></param>
            <param name="version"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.Delete(System.Data.IDbConnection,System.String,System.Data.IDbTransaction)">
            <summary>
            Delete process
            删除流程记录
            </summary>
            <param name="conn"></param>
            <param name="processGUID"></param>
            <param name="trans"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.DeleteProcess(System.String,System.String)">
            <summary>
            Delete process
            删除流程记录
            </summary>
            <param name="processGUID"></param>
            <param name="version"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.CreateProcess(Slickflow.Engine.Business.Entity.ProcessEntity)">
            <summary>
            Process XML file operation
            流程定义的创建方法
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.SaveProcessFile(Slickflow.Engine.Business.Entity.ProcessFileEntity)">
            <summary>
            Save process file
            保存XML文件
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.SaveProcessFileSingle(Slickflow.Engine.Business.Entity.ProcessFileEntity)">
            <summary>
            Save process file single
            保存XML文件
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.SaveProcessFileWithPool(Slickflow.Engine.Business.Entity.ProcessFileEntity,System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>
            Save process file with pool
            保存XML文件
            </summary>
            <param name="entity"></param>
            <param name="xmlDoc"></param>
            <param name="xmlNodeCollaboration"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.SetProcessTimerType(System.String,System.String)">
            <summary>
            Set process timer 
            更新流程定时器信息
            </summary>
            <param name="processGUID"></param>
            <param name="version"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.GetPoolProcessList(System.Data.IDbConnection,System.Int32,System.Data.IDbTransaction)">
            <summary>
            Obtain the list of lane processes under the main flow
            获取主流程下的泳道流程列表
            </summary>
            <param name="conn"></param>
            <param name="packageID"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.ImportProcess(System.String)">
            <summary>
            Import XML document to generate process records
            导入XML文档生成流程记录
            </summary>
            <param name="xmlContent"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.DeletePoolProcess(System.Data.IDbConnection,System.Int32,System.Collections.Generic.List{System.Int32},System.Data.IDbTransaction)">
            <summary>
            Delete pool process
            删除泳道流程记录
            </summary>
            <param name="conn"></param>
            <param name="packageID"></param>
            <param name="poolProcessIDs"></param>
            <param name="trans"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.DeletePoolProcess(System.Data.IDbConnection,System.Int32,System.Data.IDbTransaction)">
            <summary>
            Delete pool process by package id
            删除泳道流程记录
            </summary>
            <param name="conn"></param>
            <param name="packageID"></param>
            <param name="trans"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.GetProcessFile(System.String,System.String,Slickflow.Engine.Business.Manager.IXPDLStorage)">
            <summary>
            Read the content of the process XML file
            读取流程XML文件内容
            </summary>
            <param name="processGUID"></param>
            <param name="version"></param>
            <param name="extStorage"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.GetProcessFileByID(System.Int32,Slickflow.Engine.Business.Manager.IXPDLStorage)">
            <summary>
            Obtain process file entity based on ID
            根据ID获取流程文件实体
            </summary>
            <param name="id"></param>
            <param name="extStorage"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.FillProcessFileEntity(Slickflow.Engine.Business.Entity.ProcessEntity,Slickflow.Engine.Business.Manager.IXPDLStorage)">
            <summary>
            Convert process file entity
            转换流程文件实体
            </summary>
            <param name="processEntity"></param>
            <param name="extStorage"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessManager.GetProcessXmlDocument(System.String,System.String,Slickflow.Engine.Business.Manager.IXPDLStorage)">
            <summary>
            Read xml content
            读取Xml文档
            </summary>
            <param name="processGUID"></param>
            <param name="version"></param>
            <param name="extStorage"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Business.Manager.ProcessVariableManager">
            <summary>
            Process Variable Manager
            流程变量管理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessVariableManager.Insert(System.Data.IDbConnection,Slickflow.Engine.Business.Entity.ProcessVariableEntity,System.Data.IDbTransaction)">
            <summary>
            Insert process variable
            流程变量数据插入
            </summary>
            <param name="conn"></param>
            <param name="entity"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessVariableManager.Update(System.Data.IDbConnection,Slickflow.Engine.Business.Entity.ProcessVariableEntity,System.Data.IDbTransaction)">
            <summary>
            Update process variable
            流程变量更新
            </summary>
            <param name="conn"></param>
            <param name="entity"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessVariableManager.DeleteVariable(System.Int32)">
            <summary>
            Delete process variable
            删除变量
            </summary>
            <param name="variableID"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessVariableManager.SaveVariable(Slickflow.Engine.Business.Entity.ProcessVariableEntity)">
            <summary>
            Save process variable
            保存变量
            </summary>
            <param name="entity">流程变量实体</param>
            <returns>实体ID</returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessVariableManager.SaveVariable(System.Data.IDbConnection,Slickflow.Engine.Business.Entity.ProcessVariableEntity,System.Data.IDbTransaction)">
            <summary>
            Save process variable
            保存变量
            </summary>
            <param name="conn"></param>
            <param name="entity"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessVariableManager.GetVariableList(System.Int32)">
            <summary>
            Retrieve the list of process variables
            获取流程变量列表
            </summary>
            <param name="processInstanceID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessVariableManager.GetVariableEntity(Slickflow.Engine.Business.Entity.ProcessVariableQuery)">
            <summary>
            Retrieve process variable entity
            获取流程变量实体
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessVariableManager.GetVariableEntity(System.Int32)">
            <summary>
            Retrieve process variable entity
            获取流程变量实体
            </summary>
            <param name="variableID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessVariableManager.GetVariableValue(Slickflow.Engine.Business.Entity.ProcessVariableQuery)">
            <summary>
            Retrieve process variable value
            获取变量数值
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessVariableManager.GetVariableValue(System.Data.IDbConnection,Slickflow.Engine.Business.Entity.ProcessVariableQuery,System.Data.IDbTransaction)">
            <summary>
            Retrieve process variable value
            获取变量数值
            </summary>
            <param name="conn"></param>
            <param name="query"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessVariableManager.Query(System.Data.IDbConnection,Slickflow.Engine.Business.Entity.ProcessVariableQuery,System.Data.IDbTransaction)">
            <summary>
            Query process variable
            流程变量查询
            </summary>
            <param name="conn"></param>
            <param name="query"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessVariableManager.GetVariable(System.Data.IDbConnection,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            Query process variable
            流程变量查询
            </summary>
            <param name="conn"></param>
            <param name="processInstanceID"></param>
            <param name="name"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessVariableManager.GetVariable(System.Data.IDbConnection,System.Int32,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            Query process variable
            流程变量查询
            </summary>
            <param name="conn"></param>
            <param name="processInstanceID"></param>
            <param name="activityGUID"></param>
            <param name="name"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessVariableManager.GetVariableOfProcess(System.Data.IDbConnection,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            Query process variable
            流程变量查询
            </summary>
            <param name="conn"></param>
            <param name="processInstanceID"></param>
            <param name="name"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessVariableManager.GetVariableOfActivity(System.Data.IDbConnection,System.Int32,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            Query activity variable
            活动变量查询
            </summary>
            <param name="conn"></param>
            <param name="processInstanceID"></param>
            <param name="activityGUID"></param>
            <param name="name"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.ProcessVariableManager.ValidateProcessVariable(System.Data.IDbConnection,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            Verify if the trigger expression satisfies
            验证触发表达式是否满足
            </summary>
            <param name="conn"></param>
            <param name="processInstanceID"></param>
            <param name="expression"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Business.Manager.TaskManager">
            <summary>
            Task manager: including tasks and task view objects
            任务管理类：包括任务及任务视图对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetTaskView(System.Int32)">
            <summary>
            Retrieve task view based on task ID
            根据任务ID获取任务视图
            </summary>
            <param name="taskID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetTaskView(System.Data.IDbConnection,System.Int32,System.Data.IDbTransaction)">
            <summary>
            Retrieve task view based on task ID
            根据任务ID获取任务视图
            </summary>
            <param name="conn"></param>
            <param name="taskID"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetTask(System.Int32)">
            <summary>
            Retrieve task based on task ID
            获取任务
            </summary>
            <param name="taskID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetTask(System.Data.IDbConnection,System.Int32,System.Data.IDbTransaction)">
            <summary>
            Retrieve task based on task ID
            获取任务
            </summary>
            <param name="conn"></param>
            <param name="taskID"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetTaskByActivity(System.Data.IDbConnection,System.Int32,System.Int32,System.Data.IDbTransaction)">
            <summary>
            Obtain tasks based on process information
            根据流程信息获取任务
            </summary>
            <param name="conn"></param>
            <param name="processInstanceID"></param>
            <param name="activityInstanceID"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetTaskViewByActivity(System.Int32,System.Int32)">
            <summary>
            Obtain tasks based on process information
            根据流程信息获取任务
            </summary>
            <param name="processInstanceID"></param>
            <param name="activityInstanceID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetTaskViewByActivity(System.Data.IDbConnection,System.Int32,System.Int32,System.Data.IDbTransaction)">
            <summary>
            Obtain tasks based on process information
            根据流程信息获取任务
            </summary>
            <param name="conn"></param>
            <param name="processInstanceID"></param>
            <param name="activityInstanceID"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.IsLastTask(System.Int32)">
            <summary>
            Determine whether the task is the last task of the current node
            Single Node: Return True
            Multi instance nodes: judged based on the number of instances
            判断任务是否是当前节点最后一个任务
            单一节点：返回True
            多实例节点：根据实例个数判断
            </summary>
            <param name="taskID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetRunningTasks(Slickflow.Engine.Business.Entity.TaskQuery)">
            <summary>
            Retrieve the tasks currently running by the user
            获取当前用户运行中的任务
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetReadyTasks(Slickflow.Engine.Business.Entity.TaskQuery)">
            <summary>
            Retrieve the tasks currently in ready by the user
            获取当前用户待办的任务
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetFirstRunningTask(System.Int32)">
            <summary>
            Retrieve the tasks currently running by activity instance id
            获取正在运行的任务
            </summary>
            <param name="activityInstanceID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetCompletedTasks(Slickflow.Engine.Business.Entity.TaskQuery)">
            <summary>
            Retrieve completed tasks
            获取已经完成任务
            </summary>
            <param name="query"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetTasksPaged(Slickflow.Engine.Business.Entity.TaskQuery,System.Int32)">
            <summary>
            Get task (pagination)
            获取任务（分页）
            </summary>
            <param name="query"></param>
            <param name="activityState"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetTaskToDoListTop">
            <summary>
            Get Top 10 task todo list
            仅供用于数据展示使用
            </summary>
            <returns>task list</returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetTaskDoneListTop">
            <summary>
            Get Top 10 task done list
            仅供用于数据展示使用
            </summary>
            <returns>task list</returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetTaskOfMine(System.Data.IDbConnection,System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            Get my task
            获取我的任务
            </summary>
            <param name="conn"></param>
            <param name="activityInstanceID"></param>
            <param name="userID"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetTaskOfMine(System.Data.IDbConnection,System.Int32,System.String,System.Boolean,System.Data.IDbTransaction)">
            <summary>
            Get my task
            获取我的任务
            </summary>
            <param name="conn"></param>
            <param name="activityInstanceID"></param>
            <param name="userID"></param>
            <param name="notThrowException"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetTaskOfMine(System.String,System.String,System.String)">
            <summary>
            Based on the application instance and process UID, process the user ID to obtain the task list
            根据应用实例、流程GUID，办理用户Id获取任务列表
            </summary>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetTaskOfMine(System.Data.IDbConnection,System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            Based on the application instance and process UID, process the user ID to obtain the task list
            根据应用实例、流程GUID，办理用户Id获取任务列表
            </summary>
            <param name="conn"></param>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <param name="userID"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetTaskOfMine(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Get my taskview
            获取任务视图
            </summary>
            <param name="runner"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetTaskOfMine(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Get my taskview
            获取任务视图
            </summary>
            <param name="conn"></param>
            <param name="runner"></param>
            <param name="trans"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.IsMine(Slickflow.Engine.Business.Entity.TaskViewEntity,System.String)">
            <summary>
            Determine whether the task belongs to a certain user
            判断任务是否属于某个用户
            </summary>
            <param name="entity"></param>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.CheckTaskStateInRunningState(Slickflow.Engine.Business.Entity.TaskViewEntity)">
            <summary>
            Determine if the task is in a running state
            判断任务处于运行状态
            </summary>
            <param name="task"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetReadyTaskOfApp(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Retrieve pending tasks (business instances)
            获取待办任务(业务实例)
            </summary>
            <param name="runner"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GetTaskListEMailUnSent">
            <summary>
            Get the to-do list of unsent email notifications
            获取未发送邮件通知的待办任务列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.Insert(Slickflow.Engine.Business.Entity.TaskEntity,Slickflow.Data.IDbSession)">
            <summary>
            Insert task
            插入任务数据
            </summary>
            <param name="entity"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.Insert(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.PerformerList,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Insert task
            插入任务数据
            </summary>
            <param name="activityInstance"></param>
            <param name="performers"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.Insert(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.Performer,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Insert Task
            插入任务数据
            </summary>
            <param name="activityInstance"></param>
            <param name="performer"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.Insert(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,System.String,System.String,System.String,Slickflow.Data.IDbSession,System.Nullable{System.Int32})">
            <summary>
            Insert task data (create task)
            插入任务数据(创建任务)
            </summary>
            <param name="activityInstance"></param>
            <param name="performerID"></param>
            <param name="performerName"></param>
            <param name="runnerID"></param>
            <param name="runnerName"></param>
            <param name="session"></param>
            <param name="entrustedTaskID"></param>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Slickflow.Engine.Business.Manager.TaskManager.SendTaskEMails(Slickflow.Engine.Business.Entity.TaskEntity)" -->
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.Renew(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Regenerate task (limited to co signing child nodes under multiple instances)
            重新生成任务(只限于会签多实例下的子节点)
            </summary>
            <param name="sourceActivityInstance"></param>
            <param name="newInstance"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.Update(Slickflow.Engine.Business.Entity.TaskEntity,Slickflow.Data.IDbSession)">
            <summary>
            Update task data
            更新任务数据
            </summary>
            <param name="entity"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.SetTaskType(System.Int32,Slickflow.Engine.Common.TaskTypeEnum,Slickflow.Data.IDbSession)">
            <summary>
            Set task type
            设置任务类型
            </summary>
            <param name="taskID"></param>
            <param name="taskType"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.SetTaskRead(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Read task, set task to read status
            读取任务，设置任务为已读状态
            </summary>
            <param name="taskRunner"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.SetTaskEMailSent(System.Int32)">
            <summary>
            Update the status of task email sending
            更新任务邮件发送状态
            </summary>
            <param name="taskID"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.SetTaskState(Slickflow.Engine.Business.Entity.TaskEntity,System.String,System.String,Slickflow.Engine.Common.TaskStateEnum,Slickflow.Data.IDbSession)">
            <summary>
            Set task state
            设置任务状态
            </summary>
            <param name="task"></param>
            <param name="userID"></param>
            <param name="userName"></param>
            <param name="taskState"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.EndTaskState(System.Int64,Slickflow.Engine.Common.TaskStateEnum,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Set task state to end
            设置任务完成
            </summary>
            <param name="taskID"></param>
            <param name="taskState"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.Complete(System.Int32,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete task
            设置任务完成
            </summary>
            <param name="taskID"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.Withdraw(System.Int64,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Withdraw task
            设置任务撤销
            </summary>
            <param name="taskID"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.SendBack(System.Int64,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Sendback task
            设置任务退回
            </summary>
            <param name="taskID"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.Entrust(Slickflow.Engine.Business.Entity.TaskEntrustedEntity,System.Boolean)">
            <summary>
            Create a new delegated task
            创建新的委托任务
            </summary>
            <param name="entity"></param>
            <param name="cancalOriginalTask"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.Replace(System.Int32,System.Collections.Generic.List{Slickflow.Engine.Business.Entity.TaskReplacedEntity},Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Replace the task handlers under the current activity
            取代当前活动下的任务办理人员
            </summary>
            <param name="activityInstanceID"></param>
            <param name="replaced"></param>
            <param name="runner"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GenerateActivityAssignedUserIDs(System.Collections.Generic.List{Slickflow.Engine.Business.Entity.TaskReplacedEntity})">
            <summary>
            Generate userid list
            生成UserIds字符串
            </summary>
            <param name="userList"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.GenerateActivityAssignedUserNames(System.Collections.Generic.List{Slickflow.Engine.Business.Entity.TaskReplacedEntity})">
            <summary>
            Generate username list
            获取UserNames字符串
            </summary>
            <param name="userList"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.CancelTask(System.Int32,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Cancel task
            取消任务办理
            </summary>
            <param name="activityInstanceID"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TaskManager.Delete(System.Data.IDbConnection,System.Int64,System.Data.IDbTransaction)">
            <summary>
            Delete task
            任务删除
            </summary>
            <param name="conn"></param>
            <param name="taskID"></param>
            <param name="trans"></param>
        </member>
        <member name="T:Slickflow.Engine.Business.Manager.TransitionInstanceManager">
            <summary>
            Transition manager
            节点转移管理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TransitionInstanceManager.CreateTransitionInstanceObject(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.WfAppRunner,System.Byte)">
            <summary>
            Create transfer instance data
            创建转移实例数据
            </summary>
            <param name="processInstance"></param>
            <param name="transitionGUID"></param>
            <param name="fromActivityInstance"></param>
            <param name="toActivityInstance"></param>
            <param name="transitionType"></param>
            <param name="flyingType"></param>
            <param name="runner"></param>
            <param name="conditionParseResult"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TransitionInstanceManager.Insert(System.Data.IDbConnection,Slickflow.Engine.Business.Entity.TransitionInstanceEntity,System.Data.IDbTransaction)">
            <summary>
            Insert transition
            插入方法
            </summary>
            <param name="conn"></param>
            <param name="entity"></param>
            <param name="trans"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TransitionInstanceManager.Delete(System.Data.IDbConnection,System.Int32,System.Data.IDbTransaction)">
            <summary>
            Delete transition
            删除转移实例
            </summary>
            <param name="conn"></param>
            <param name="transitionInstanceID"></param>
            <param name="trans"></param>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TransitionInstanceManager.GetById(System.Int32)">
            <summary>
            Retrieve instance data based on ID
            根据ID获取实例数据
            </summary>
            <param name="transitionInstanceID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TransitionInstanceManager.GetEndTransition(System.String,System.String,System.String)">
            <summary>
            Get End transition Data
            获取结束转移数据
            </summary>
            <param name="appName"></param>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TransitionInstanceManager.GetLastTaskTransition(System.String,System.String,System.String)">
            <summary>
            Obtain the final transition entity data
            获取最后的转移实体数据
            </summary>
            <param name="appName"></param>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TransitionInstanceManager.GetWorkItemTransitonInstance(System.String,System.String)">
            <summary>
            Obtain a transition list of WorkItem type destination nodes
            获得去向节点是WorkItem类型的转移列表
            </summary>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TransitionInstanceManager.GetTransitonInstance(System.String,System.String,Slickflow.Engine.Common.ActivityTypeEnum)">
            <summary>
            Select data transition based on destination node type
            根据去向节点类型选择转移数据
            </summary>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <param name="toActivityType"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TransitionInstanceManager.GetTransitionInstanceList(System.String,System.String,System.String)">
            <summary>
            Obtain the list of transition data
            获取转移数据列表
            </summary>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <param name="version"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TransitionInstanceManager.GetTransitionInstanceList(System.String,System.String,System.Int32)">
            <summary>
            Get transition list
            获取转移数据列表
            </summary>
            <param name="appInstanceID"></param>
            <param name="processGUID"></param>
            <param name="processInstanceID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TransitionInstanceManager.GetTargetActivityInstanceList(System.Int32)">
            <summary>
            Get the list of activity instances that have been issued for the next step of the current node
            获取当前节点的下一步已经发出的活动实例列表
            </summary>
            <param name="fromActivityInstanceID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TransitionInstanceManager.GetTargetActivityInstanceList(System.Int32,Slickflow.Data.IDbSession)">
            <summary>
            Get the list of activity instances that have been issued for the next step of the current node
            获取当前节点的下一步已经发出的活动实例列表
            </summary>
            <param name="fromActivityInstanceID"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TransitionInstanceManager.GetTargetActivityInstanceIDs(System.Int32,Slickflow.Data.IDbSession)">
            <summary>
            Traverse the ID of the next activity instance
            遍历下一步活动实例的ID
            </summary>
            <param name="fromActivityInstanceID"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Business.Manager.TransitionInstanceManager.IsTransiionInstancedAndConditionParsedOK(System.String,System.Collections.Generic.IList{Slickflow.Engine.Business.Entity.TransitionInstanceEntity})">
            <summary>
            Determine whether the defined Transition has been instantiated and executed
            判读定义的Transition是否已经被实例化执行
            </summary>
            <param name="transitionGUID"></param>
            <param name="transitionInstanceList"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Common.ActionParameterInternal">
            <summary>
            Call the parameter encapsulation class of external API
            调用外部API的参数封装类
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.ActivityResource">
            <summary>
            Resources related to activity
            活动上的资源类
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.ActivityResource.AppRunner">
            <summary>
            Current process execution user
            当前流程执行用户
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.ActivityResource.NextActivityPerformers">
            <summary>
            Next activity list with execution personnel information
            带有执行人员信息的下一步节点列表
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.ActivityResource.ConditionKeyValuePair">
            <summary>
            Key value pair
            条件Key-Value对
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Common.ActivityResource.#ctor(Slickflow.Engine.Common.WfAppRunner,System.Collections.Generic.IDictionary{System.String,Slickflow.Engine.Common.PerformerList},System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Construct function
            构造函数
            </summary>
            <param name="runner"></param>
            <param name="nextActivityPerformers"></param>
            <param name="conditionKeyValuePair"></param>
        </member>
        <member name="M:Slickflow.Engine.Common.ActivityResource.GetPreviousPerformerList(System.Collections.Generic.IList{Slickflow.Engine.Common.KeyValuePairWrapper},System.String)">
            <summary>
            Obtain the list of performers handling the previous step
            获取上一步骤的办理人员列表
            </summary>
            <param name="previousActivityPerformers"></param>
            <param name="activityGUID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Common.ActivityResource.CreateNextActivityPerformers(System.String,System.String,System.String)">
            <summary>、
            Create a list of next activity performers
            创建下一步活动执行者列表
            </summary>
            <param name="activityGUID"></param>
            <param name="userID"></param>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Common.ActivityResource.CreateNextActivityPerformers(System.Collections.Generic.IList{Slickflow.Engine.Common.NodeView},System.String,System.String)">
            <summary>
            Create a list of next activity performers
            创建下一步活动执行者列表
            </summary>
            <param name="nextActivityTree"></param>
            <param name="userID"></param>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Common.ActivityResource.CreateNextActivityPerformers(System.String,System.Collections.Generic.IList{Slickflow.Module.Resource.Role})">
            <summary>
            Create a list of next activity performers
            创建下一步活动执行者列表
            </summary>
            <param name="activityGUID"></param>
            <param name="roleList"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Common.ActivityResource.CreateNextActivityPerformers(System.Collections.Generic.IDictionary{System.String,Slickflow.Engine.Common.PerformerList},System.String,System.Collections.Generic.IList{Slickflow.Module.Resource.Role})">
            <summary>
            Create a list of next activity performers
            创建下一步活动执行者列表
            </summary>
            <param name="nextActivityPerformers"></param>
            <param name="activityGUID"></param>
            <param name="roleList"></param>
        </member>
        <member name="M:Slickflow.Engine.Common.ActivityResource.CreateNextActivityPerformers(System.String,Slickflow.Engine.Common.PerformerList)">
            <summary>
            Create a list of next activity performers
            创建下一步活动执行者列表
            </summary>
            <param name="activityGUID"></param>
            <param name="performerList"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Common.ActivityStateEnum">
            <summary>
            Activity State
            节点运行状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityStateEnum.Ready">
            <summary>
            Ready
            准备状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityStateEnum.Running">
            <summary>
            Running
            运行状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityStateEnum.Completed">
            <summary>
            Completed
            完成状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityStateEnum.Suspended">
            <summary>
            Suspended
            挂起
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityStateEnum.Withdrawed">
            <summary>
            Withdrawed
            撤销状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityStateEnum.Sendbacked">
            <summary>
            Sendbacked
            退回状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityStateEnum.Cancelled">
            <summary>
            Cancelled
            系统内部标志取消
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityStateEnum.Terminated">
            <summary>
            Terminated
            非正常结束（比如超时自动终结）
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.ActivityTypeEnum">
            <summary>
            Activity Type
            活动类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityTypeEnum.Unknown">
            <summary>
            Unknown
            未知类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityTypeEnum.StartNode">
            <summary>
            Start Node
            开始事件节点
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityTypeEnum.EndNode">
            <summary>
            End Node
            结束事件节点
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityTypeEnum.IntermediateNode">
            <summary>
            Intermediated Event Node
            中间事件节点
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityTypeEnum.TaskNode">
            <summary>
            Task Node
            人工任务节点
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityTypeEnum.SubProcessNode">
            <summary>
            Sub Process Node
            子流程节点
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityTypeEnum.MultiSignNode">
            <summary>
            Multiple Instance Node
            多实例节点
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityTypeEnum.GatewayNode">
            <summary>
            Gateway Node
            网关节点
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityTypeEnum.ServiceNode">
            <summary>
            Service Node
            代码服务节点
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ActivityTypeEnum.ScriptNode">
            <summary>
            Script Node
            脚本节点
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.ApprovalStatusEnum">
            <summary>
            Approval Status
            审批状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ApprovalStatusEnum.Refused">
            <summary>
            Refused
            拒绝
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ApprovalStatusEnum.Null">
            <summary>
            Null (default)
            默认
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ApprovalStatusEnum.Agreed">
            <summary>
            Agreed
            同意
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.BackwardTypeEnum">
            <summary>
            Backward Type
            节点退回枚举类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.BackwardTypeEnum.Withdrawed">
            <summary>
            Withdrawed
            撤销
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.BackwardTypeEnum.Sendback">
            <summary>
            Sendback
            退回
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.BackwardTypeEnum.Reversed">
            <summary>
            Reversed
            返签
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.BoundaryTypeEnum">
            <summary>
            Event Boundary Type
            边界类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.BoundaryTypeEnum.None">
            <summary>
            None
            缺省
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.BoundaryTypeEnum.Boundary">
            <summary>
            Boundary
            边界
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.BoundaryTypeEnum.Throw">
            <summary>
            Throw
            抛出
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.BoundaryTypeEnum.Catch">
            <summary>
            Catch
            捕获
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.ConditionParseResultEnum">
            <summary>
            The enumeration type of conditional parsing results
            条件解析结果的枚举类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ConditionParseResultEnum.NotPassed">
            <summary>
            Not passed
            未通过
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ConditionParseResultEnum.Passed">
            <summary>
            Passed
            满足条件
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.ConditionTypeEnum">
            <summary>
            Condition Type
            条件类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ConditionTypeEnum.Expression">
            <summary>
            Expression
            表达式
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ConditionTypeEnum.Rule">
            <summary>
            Rule
            规则
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.ControlParameterSheet">
            <summary>
            List of dynamic variable control sheet
            动态变量控制列表清单
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.ControlParameterSheet.ConditionalVariables">
            <summary>
            Conditional parameter variables, used for ConditionalStart/ConditionalTask
            条件参数变量，用于ConditionalStart/ConditionalTask
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.ControlParameterSheet.SignForwardType">
            <summary>
            加签类型
            Run time (dynamic) signing of flow variables
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.ControlParameterSheet.SignForwardCompareType">
            <summary>
            Approval rate type: count/percentage
            加签通过率类型 count/percentage
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.ControlParameterSheet.SignForwardCompleteOrder">
            <summary>
            Order of signing completion
            加签完成次序
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.ControlParameterSheet.RecreatedMultipleInstanceWhenResending">
            <summary>
            Handling the situation of returning as a countersignature node and running it again
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.ControlParameterSheet.EOrJoinTokenPassCount">
            <summary>
            Enhance merged control variables
            增强合并控制变量
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.ControlParameterSheet.IsCancellingBrothersNode">
            <summary>
            Wether to cancel adjacent nodes
            是否取消相邻节点
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.CrossOverGatewayDetail">
            <summary>
            Cross gateway object encapsulation
            跨网关对象封装
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.CrossOverGatewayDetail.IsCrossOverGateway">
            <summary>
            Wether to cross over gateway
            是否跨越网关
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.CrossOverGatewayDetail.ParallelledChoicesNodes">
            <summary>
            Parallelled choices ndoes
            并行可选择节点
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.CrossOverGatewayDetail.PreviousActivityInstance">
            <summary>
            Previous actvity instance
            前置活动实例
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.EventTriggerEnum">
            <summary>
            Event Trigger Type
            事件触发类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.EventTriggerEnum.None">
            <summary>
            None
            空白
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.EventTriggerEnum.Timer">
            <summary>
            Timer
            定时
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.EventTriggerEnum.Message">
            <summary>
            Message
            消息
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.EventTriggerEnum.Error">
            <summary>
            Error
            错误
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.EventTriggerEnum.Escalation">
            <summary>
            Escalation
            升级
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.EventTriggerEnum.Cancel">
            <summary>
            Cancel
            取消
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.EventTriggerEnum.Compensation">
            <summary>
            Compensation
            补偿
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.EventTriggerEnum.Conditional">
            <summary>
            Conditional
            条件
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.EventTriggerEnum.Link">
            <summary>
            Link
            链接
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.EventTriggerEnum.Signal">
            <summary>
            Signal
            信号
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.EventTriggerEnum.Terminate">
            <summary>
            Terminate
            终结
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.FormOuter">
            <summary>
            Form Outer Entity
            表单实体
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.FormOuter.Name">
            <summary>
            Form Name
            表单名称
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.FormOuter.OuterCode">
            <summary>
            Form Code Outer
            表单编码
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.FormOuter.OuterID">
            <summary>
            Form ID Outer
            表单ID
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.GatewayDirectionEnum">
            <summary>
            Process branch routing selection
            流程分支路由选择
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.GatewayDirectionEnum.None">
            <summary>
            None
            未指定
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.GatewayDirectionEnum.OrSplit">
            <summary>
            Or Split
            或分支
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.GatewayDirectionEnum.XOrSplit">
            <summary>
            XOr Split
            异或分支
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.GatewayDirectionEnum.AndSplit">
            <summary>
            And Split
            并行分支
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.GatewayDirectionEnum.AndSplitMI">
            <summary>
            And Split for multiple instance
            多实例并行分支
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.GatewayDirectionEnum.ApprovalOrSplit">
            <summary>
            Or Split for Approval 
            审核网关分支
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.GatewayDirectionEnum.OrJoin">
            <summary>
            Or Join
            或合并
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.GatewayDirectionEnum.XOrJoin">
            <summary>
            XOr Join
            异或合并
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.GatewayDirectionEnum.EOrJoin">
            <summary>
            Enhanced Or Join
            增强或合并
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.GatewayDirectionEnum.AndJoin">
            <summary>
            And Join
            并行合并
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.GatewayDirectionEnum.AndJoinMI">
            <summary>
            And Join for multiple instance
            与合并(多实例)
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.GatewayJoinPassEnum">
            <summary>
            Merge through type settings
            合并通过类型设置
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.GatewayJoinPassEnum.None">
            <summary>
            Node
            空白
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.GatewayJoinPassEnum.Count">
            <summary>
            Branches count for merging pass
            满足分支数目，才可以通过
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.GatewayJoinPassEnum.Forced">
            <summary>
            The forced branch to merge passing
            满足强制必须合并分支，才可以通过
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.GatewaySplitJoinTypeEnum">
            <summary>
            Routing branch or merge type
            路由分支或合并类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.GatewaySplitJoinTypeEnum.Split">
            <summary>
            Split
            分支类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.GatewaySplitJoinTypeEnum.Join">
            <summary>
            Join
            合并类型
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.ImplementationTypeEnum">
            <summary>
            Enumeration types of task implementation types
            任务实现类型的枚举类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ImplementationTypeEnum.Manual">
            <summary>
            Manual
            人工参与
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ImplementationTypeEnum.Plugin">
            <summary>
            Plugin
            插件方式执行
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ImplementationTypeEnum.Script">
            <summary>
            Script
            脚本方式
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ImplementationTypeEnum.Automantic">
            <summary>
            Automantic
            自动类型
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.JobTimerStatusEnum">
            <summary>
            Job Timer Status
            作业定时器状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.JobTimerStatusEnum.None">
            <summary>
            None
            空白
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.JobTimerStatusEnum.Ready">
            <summary>
            Ready
            预备
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.JobTimerStatusEnum.Completed">
            <summary>
            Completed
            关闭
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.JobTimerTypeEnum">
            <summary>
            Job Timer Type
            作业定时器类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.JobTimerTypeEnum.None">
            <summary>
            None
            空白
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.JobTimerTypeEnum.Timer">
            <summary>
            Timer
            定时
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.JobTimerTypeEnum.Conditional">
            <summary>
            Conditional
            条件
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.JobTimerTypeEnum.EMail">
            <summary>
            EMail
            邮件
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.JobTimerTypeEnum.Message">
            <summary>
            Message
            消息
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.JumpOptionEnum">
            <summary>
            Jump Options 
            跳转选项
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.JumpOptionEnum.Default">
            <summary>
            Default
            默认
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.JumpOptionEnum.Startup">
            <summary>
            Process initiation location
            流程发起位置
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.JumpOptionEnum.End">
            <summary>
            End position of process
            流程结束位置
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.KeyValuePairWrapper">
            <summary>
            Key value pair wrapper for Webapi
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.KeyValuePairWrapper.ActivityGUID">
            <summary>
            ActivityGUID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.KeyValuePairWrapper.PerformerList">
            <summary>
            Performer List
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Common.KeyValuePairWrapper.#ctor">
            <summary>
            default constructor will be required for binding, the Web.MVC binder will invoke this and set the Key and Value accordingly.
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Common.KeyValuePairWrapper.#ctor(System.String,Slickflow.Engine.Common.PerformerList)">
            <summary>
            a convenience method which allows you to set the values while sorting
            </summary>
            <param name="activityGUID"></param>
            <param name="performerList"></param>
        </member>
        <member name="T:Slickflow.Engine.Common.LogEventType">
            <summary>
            Log Event Type
            日志事件类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.LogEventType.Warnning">
            <summary>
            Warning
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.LogEventType.Exception">
            <summary>
            Exception
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.LogEventType.Error">
            <summary>
            Error
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.LogPriority">
            <summary>
            Log Priority
            日志优先级
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.LogPriority.Emergency">
            <summary>
            Emergency
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.LogPriority.High">
            <summary>
            High
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.LogPriority.Normal">
            <summary>
            Normal
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.LogPriority.Low">
            <summary>
            Low
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.MessageDirectionEnum">
            <summary>
            Message Direction Type
            消息接收类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.MessageDirectionEnum.None">
            <summary>
            Default
            默认
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.MessageDirectionEnum.Catch">
            <summary>
            Catch
            捕获消息
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.MessageDirectionEnum.Throw">
            <summary>
            Throw
            抛出消息
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.NextPerformerIntTypeEnum">
            <summary>
            The next step is to handle the user specified type
            Types of user operations used internally for execution
            下一步办理用户指定类型
            内部使用的执行用户操作类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.NextPerformerIntTypeEnum.Specific">
            <summary>
            Clearly specify the steps and role list
            明确指定步骤和角色列表
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.NextPerformerIntTypeEnum.Definition">
            <summary>
            Read node definition source
            Including system defined roles and user lists
            读取节点定义来源
            包括系统定义的角色及用户列表
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.NextPerformerIntTypeEnum.Single">
            <summary>
            Simulate testing using a single user
            模拟使用单一用户进行的测试
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.NextPerformerIntTypeEnum.Traced">
            <summary>
            It has already passed the previous step and is intended for return
            已经流转过得上一步，用于退回
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.NextStepInfo">
            <summary>
            Next Step Info
            下一步的步骤信息
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.NextStepInfo.Message">
            <summary>
            Step info description
            步骤消息描述
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.NextStepInfo.NextActivityRoleUserTree">
            <summary>
            Next Activity Role User Tree
            下一步活动角色用户树
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.NextStepInfo.NextActivityPerformers">
            <summary>
            Next activity pre selection of executing performers
            下一步活动预选执行用户
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.NextStepUtility">
            <summary>
            Next Step Utility
            下一步工具类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Common.NextStepUtility.DeserializeNextStepPerformers(System.String)">
            <summary>
            Deserialize the next personnel list based on the text content
            根据文本内容反序列化下一步人员列表
            </summary>
            <param name="jsonNextStep"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Common.NextStepUtility.SerializeNextStepPerformers(System.Collections.Generic.IDictionary{System.String,Slickflow.Engine.Common.PerformerList})">
            <summary>
            List of personnel involved in deserialization steps
            反序列化步骤人员列表
            </summary>
            <param name="nextSteps"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Common.NextStepUtility.CreateNextStepPerformerList(System.String,System.String,System.String)">
            <summary>
            Generate the next step performer list
            生成下一步人员列表
            </summary>
            <param name="activityGUID"></param>
            <param name="userID"></param>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Common.NodeImage">
            <summary>
            Activity running info
            流转信息
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.NodeImage.ID">
            <summary>
            Activity Instance ID
            节点实例ID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.NodeImage.ActivityName">
            <summary>
            Activity Name
            节点名称
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.NodePassedResult">
            <summary>
            Node approval passed result
            节点审批通过结果
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.NodePassedResult.NodePassedType">
            <summary>
            Node approval passed type
            节点通过类型
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Common.NodePassedResult.#ctor(Slickflow.Engine.Common.NodePassedTypeEnum)">
            <summary>
            Constructor
            构造函数
            </summary>
            <param name="passedType"></param>
        </member>
        <member name="M:Slickflow.Engine.Common.NodePassedResult.Create(Slickflow.Engine.Common.NodePassedTypeEnum)">
            <summary>
            Create method
            创建方法
            </summary>
            <param name="passedType"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Common.NodePassedResult.CreateByApprovalStatus(System.Int16)">
            <summary>
            Create result objects based on approval status
            根据审批状态创建结果对象
            </summary>
            <param name="approvalStatus"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Common.NodePassedTypeEnum">
            <summary>
            Node Approval type
            节点通过类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.NodePassedTypeEnum.Default">
            <summary>
            Default
            缺省状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.NodePassedTypeEnum.Passed">
            <summary>
            Approval passed
            允许通过
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.NodePassedTypeEnum.NotPassed">
            <summary>
            Approval not passed
            拒绝状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.NodePassedTypeEnum.NeedToBeMoreApproved">
            <summary>
            More approval and consent are needed
            需要更多审批同意
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.NodeView">
            <summary>
            View objects of workflow flow nodes
            工作流流转节点的视图对象
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.NodeView.ActivityGUID">
            <summary>
            ActivityGUID
            活动节点GUID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.NodeView.ActivityName">
            <summary>
            Activity Name
            活动节点名称
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.NodeView.ActivityType">
            <summary>
            Activity Type
            活动类型
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.NodeView.ActivityCode">
            <summary>
            Activity Code
            活动节点编码
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.NodeView.ActivityUrl">
            <summary>
            Activity Url
            页面地址
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.NodeView.MyProperties">
            <summary>
            Custom attributes associated with activities
            JSON data format
            活动关联的自定义属性
            JSON数据格式
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.NodeView.Roles">
            <summary>
            Role List
            角色列表
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.NodeView.Users">
            <summary>
            User List
            用户列表
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.NodeView.Partakers">
            <summary>
            Partaker List
            参与者列表
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.NodeView.IsSkipTo">
            <summary>
            Wether to skip to
            是否跳过
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.NodeView.ReceiverType">
            <summary>
            Receiver Type
            接收者类型
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.PackageTypeEnum">
            <summary>
            Process Package Type
            流程类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.PackageTypeEnum.Package">
            <summary>
            Collaboration Package
            协作流程包 
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.PackageTypeEnum.Pool">
            <summary>
            Pool Process
            泳道流程 
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.Partaker">
            <summary>
            Partaker entity
            参与者实体
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.Partaker.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.Partaker.Name">
            <summary>
            Partaker name
            参与者名称
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.Partaker.OuterCode">
            <summary>
            Partaker code
            参与者代码
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.Partaker.OuterID">
            <summary>
            Partaker id
            参与者ID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.Partaker.OuterType">
            <summary>
            Partaker type
            参与者类型
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.PartakerTypeEnum">
            <summary>
            Partaker Type
            参与者类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.PartakerTypeEnum.Role">
            <summary>
            Role
            角色
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.PartakerTypeEnum.User">
            <summary>
            User
            用户
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.Performer">
            <summary>
            The performer object of the task
            任务的执行者对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Common.Performer.#ctor(System.String,System.String)">
            <summary>
            Construct mehtod
            构造函数
            </summary>
            <param name="userID"></param>
            <param name="userName"></param>
        </member>
        <member name="P:Slickflow.Engine.Common.Performer.UserID">
            <summary>
            User ID
            用户ID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.Performer.UserName">
            <summary>
            User Name
            用户名称
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.PerformerList">
            <summary>
            Performer List
            执行者列表类
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.PerformerBuilder">
            <summary>
            Performer Builder
            执行者构造类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Common.PerformerBuilder.CreatePerformerList(System.String,System.String)">
            <summary>
            Create a list of activity node performers
            创建活动节点执行者列表
            </summary>
            <param name="userID"></param>
            <param name="userName"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Common.PerformerBuilder.CreatePerformerList(System.Collections.Generic.IList{Slickflow.Module.Resource.Role})">
            <summary>
            Create a list of activity node performers
            创建活动节点执行者列表
            </summary>
            <param name="roleList"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Common.PerformerBuilder.GenerateActivityAssignedUserIDs(Slickflow.Engine.Common.PerformerList)">
            <summary>
            Generate a list of task performers ID strings
            生成任务办理人ID字符串列表
            </summary>
            <param name="performerList"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Common.PerformerBuilder.GenerateActivityAssignedUserNames(Slickflow.Engine.Common.PerformerList)">
            <summary>
            Generate a list of task performer name strings
            生成办理人名称的字符串列表
            </summary>
            <param name="performerList"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Common.PreviousStepInfo">
            <summary>
            Previous Step Info
            上一步活动信息
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.PreviousStepInfo.PreviousActivityRoleUserTree">
            <summary>
            Previous Activity Role User Tree
            上一步活动角色用户树
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.PreviousStepInfo.HasGatewayPassed">
            <summary>
            Has ever passed a gateway node
            是否经历过网关节点
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.ProcessStartTypeEnum">
            <summary>
            Process Startup Type
            流程启动类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ProcessStartTypeEnum.None">
            <summary>
            None
            默认空白
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ProcessStartTypeEnum.Timer">
            <summary>
            Timer
            定时启动
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ProcessStartTypeEnum.Message">
            <summary>
            Message
            消息启动
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.ProcessEndTypeEnum">
            <summary>
            Process End Type
            流程结束类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ProcessEndTypeEnum.None">
            <summary>
            None
            默认空白
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ProcessEndTypeEnum.Timer">
            <summary>
            Timer
            定时结束
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ProcessEndTypeEnum.Message">
            <summary>
            Message
            消息结束
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.ProcessStateEnum">
            <summary>
            Process State
            流程状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ProcessStateEnum.NotStart">
            <summary>
            Not Startup
            未启动，流程记录为空
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ProcessStateEnum.Ready">
            <summary>
            Ready
            准备状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ProcessStateEnum.Running">
            <summary>
            Running
            运行状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ProcessStateEnum.Completed">
            <summary>
            Completed
            完成
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ProcessStateEnum.Suspended">
            <summary>
            Suspended
            挂起
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ProcessStateEnum.Canceled">
            <summary>
            Canceled
            取消
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ProcessStateEnum.Discarded">
            <summary>
            Discarded
            废弃
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ProcessStateEnum.Terminated">
            <summary>
            Terminated
            自然终止（比如超期）
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.ProcessVariableTypeEnum">
            <summary>
            Process Variable Type
            变量范围类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ProcessVariableTypeEnum.Process">
            <summary>
            Process
            流程
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ProcessVariableTypeEnum.Activity">
            <summary>
            Activity
            活动
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.ReceiverTypeEnum">
            <summary>
            Receiver Type
            接受者类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ReceiverTypeEnum.Default">
            <summary>
            Default
            默认
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ReceiverTypeEnum.Superior">
            <summary>
            Superior
            上级
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ReceiverTypeEnum.Compeer">
            <summary>
            Compeer
            同级
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ReceiverTypeEnum.Subordinate">
            <summary>
            Subordinate
            下属
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.ReceiverTypeEnum.ProcessInitiator">
            <summary>
            Process Initiator
            流程发起人
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.SendBackOperationTypeEnum">
            <summary>
            Sendback operation processing type
            退回操作处理类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.SendBackOperationTypeEnum.Default">
            <summary>
            Default
            缺省值
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.SendBackOperationTypeEnum.Normal">
            <summary>
            Normal
            普通模式
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.SendBackOperationTypeEnum.MultipleInstance">
            <summary>
            Multiple Instance
            多实例节点模式
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.SendBackOperationTypeEnum.MISFirstOneIsRunning">
            <summary>
            第一个多实例子节点的场景
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.SendBackOperationTypeEnum.MISOneIsRunning">
            <summary>
            串行多实例节点的中间节点
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.SendBackOperationTypeEnum.MISPreviousIsLastOne">
            <summary>
            当前运行节点上一步是最后一个多实例子节点的场景
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.SendBackOperationTypeEnum.MIPAllIsInReadyState">
            <summary>
            并行多实例刚发出(子节点全部处于待办状态)
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.SendBackOperationTypeEnum.MIPOneIsRunning">
            <summary>
            并行多实例中间节点，只有一个是运行状态，其他的是待办状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.SendBackOperationTypeEnum.MIPSeveralIsRunning">
            <summary>
            并行多实例中间节点，有已经完成的
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.SendBackOperationTypeEnum.MIPAllIsInCompletedState">
            <summary>
            当前运行节点上一步是最后一个多实例子节点的场景
            此时并行多实例节点状态完成
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.SendBackOperationTypeEnum.NormalParalleledRunningNodesQuiredByTaskID">
            <summary>
            多个并行节点存在，但不是会签等多实例节点
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.SendBackOperationTypeEnum.GatewayFollowedByParalleledNodes">
            <summary>
            多个并行节点存在，但不是会签多实例节点
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.SendBackOperationTypeEnum.ExistedComplexParalleledNodes">
            <summary>
            其它复杂模式的多个并行节点存在
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.SignForwardStepInfo">
            <summary>
            Sign Forward Step Info
            加签活动信息
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.SignForwardStepInfo.SignForwardRoleUserTree">
            <summary>
            Sign Forward Role User Tree
            加签活动角色用户树
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.SubInfo">
            <summary>
            子流程对象
            Sub Process Info
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.SubInfo.SubID">
            <summary>
            Sub Process ID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.SubInfo.SubProcessGUID">
            <summary>
            Sub Process GUID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.SubInfo.SubProcessName">
            <summary>
            Sub Process Name
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.SubInfo.SubType">
            <summary>
            Sub Process Type
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.SubInfo.SubVar">
            <summary>
            Sub Process Variable
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.SubProcessTypeEnum">
            <summary>
            Sub Process Type
            子流程类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.SubProcessTypeEnum.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.SubProcessTypeEnum.Nested">
            <summary>
            Nested
            嵌入式类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.SubProcessTypeEnum.Referenced">
            <summary>
            Referenced
            外部引用类型
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.TaskEMailSentStatusEnum">
            <summary>
            Task Email Sent Status
            邮件发送状态类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TaskEMailSentStatusEnum.UnSent">
            <summary>
            Unsent
            未发送
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TaskEMailSentStatusEnum.Sent">
            <summary>
            Sent
            发送(smtp不保证一定发送成功）
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.TaskStateEnum">
            <summary>
            Task State Type
            任务状态类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TaskStateEnum.Waiting">
            <summary>
            Waiting
            等待办理
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TaskStateEnum.Reading">
            <summary>
            Reading
            办理状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TaskStateEnum.Completed">
            <summary>
            Completed
            正常完成
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TaskStateEnum.Withdrawed">
            <summary>
            Withdrawed
            撤销
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TaskStateEnum.SendBacked">
            <summary>
            Sendback
            退回
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TaskStateEnum.Closed">
            <summary>
            Closed
            多人可以办理，当别人办理完后，置关闭状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TaskStateEnum.Canceled">
            <summary>
            Canceled
            没有办理，直接取消
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.TaskTypeEnum">
            <summary>
            Task Type
            任务类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TaskTypeEnum.Manual">
            <summary>
            Manual
            人工
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TaskTypeEnum.Automantic">
            <summary>
            Automantic
            自动化
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.TransitionDirectionTypeEnum">
            <summary>
            Transition Direction Type
            转移方向类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TransitionDirectionTypeEnum.Forward">
            <summary>
            Foward
            前进方向
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TransitionDirectionTypeEnum.Bidirection">
            <summary>
            Bidirection
            可双向
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TransitionDirectionTypeEnum.Loop">
            <summary>
            Loop
            子循环
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.TransitionFlyingTypeEnum">
            <summary>
            Transition Flying Type
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TransitionFlyingTypeEnum.NotFlying">
            <summary>
            Not Flying
            默认
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TransitionFlyingTypeEnum.ForwardFlying">
            <summary>
            Forward Flying
            向前（跳转）
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TransitionFlyingTypeEnum.BackwardFlying">
            <summary>
            Backward Flying
            向后（跳转）
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.TransitionImage">
            <summary>
            Transition Image
            转移信息
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.TransitionImage.ID">
            <summary>
            Transition Instance ID
            转移实例ID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.TransitionImage.TransitionGUID">
            <summary>
            Transition GUID
            转移GUID
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.TransitionTypeEnum">
            <summary>
            Transition Type
            转移类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TransitionTypeEnum.Forward">
            <summary>
            Forward
            前行
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TransitionTypeEnum.Withdrawed">
            <summary>
            Withdrawed
            撤销
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TransitionTypeEnum.Sendback">
            <summary>
            Sendback
            退回
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TransitionTypeEnum.Reversed">
            <summary>
            Reversed
            返签
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TransitionTypeEnum.Backward">
            <summary>
            Backward
            including reverse, sendback, and withdrawed types)
            后退
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.TransitionTypeEnum.Loop">
            <summary>
            Loop
            自身循环
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.WfAppRunner">
            <summary>
            Process executor (operator of business applications)
            Explanation: WfAppRunner is the object for transmitting process flow parameters, 
            including business data, resource data, and process definition data required for engine execution.
            WfAppRunner Json Format：
            {
                "UserID":"10",
                "UserName":"Long",
                "AppName":"SamplePrice",
                "AppInstanceID":"100",
                "ProcessGUID":"072af8c3-482a-4b1c-890b-685ce2fcc75d"
            }
            流程执行人(业务应用的办理者)
            说明：WfAppRunner是流程流转参数的传递对象，传递引擎执行需要的业务数据、资源数据和流程定义数据等。
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.AppName">
            <summary>
            Business Data: Application Name
            业务数据：应用名称
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.AppInstanceID">
            <summary>
            Business data: Application instance ID (such as document number)
            业务数据：应用实例ID（比如单据票据编号）
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.AppInstanceCode">
            <summary>
            Business data: Application instance ID (such as document code)
            业务数据：应用实例ID（比如单据票据代码）
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.ProcessGUID">
            <summary>
            Process data: Process GUID
            流程数据：流程GUID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.ProcessCode">
            <summary>
            Process data: Process Code
            流程数据：流程代码
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.Version">
            <summary>
            Process data: Process Version
            流程数据：流程版本
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.UserID">
            <summary>
            User data: User ID
            用户数据：用户ID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.UserName">
            <summary>
            User data: User Name
            流程数据：用户名称
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.CompanyID">
            <summary>
            Company ID
            公司ID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.TaskID">
            <summary>
            Process Data: Task ID
            Task ID, distinguishing the unique task in the current user's ActiveInstance list
            流程数据：待办任务ID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.ActivityInstanceID">
            <summary>
            Process data: Activity instance ID
            流程数据：活动实例ID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.ApprovalStatus">
            <summary>
            Approval Status
            审批结果状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.WfAppRunner.conditions">
            <summary>
            Conditions
            条件
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.Conditions">
            <summary>
            Process data: conditions parameters
            流程数据：条件参数
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.DynamicVariables">
            <summary>
            Process data: dynamic variables
            流程数据：动态变量
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.ControlParameterSheet">
            <summary>
            Process data: control parameter sheet
            流程数据：控制参数
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.NextActivityPerformers">
            <summary>
            Process data: List of performers for the next step of handling
            流程数据：下一步办理人员列表
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.NextPerformerType">
            <summary>
            Process data: performer type for the next step of handling
            流程数据：下一步执行类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.WfAppRunner.DelegateEventList">
            <summary>
            Deleage Event
            委托事件
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfAppRunner.MessageTopic">
            <summary>
            Topic used for message initiation
            用于消息启动时的主题
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.WfBackwardTaskReceiver">
            <summary>
            Process reverse, withdraw, sendback task receiver
            流程返签、撤销和退回接收人的实体对象
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfBackwardTaskReceiver.UserID">
            <summary>
            User ID
            用户ID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfBackwardTaskReceiver.UserName">
            <summary>
            User Name
            用户名称
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Common.WfBackwardTaskReceiver.ActivityName">
            <summary>
            Activity Name
            活动名称
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Common.WfBackwardTaskReceiver.Instance(System.String,System.String,System.String)">
            <summary>
            Construct an instance of WfBackwardReceiver
            构造WfBackwardReceiver实例
            </summary>
            <param name="userID"></param>
            <param name="userName"></param>
            <param name="backwardToActivityName"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Common.WfDefine">
            <summary>
            Common Definition Classes
            常用定义类
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.WfXpdlException">
            <summary>
            Workflow XML Definition File Exception Class
            工作流xml定义文件异常类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Common.WfXpdlException.#ctor(System.String)">
            <summary>
            Constructor function
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Slickflow.Engine.Common.WfXpdlException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor function
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="T:Slickflow.Engine.Common.WithdrawOperationTypeEnum">
            <summary>
            Withdraw operation processing type
            MIS: Multiple Instance Sequence 多实例串行
            MIP: Multiple Instance Parallel 多实例并行
            撤销操作处理类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.WithdrawOperationTypeEnum.Default">
            <summary>
            Default
            缺省值
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.WithdrawOperationTypeEnum.Normal">
            <summary>
            Normal
            普通模式
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.WithdrawOperationTypeEnum.MISFirstOneIsRunning">
            <summary>
            The scene of the first multi instance node
            第一个多实例子节点的场景
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.WithdrawOperationTypeEnum.MISOneIsRunning">
            <summary>
            Intermediate nodes of serial multi instance nodes
            串行多实例节点的中间节点
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.WithdrawOperationTypeEnum.MISPreviousIsLastOne">
            <summary>
            The previous step on the current running node is the scenario of the last multi instance node
            当前运行节点上一步是最后一个多实例子节点的场景
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.WithdrawOperationTypeEnum.MIPAllIsInReadyState">
            <summary>
            Parallel multiple instances just sent out (all child nodes are in ready state)
            并行多实例刚发出(子节点全部处于待办状态)
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.WithdrawOperationTypeEnum.MIPSeveralIsRunning">
            <summary>
            Parallel multi instance intermediate nodes with completed ones
            并行多实例中间节点，有已经完成的
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.WithdrawOperationTypeEnum.MIPPreviousIsLastOne">
            <summary>
            The previous step on the current running node is the scenario of the last multi instance node
            当前运行节点上一步是最后一个多实例子节点的场景
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.WithdrawOperationTypeEnum.GatewayFollowedByParalleledNodes">
            <summary>
            The presence of multiple parallel nodes caused by the front-end gateway is not a sign off of multiple instance nodes
            前置网关引起的多个并行节点存在，不是会签多实例节点
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.WithdrawOperationTypeEnum.ExistedComplexParalleledNodes">
            <summary>
            Multiple parallel nodes exist in other complex patterns
            其它复杂模式的多个并行节点存在
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.WorkflowException">
            <summary>
            Process business data access exception class
            流程业务数据访问异常类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Common.WorkflowException.#ctor(System.String)">
            <summary>
            Constructor function
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Slickflow.Engine.Common.WorkflowException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor function
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="T:Slickflow.Engine.Common.WorkItemTypeEnum">
            <summary>
            WorkItem type
            工作项类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.WorkItemTypeEnum.NonWorkItem">
            <summary>
            Non-WorkItem
            StartNode, EndNode, GatewayNode, IntermediateNode
            非工作项
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Common.WorkItemTypeEnum.IsWorkItem">
            <summary>
            WorkItem
            TaskNode, MultipleInstanceNode
            工作项
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Common.XmlDefinitionException">
            <summary>
            XML File Definition Exception
            XML 文件定义异常类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Common.XmlDefinitionException.#ctor(System.String)">
            <summary>
            Constructor function
            </summary>
            <param name="message"></param>
        </member>
        <member name="M:Slickflow.Engine.Common.XmlDefinitionException.#ctor(System.String,System.Exception)">
            <summary>
            Constructor function
            </summary>
            <param name="message"></param>
            <param name="ex"></param>
        </member>
        <member name="T:Slickflow.Engine.Config.JobAdminConfig">
            <summary>
            JOB Administration Variables Setting
            作业参数定义
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Config.JobAdminConfig.EMailSendUtility_SendEMailFlag">
            <summary>
            email sending flag
            是否需要发送邮件的标志
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Config.JobAdminConfig.EMailSendUtility_LocalHostWebApp">
            <summary>
            Local Web App
            流程关联的应用地址
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Config.JobAdminConfig.EMailSendUtility_SendEMailAccount">
            <summary>
            EMail Account
            邮件发送账户
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Config.JobAdminConfig.EMailSendUtility_SendEMailPassword">
            <summary>
            EMail Accoutn Password
            邮件发送账户的密码
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Config.JobAdminConfig.EMailSendUtility_SendEMailHost">
            <summary>
            EMail send host
            邮件发送的主机
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Config.JobAdminConfig.EMailSendUtility_SendEMailHostPort">
            <summary>
            EMail send host port
            哟经发送端口
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Config.WfConfig">
            <summary>
            Workflow Paramters Configuration
            引擎环境变量配置
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Config.WfConfig.EXPIRED_DAYS">
            <summary>
            BPMN file cache expired days
            缓存过期天数设置
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Config.WfConfig.EXPIRED_DAYS_ENABLED">
            <summary>
            BPMN file cache enabled true/false
            是否设置缓存选项
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Config.WfConfig.EXTERNAL_SERVICE_FILE_PATH">
            <summary>
            Local Service File Path, When there is a localservice delegate event, 
            will fire to the external method
            本地服务文件路径设置，用于调用外部服务dll
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.ActivityForwardContext">
            <summary>
            Activity node execution context object
            活动节点执行上下文对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.ActivityForwardContext.#ctor(Slickflow.Engine.Xpdl.IProcessModel,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Common.ActivityResource,System.Boolean)">
            <summary>
            Context object on the starting node
            开始节点上的上下文对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.ActivityForwardContext.#ctor(Slickflow.Engine.Business.Entity.TaskViewEntity,Slickflow.Engine.Xpdl.IProcessModel,Slickflow.Engine.Common.ActivityResource,System.Boolean,Slickflow.Data.IDbSession)">
            <summary>
            Context object for task node execution
            任务节点执行的上下文对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.ActivityForwardContext.#ctor(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Xpdl.IProcessModel,Slickflow.Engine.Common.ActivityResource,System.Boolean,Slickflow.Data.IDbSession)">
            <summary>
            Interrupt event type activity instance execution context object
            Interrupt事件类型活动实例执行上下文对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.ActivityForwardContext.CreateStartupContext(Slickflow.Engine.Xpdl.IProcessModel,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Common.ActivityResource)">
            <summary>
            Context object for initiating the process
            启动流程的上下文对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.ActivityForwardContext.CreateRunningContextByTask(Slickflow.Engine.Business.Entity.TaskViewEntity,Slickflow.Engine.Xpdl.IProcessModel,Slickflow.Engine.Common.ActivityResource,System.Boolean,Slickflow.Data.IDbSession)">
            <summary>
            Create task execution context object
            创建任务执行上下文对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.ActivityForwardContext.CreateRunningContextByActivity(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Xpdl.IProcessModel,Slickflow.Engine.Common.ActivityResource,System.Boolean,Slickflow.Data.IDbSession)">
            <summary>
            Interrupt event type creates activity execution context object
            Interrupt事件类型创建活动执行上下文对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.ActivityForwardContext.CreateJumpforwardContext(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Xpdl.IProcessModel,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Common.ActivityResource)">
            <summary>
            Create process jump context object
            创建流程跳转上下文对象
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.BackwardContext">
            <summary>
            Context object during process backward processing
            流程回退处理时的上下文对象
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Event.WfEventArgs">
            <summary>
            Workflow Event
            工作流Event
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Core.Event.WfEventArgs.WfExecutedResult">
            <summary>
            Workflow Executed REsult
            工作项执行结果
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Event.WfEventArgs.#ctor(Slickflow.Engine.Core.Result.WfExecutedResult)">
            <summary>
            Constructor function
            </summary>
            <param name="result"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Parser.NextStepParser">
            <summary>
            Next Step Parser
            下一步的步骤列表读取类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Parser.NextStepParser.GetNextStepInfo(Slickflow.Module.Resource.IResourceService,Slickflow.Engine.Common.WfAppRunner,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Next step of the process: information acquisition
            流程下一步信息获取
            </summary>
            <param name="resourceService"></param>
            <param name="runner"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Parser.NextStepParser.GetNextActivityPerformersPriliminary(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Obtain the list of performer for the pre selection steps
            获取预选步骤人员列表
            </summary>
            <param name="runner"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Parser.NextStepParser.GetNextActivityRoleUserTree(Slickflow.Module.Resource.IResourceService,Slickflow.Engine.Common.WfAppRunner,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            According to the application, obtain the next node list of the process, including role users
            根据应用获取流程下一步节点列表，包含角色用户
            </summary>
            <param name="resourceService"></param>
            <param name="runner"></param>
            <param name="condition"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Parser.NextStepParser.AppendUserList(System.Collections.Generic.IList{Slickflow.Module.Resource.User},Slickflow.Module.Resource.User)">
            <summary>
            Append a single user
            增加单个用户
            </summary>
            <param name="existUserList"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Parser.NextStepParser.AppendUserList(System.Collections.Generic.IList{Slickflow.Module.Resource.User},System.Collections.Generic.IList{Slickflow.Module.Resource.User})">
            <summary>
            Append User List
            添加用户列表
            </summary>
            <param name="existUserList"></param>
            <param name="newUserList"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.Parser.PreviousStepChecker">
            <summary>
            Previous Activity Node Parser
            上一步活动节点解析器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Parser.PreviousStepChecker.GetPreviousActivityTree(System.Int32,System.Boolean@)">
            <summary>
            Retrieve the previous node tree
            获取上一步节点树
            </summary>
            <param name="taskID"></param>
            <param name="hasGatewayPassed"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Parser.PreviousStepChecker.GetPreviousActivityTree(Slickflow.Engine.Common.WfAppRunner,System.Boolean@)">
            <summary>
            Retrieve the previous node tree
            获取上一步节点树
            </summary>
            <param name="runner"></param>
            <param name="hasGatewayPassed"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Parser.PreviousStepChecker.GetPreviousActivityTree(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.Boolean@)">
            <summary>
            Retrieve the previous node tree
            获取上一步节点树
            </summary>
            <param name="runningNode"></param>
            <param name="hasGatewayPassed"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Parser.PreviousStepChecker.AppendNodeViewList(System.Collections.Generic.IList{Slickflow.Engine.Common.NodeView},Slickflow.Engine.Xpdl.Entity.Activity,System.String,System.String)">
            <summary>
            Append Node View List
            追加节点列表
            </summary>
            <param name="nodeList"></param>
            <param name="activity"></param>
            <param name="userID"></param>
            <param name="userName"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Parser.PreviousStepChecker.AppendUserList(System.Collections.Generic.IList{Slickflow.Module.Resource.User},Slickflow.Module.Resource.User)">
            <summary>
            Append Single User
            增加单个用户
            </summary>
            <param name="existUserList"></param>
            <param name="user"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Parser.PreviousStepChecker.GetPreviousActivityList(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Xpdl.IProcessModel,System.Boolean@)">
            <summary>
            Retrieve the previous node list of the current running node
            (including multiple instance node types)
             1.  Multiple instance nodes use a decreasing value of CompleteOrder internally;
            (This involves the master node crossing mode with multiple instance nodes)
             2.  The normal node mode recursively backtracks based on whether there is a Gateway node;
            获取当前运行节点的上一步节点列表
            （包括多实例节点类型）
            1. 多实例节点内部使用CompleteOrder数值递减；
               (其中涉及到多实例节点的主节点跨越模式)
            2. 普通节点模式按照是否有Gateway节点递归回溯；
            </summary>
            <param name="runningNode"></param>
            <param name="processModel"></param>
            <param name="hasGatewayPassed"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Parser.PreviousStepChecker.GetPreviousOfMultipleInstanceNode(System.Int32,System.Int32,System.Single)">
            <summary>
            Query the predecessor nodes of the instance node
            查询实例节点的前置节点
            </summary>
            <param name="mainActivityInstanceID"></param>
            <param name="activityInstanceID"></param>
            <param name="completeOrder"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Parser.PreviousStepChecker.GetPreviousActivityInstanceList(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.Boolean,System.Boolean@)">
            <summary>
            Read the previous node information of the node
            读取节点的上一步节点信息
            </summary>
            <param name="runningNode"></param>
            <param name="isLookUpBackSource"></param>
            <param name="hasPassedGatewayNode"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Parser.PreviousStepChecker.GetPreviousOfGatewayActivityInstance(System.Collections.Generic.IList{Slickflow.Engine.Business.Entity.TransitionInstanceEntity},System.Int32,System.Collections.Generic.IList{Slickflow.Engine.Business.Entity.ActivityInstanceEntity})">
            <summary>
            Obtain the nodes before the gateway node
            获取网关节点前的节点
            </summary>
            <param name="transitionList"></param>
            <param name="toActivityInstanceID"></param>
            <param name="previousActivityInstanceList"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Parser.SignForwardStepMaker">
            <summary>
            Sign Forward Step Maker
            加签步骤生成器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Parser.SignForwardStepMaker.GetSignForwardStepInfo(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Obtain information on the steps for adding a signature
            获取加签步骤信息
            </summary>
            <param name="runner"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Parser.SignForwardStepMaker.GetSignForwardRoleUserTree(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            According to the application, obtain the next node list of the process, including role users
            根据应用获取流程下一步节点列表，包含角色用户
            </summary>
            <param name="runner"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.ActionExecutor">
            <summary>
            Action Executor
            Action 执行器类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ActionExecutor.ExecuteActionList(System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.Action},Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute Action List
            Action 的执行方法
            </summary>
            <param name="actionList"></param>
            <param name="delegateService"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ActionExecutor.ExecuteActionListBefore(System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.Action},Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Method for executing external operations before triggering
            触发前执行外部操作的方法
            </summary>
            <param name="actionList"></param>
            <param name="delegateService"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ActionExecutor.ExecuteActionListAfter(System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.Action},Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Method for executing external operations after triggering
            触发后执行外部操作的方法
            </summary>
            <param name="actionList"></param>
            <param name="delegateService"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ActionExecutor.Execute(Slickflow.Engine.Xpdl.Entity.Action,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute external service implementation class
            执行外部服务实现类
            </summary>
            <param name="action"></param>
            <param name="delegateService"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ActionExecutor.ExecuteLocalService(Slickflow.Engine.Xpdl.Entity.Action,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute local service
            执行外部方法
            </summary>
            <param name="action"></param>
            <param name="delegateService"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ActionExecutor.ExecuteWebApiMethod(Slickflow.Engine.Xpdl.Entity.Action,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute WebApi Method
            执行外部方法
            </summary>
            <param name="action"></param>
            <param name="delegateService"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ActionExecutor.ExecuteSQLMethod(Slickflow.Engine.Xpdl.Entity.Action,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute SQL Method
            执行外部方法
            </summary>
            <param name="action"></param>
            <param name="delegateService"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ActionExecutor.ExecuteStoreProcedureMethod(Slickflow.Engine.Xpdl.Entity.Action,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute sql store procedure
            执行外部方法
            </summary>
            <param name="action"></param>
            <param name="delegateService"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ActionExecutor.ExecutePythonMethod(Slickflow.Engine.Xpdl.Entity.Action,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute python script
            执行外部方法
            SetVariable:
            https://stackoverflow.com/questions/26426955/setting-and-getting-variables-in-net-hosted-ironpython-script/45734097
            </summary>
            <param name="action"></param>
            <param name="delegateService"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ActionExecutor.ExecuteCSharpLibraryMethod(Slickflow.Engine.Xpdl.Entity.Action,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute c# library
            执行插件方法
            </summary>
            <param name="action"></param>
            <param name="delegateService"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ActionExecutor.CompositeJsonValue(System.String,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Construct JSON string for the final object
            构造最终对象的Json字符串
            </summary>
            <param name="arguments"></param>
            <param name="delegateService"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ActionExecutor.FormatJsonStringIfSimple(System.String)">
            <summary>
            If it is a simple string, add double quotation marks
            如果是简单字符串, 加双引号
            jack => "jack"
            </summary>
            <param name="jsonValue"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ActionExecutor.CompositeSqlParametersValue(System.String,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Construct JSON string for the final object
            构造最终对象的Json字符串
            </summary>
            <param name="arguments"></param>
            <param name="delegateService"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ActionExecutor.CompositeKeyValue(System.String,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Construct JSON string for the final object
            构造最终对象的Json字符串
            </summary>
            <param name="arguments"></param>
            <param name="delegateService"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ActionExecutor.CompositeParameterValues(System.String,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Construct Parameters value
            构造可变数值列表
            </summary>
            <param name="arguments"></param>
            <param name="delegateService"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Conditional.NodeMediatorInterConditional">
            <summary>
            Intermediate event node (condition) processing class
            中间事件节点(条件)处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Conditional.NodeMediatorInterConditional.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete Automatically
            自动完成
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Conditional.NodeMediatorInterConditionalGo">
            <summary>
            Intermediate event node processing class
            中间事件节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Conditional.NodeMediatorInterConditionalGo.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Conditional.NodeMediatorInterConditionalGo.CheckBeingExecutedInfo(Slickflow.Data.IDbSession)">
            <summary>
            Check if the operating conditions of the node are met
            检查节点运行条件是否满足
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Conditional.NodeMediatorInterConditionalGo.CompleteWorkItem(System.Nullable{System.Int32},Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Complete Work Item
            完成任务实例
            </summary>
            <param name="taskID"></param>
            <param name="activityResource"></param>
            <param name="session"></param>        
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Conditional.NodeMediatorInterConditionalGo.CreateActivityTaskTransitionInstance(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Create activity task transfer instance data
            创建活动任务转移实例数据
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Conditional.NodeMediatorStartConditional">
            <summary>
            Node Mediator Start Conditional
            开始节点执行器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Conditional.NodeMediatorStartConditional.ExecuteWorkItem">
            <summary>
            Execute Work Item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Conditional.NodeMediatorStartConditional.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Set the start node to the completed state
            置开始节点为结束状态
            </summary>
            <param name="processInstance"></param>
            <param name="activityResource"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorEndMsgCatch">
            <summary>
            End node medaitor of message catch
            结束节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorEndMsgCatch.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorEndMsgCatch.ContinueMainProcessRunning(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Data.IDbSession)">
            <summary>
            Continue to execute the main process
            继续执行主流程
            </summary>
            <param name="processInstance"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorEndMsgCatch.FillNextActivityPerformersByRoleList(System.Int32,System.String,Slickflow.Data.IDbSession)">
            <summary>
            Add role users using process defined resources
            使用流程定义资源添加角色用户
            </summary>
            <param name="mainActivityInstanceID"></param>
            <param name="mainActivityGUID"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorEndMsgCatch.CreateActivityTaskTransitionInstance(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            End node activity and transfer instantiation, no task data available
            结束节点活动及转移实例化，没有任务数据
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorEndMsgThrow">
            <summary>
            End node mediator message throw
            结束节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorEndMsgThrow.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorEndMsgThrow.ContinueMainProcessRunning(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Data.IDbSession)">
            <summary>
            Continue to execute the main process
            继续执行主流程
            </summary>
            <param name="processInstance"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorEndMsgThrow.FillNextActivityPerformersByRoleList(System.Int32,System.String,Slickflow.Data.IDbSession)">
            <summary>
            Add role users using process defined resources
            使用流程定义资源添加角色用户
            </summary>
            <param name="mainActivityInstanceID"></param>
            <param name="mainActivityGUID"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorEndMsgThrow.CreateActivityTaskTransitionInstance(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            End node activity and transfer instantiation, no task data available
            结束节点活动及转移实例化，没有任务数据
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorInterMessageGo">
            <summary>
            Intermediate Message Go Node Mediator
            中间事件节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorInterMessageGo.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorInterMessageGo.CompleteWorkItem(System.Nullable{System.Int32},Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Complete work item
            完成任务实例
            </summary>
            <param name="taskID"></param>
            <param name="activityResource"></param>
            <param name="session"></param>        
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorInterMessageGo.CreateActivityTaskTransitionInstance(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Create activity task transfer instance data
            创建活动任务转移实例数据
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorInterMsgCatch">
            <summary>
            Intermediate Node Mediator message catch
            中间事件节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorInterMsgCatch.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorInterMsgCatch.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorInterMsgCatchContinue">
            <summary>
            Intermediate Node Mediator Message Catch Continue
            中间事件节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorInterMsgCatchContinue.ExecuteWorkItem">
            <summary>
            Execute Work Item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorInterMsgCatchContinue.CompleteWorkItem(Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Complete work item
            完成节点实例
            </summary>
            <param name="activityResource"></param>
            <param name="session"></param>        
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorInterMsgThrow">
            <summary>
             Intermediate Node Mediator message throw
            中间事件节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorInterMsgThrow.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorInterMsgThrow.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorStartMsgCatch">
            <summary>
            Start message node catch
            开始节点执行器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorStartMsgCatch.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorStartMsgCatch.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            置开始节点为结束状态
            </summary>
            <param name="processInstance"></param>
            <param name="activityResource"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorStartMsgThrow">
            <summary>
            Start message nodemediator throw
            开始节点执行器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorStartMsgThrow.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorStartMsgThrow.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            置开始节点为结束状态
            </summary>
            <param name="processInstance"></param>
            <param name="activityResource"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorStartSignalCatch">
            <summary>
            Start signal catch node mediator
            开始节点执行器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorStartSignalCatch.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Message.NodeMediatorStartSignalCatch.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
            <param name="processInstance"></param>
            <param name="activityResource"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.NodeMediatorEnd">
            <summary>
            End node mediator
            结束节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorEnd.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorEnd.ContinueMainProcessRunning(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Data.IDbSession)">
            <summary>
            Continue main process
            继续执行主流程
            </summary>
            <param name="processInstance"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorEnd.FillNextActivityPerformersByRoleList(System.Int32,System.String,Slickflow.Data.IDbSession)">
            <summary>
            Add role users using process defined resources
            使用流程定义资源添加角色用户
            </summary>
            <param name="mainActivityInstanceID"></param>
            <param name="mainActivityGUID"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorEnd.CreateActivityTaskTransitionInstance(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            End node activity and transfer instantiation, no task data available
            结束节点活动及转移实例化，没有任务数据
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.NodeMediatorEvent">
            <summary>
            Event node mediator
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorEvent.#ctor(Slickflow.Engine.Core.ActivityForwardContext,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Xpdl.IProcessModel,Slickflow.Data.IDbSession)">
            <summary>
            Constructor function
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorEvent.ExecteActionList(System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.Action},Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute action list
            </summary>
            <param name="actionList"></param>
            <param name="delegateService"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorEvent.GetDelegateService">
            <summary>
            Get delegate sevice
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorEvent.OnBeforeExecuteWorkItem">
            <summary>
            On before execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorEvent.OnExecutingServiceItem">
            <summary>
            On executing service item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorEvent.OnAfterExecuteWorkItem">
            <summary>
            On after execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorEvent.CreateActivityInstanceObject(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Create activity instance object
            创建节点对象
            </summary>
            <param name="activity"></param>
            <param name="processInstance"></param>
            <param name="runner"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorEvent.InsertActivityInstance(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Data.IDbSession)">
            <summary>
            Insert activity instance
            插入实例数据
            </summary>
            <param name="activityInstance"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorEvent.InsertTransitionInstance(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Insert transition instance
            插入连线实例的方法
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorEvent.CompleteActivityInstance(System.Int32,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete activity instance
            节点对象的完成方法
            </summary>
            <param name="ActivityInstanceID"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.NodeMediatorIntermediate">
            <summary>
            Intermediate node mediator
            中间事件节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorIntermediate.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.NodeMediatorScript">
            <summary>
            Script node mediator
            任务节点执行器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorScript.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorScript.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.NodeMediatorService">
            <summary>
            Service node mediator
            任务节点执行器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorService.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorService.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.NodeMediatorStart">
            <summary>
            Start Node Mediator
            开始节点执行器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorStart.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.NodeMediatorStart.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
            <param name="processInstance"></param>
            <param name="activityResource"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Signal.NodeMediatorEndSignalCatch">
            <summary>
            End signal catch node mediator
            信号结束节点的Catch类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Signal.NodeMediatorEndSignalCatch.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Signal.NodeMediatorEndSignalThrow">
            <summary>
            End signal throw node mediator
            结束节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Signal.NodeMediatorEndSignalThrow.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Signal.NodeMediatorEndSignalThrow.CreateActivityTaskTransitionInstance(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            End node activity and transfer instantiation, no task data available
            结束节点活动及转移实例化，没有任务数据
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Signal.NodeMediatorInterSignalCatch">
            <summary>
            Intermediate singal catch node mediator
            中间事件节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Signal.NodeMediatorInterSignalCatch.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Signal.NodeMediatorInterSignalCatch.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete Automatically
            自动完成
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Signal.NodeMediatorInterSignalCatchContinue">
            <summary>
            Intermediate singal catch continue node mediator
            中间事件节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Signal.NodeMediatorInterSignalCatchContinue.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Signal.NodeMediatorInterSignalCatchContinue.CompleteWorkItem(Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Complete work item
            完成节点实例
            </summary>
            <param name="activityResource"></param>
            <param name="session"></param>        
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Signal.NodeMediatorInterSignalThrow">
            <summary>
            Intermediate Signal throw node mediator
            中间事件节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Signal.NodeMediatorInterSignalThrow.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Signal.NodeMediatorInterSignalThrow.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Signal.NodeMediatorStartSignalThrow">
            <summary>
            Start signal throw node mediator
            开始节点执行器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Signal.NodeMediatorStartSignalThrow.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Signal.NodeMediatorStartSignalThrow.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
            <param name="processInstance"></param>
            <param name="activityResource"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Timer.NodeMediatorEndTimer">
            <summary>
            End timer node mediator
            结束节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Timer.NodeMediatorEndTimer.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Timer.NodeMediatorEndTimer.ContinueMainProcessRunning(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Data.IDbSession)">
            <summary>
            Continue main process
            继续执行主流程
            </summary>
            <param name="processInstance"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Timer.NodeMediatorEndTimer.FillNextActivityPerformersByRoleList(System.Int32,System.String,Slickflow.Data.IDbSession)">
            <summary>
            Add role users using process defined resources
            使用流程定义资源添加角色用户
            </summary>
            <param name="mainActivityInstanceID"></param>
            <param name="mainActivityGUID"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Timer.NodeMediatorEndTimer.CreateActivityTaskTransitionInstance(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            End node activity and transfer instantiation, no task data available
            结束节点活动及转移实例化，没有任务数据
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Timer.NodeMediatorInterTimer">
            <summary>
            Intermediate timer node mediator
            中间事件节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Timer.NodeMediatorInterTimer.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Timer.NodeMediatorInterTimer.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Timer.NodeMediatorInterTimer.CalcDataTimeFromVariable(Slickflow.Engine.Xpdl.Entity.Activity)">
            <summary>
            Calculate delay time
            计算延迟时间
            </summary>
            <param name="timerActivity"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Timer.NodeMediatorInterTimerGo">
            <summary>
            Intermediate timer go node mediator
            中间事件节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Timer.NodeMediatorInterTimerGo.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Timer.NodeMediatorInterTimerGo.CheckBeingExecutedInfo">
            <summary>
            Check if the operating conditions of the node are met
            检查节点运行条件是否满足
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Timer.NodeMediatorInterTimerGo.CompleteWorkItem(System.Nullable{System.Int32},Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Complete work item
            完成任务实例
            </summary>
            <param name="taskID"></param>
            <param name="activityResource"></param>
            <param name="session"></param>        
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Timer.NodeMediatorInterTimerGo.CreateActivityTaskTransitionInstance(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Create activity task transition instance
            创建活动任务转移实例数据
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Event.Timer.NodeMediatorStartTimer">
            <summary>
            Start timer node mediator
            开始节点执行器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Timer.NodeMediatorStartTimer.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Event.Timer.NodeMediatorStartTimer.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
            <param name="processInstance"></param>
            <param name="activityResource"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorAndJoin">
            <summary>
            AndJoin Node Mediator
            与合并节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorAndJoin.GetTokensRequired">
            <summary>
            Calculate the number of converged tokens
            计算汇合Token数目
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorAndJoin.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorAndJoinMI">
            <summary>
            AndJoinMI Node Mediator
            AndJoinMI 节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorAndJoinMI.GetTokensRequired(System.String,System.Int32,Slickflow.Engine.Xpdl.Entity.Activity)">
            <summary>
            Obtain the required number of tokens
            获取需要的Token数目
            </summary>
            <param name="appInstanceID"></param>
            <param name="processInstanceID"></param>
            <param name="joinNode"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorAndJoinMI.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorAndSplit">
            <summary>
            AndSplit Node Mediator
            AndSplit 节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorAndSplit.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorAndSplitMI">
            <summary>
            AndSplitMI Node Mediator
            多实例与分支节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorAndSplitMI.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorApprovalOrSplit">
            <summary>
            Approval OrSplit Node Mediator
            ApprovalOrSplit 节点处理类
            审批网关
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorApprovalOrSplit.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorEOrJoin">
            <summary>
            EOrJoin Node Mediator
            EOrJoin 节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorEOrJoin.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorEOrJoin.CompleteAutomaticallyByTokensCount(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Node completion method for EORJoin merging
            The front-end dynamically passes the number of tokens to be merged
            EOrJoin合并时的节点完成方法
            前端动态传递要合并的Tokens的数目
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorEOrJoin.CompleteAutomaticallyByForcedBranchesCount(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Node completion method for EORJoin merging
            Determine the completion of merging nodes based on whether to force branching as defined on the pre transfer
            EOrJoin合并时的节点完成方法
            根据前置转移上定义的是否强制分支来判断完成合并节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorEOrJoin.CompleteAutomaticallyInternal(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.Int32,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Node completion method for EORJoin merging
            Internal execution logic
            EOrJoin合并时的节点完成方法
            内部执行逻辑
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorGateway">
            <summary>
            Gatewayt Node Mediator
            网关控制节点执行器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorGateway.CreateActivityInstanceObject(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Create activity instance
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorGateway.InsertActivityInstance(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Data.IDbSession)">
            <summary>
            Insert activity instance
            </summary>
            <param name="activityInstance"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorGateway.InsertTransitionInstance(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Insert transition instance
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorGateway.CompleteActivityInstance(System.Int32,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Compelete activity instance
            </summary>
            <param name="ActivityInstanceID"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorOrJoin">
            <summary>
            OrJoin Node Mediator
            OrJoin 节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorOrJoin.GetTokensRequired(System.Int32,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Data.IDbSession)">
            <summary>
            Calculate the required number of merging tokens
            计算需要的汇合Token数目
            </summary>
            <param name="processInstanceID"></param>
            <param name="gatewayActivity"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorOrJoin.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Node completion method for OrJoin merging
            1.  If there are OrJoin predecessor transfers that meet the conditions, a new OrJoin node instance will be generated
            OrJoin合并时的节点完成方法
            1. 如果有满足条件的OrJoin前驱转移，则会重新生成新的OrJoin节点实例
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorOrSplit">
            <summary>
            OrSplit Node Mediator
            OrSplit 节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorOrSplit.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorXOrJoin">
            <summary>
            XOrJoin Node Mediator
            XOrJoin 节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorXOrJoin.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorXOrSplit">
            <summary>
            XOrSplit Node Mediator
            XOrSplit 节点处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.Gateway.NodeMediatorXOrSplit.CompleteAutomaticlly(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete automatically
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.ICompleteAutomaticlly">
            <summary>
            Complete Automatically
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.ICompleteGatewayAutomaticlly">
            <summary>
            Complete Automatically
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.LinkContext">
            <summary>
            Link Context
            节点连接线上下文
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.NodeAutoExecutedResult">
            <summary>
            Node Auto Executed Result
            节点自动执行结果类
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.NodeAutoExecutedStatus">
            <summary>
            Node Auto Executed Status
            网关执行结果状态类
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Pattern.NodeAutoExecutedStatus.Unknown">
            <summary>
            Unknown
            未知
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Pattern.NodeAutoExecutedStatus.Successed">
            <summary>
            Successed
            执行成功
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Pattern.NodeAutoExecutedStatus.Failed">
            <summary>
            Failed
            发生错误
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Pattern.NodeAutoExecutedStatus.WaitingForOthersJoin">
            <summary>
            Waiting for other branches that need to be merged
            等待其它需要合并的分支
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Pattern.NodeAutoExecutedStatus.FallBehindOfXOrJoin">
            <summary>
            Behind nodes do not participate in the operation of XOrJoin nodes
            后进的节点，不参与XOrJoin节点的运行
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Pattern.NodeAutoExecutedStatus.NotForcedBrancheWhenEOrJoin">
            <summary>
            Not forced branch (EORJoin)
            不是强制分支(EOrJoin)
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.NodeMediator">
            <summary>
            Node Mediator Abstract Class
            节点执行器的抽象类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.GetDelegateService">
            <summary>
            Get Delegate Servide
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.IsNotNodeMediatorStart(Slickflow.Engine.Core.Pattern.NodeMediator)">
            <summary>
            Determine whether it is a starting type node
            判断是否是起始类型的节点
            </summary>
            <param name="nodeMediator"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.OnBeforeExecuteWorkItem">
            <summary>
            On before execute work item
            触发前执行
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.OnAfterExecuteWorkItem">
            <summary>
            On after execute work item
            触发后执行
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.OnExecutingServiceItem">
            <summary>
            Execute code to automatically serve content
            执行代码自动服务内容
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.OnExecutingScriptItem">
            <summary>
            Executing script item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.ContinueForwardCurrentNode(System.Boolean,Slickflow.Data.IDbSession)">
            <summary>
            Traverse and execute the nodes following the current node
            Normal operation: Transition parsing flow is required
            Other methods are directly specified, such as jump, return, etc., 
            which do not require parsing and cannot be equated with normal flow parsing
            遍历执行当前节点后面的节点
            正常运行：需要走Transition的解析流转
            其它方式为直接指定：比如跳转，返送等，不需要解析，不能等同于正常流转解析
            </summary>
            <param name="isNotParsedByTransition"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.ContinueForwardCurrentNodeRecurisivly(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Xpdl.Schedule.NextActivityComponent,System.Collections.Generic.IDictionary{System.String,System.String},System.Boolean,System.Collections.Generic.List{Slickflow.Engine.Core.Result.WfNodeMediatedResult}@)">
            <summary>
            Recursive execution node
            1) Task of creating regular nodes
            2) Task of creating a countersignature node
            递归执行节点
            1)创建普通节点的任务
            2)创建会签节点的任务
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.IsWaitingOneOfJoin(Slickflow.Engine.Xpdl.Entity.GatewayDetail)">
            <summary>
            Determine whether it is a merger situation
            判断是否是合并情况
            </summary>
            <param name="gatewayDetail"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.CreateActivityTaskTransitionInstance(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Create activity task transtion instance
            创建工作项及转移数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.CreateNewTask(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Virtual method for creating tasks
            1.  For automatically executed work items, there is no need to rewrite this method
            2.  For manually executed work items, the method needs to be rewritten to insert pending task data
            创建任务的虚方法
            1. 对于自动执行的工作项，无需重写该方法
            2. 对于人工执行的工作项，需要重写该方法，插入待办的任务数据
            </summary>
            <param name="activityResource"></param>
            <param name="toActivityInstance"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.CreateActivityInstanceObject(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Create activity instance object
            </summary>
            <param name="processInstance"></param>
            <param name="activity"></param>
            <param name="runner"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.InsertActivityInstance(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Data.IDbSession)">
            <summary>
            Insert activity instance
            </summary>
            <param name="activityInstance"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.CompleteActivityInstance(System.Int32,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Complete activity instance
            </summary>
            <param name="ActivityInstanceID"></param>
            <param name="runner"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.CreateMultipleInstance(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Master node of countersignature type, handling multiple instance nodes
            Create the master node for the countersignature node and record the instance child nodes under the countersignature master node
            会签类型的主节点, 多实例节点处理
            创建会签节点的主节点，以及会签主节点下的实例子节点记录
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.CreateBackwardToActivityInstanceObject(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Common.BackwardTypeEnum,System.Int32,System.Int32,Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Create backward activity instance object
            创建退回类型的活动实例对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.InsertTransitionInstance(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Insert transition instance
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.GenerateActivityAssignedUserInfo(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.ActivityResource)">
            <summary>
            Generate activity user allocation information
            生成活动用户分配信息
            </summary>
            <param name="toActivityInstance"></param>
            <param name="activityResource"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.AntiGenerateActivityPerformerList(Slickflow.Engine.Business.Entity.ActivityInstanceEntity)">
            <summary>
            Generate PerformerList data structure based on personnel information assigned by nodes
            由节点分配的人员信息生成PerformerList数据结构
            </summary>
            <param name="activityInstance"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediator.GetNodeMediatedMessage">
            <summary>
            Generate messages based on the type of node execution result
            根据节点执行结果类型，生成消息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.NodeMediatorBackward">
            <summary>
            Backward Node Mediator
            退回处理时的节点调节器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorBackward.CreateBackwardActivityTaskTransitionInstance(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.BackwardTypeEnum,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Create backward activity task transition instance
            创建退回时的流转节点对象、任务和转移数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorBackward.CreateBackwardActivityTaskRepeatedSignTogetherMultipleInstance(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.BackwardTypeEnum,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Return is handled in the case of countersignature:
            The node to be returned is the countersign node
            1) Instantiate all multi instance nodes under the co signing node
            2) Only obtain nodes that have been processed and ensure the uniqueness of the Completed Order
            退回是会签情况下的处理：
            要退回的节点是会签节点
            1) 全部实例化会签节点下的多实例节点
            2) 只取得办理完成的节点，而且保证CompleteOrder的唯一性
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorBackward.CreateBackwardActivityTaskOfInnerMultipleInstance(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.BackwardTypeEnum,System.Int32,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Create active instances and task data for rollback between multiple instance nodes
            创建多实例节点之间回滚时的活动实例，任务数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorBackward.CreateBackwardActivityTaskTransitionOfLastMultipleInstance(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.BackwardTypeEnum,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            The withdraw operation of the last multi instance node with multiple signatures
            最后一个会签多实例子节点的撤销操作
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.NodeMediatorFactory">
            <summary>
            Node Mediator Factory
            节点执行器的工厂类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorFactory.CreateNodeMediator(Slickflow.Engine.Core.ActivityForwardContext,Slickflow.Data.IDbSession)">
            <summary>
            Create Method
            </summary>
            <param name="forwardContext"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorFactory.ThrowUncerternXmlNodeTypeException(System.String,System.String,System.String)">
            <summary>
            Throw uncertern xml node type exception
            </summary>
            <param name="activityType"></param>
            <param name="triggerType"></param>
            <param name="throwCatchDirection"></param>
            <exception cref="T:System.ApplicationException"></exception>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorFactory.CreateNodeMediatorGateway(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Xpdl.IProcessModel,Slickflow.Data.IDbSession)">
            <summary>
            Create Node Mediator Gateway
            创建Gateway节点处理类实例
            </summary>
            <param name="gActivity"></param>
            <param name="processModel"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorFactory.CreateNodeMediatorEvent(Slickflow.Engine.Core.ActivityForwardContext,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Xpdl.IProcessModel,Slickflow.Data.IDbSession)">
            <summary>
            Create Node Mediator Event
            创建中间事件节点处理类实例
            </summary>
            <param name="forwardContext"></param>
            <param name="eventActivity"></param>
            <param name="processModel"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorFactory.CreateNodeMediatorEnd(Slickflow.Engine.Core.ActivityForwardContext,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Data.IDbSession)">
            <summary>
            Create Node Mediator End
            创建结束事件节点处理类实例
            </summary>
            <param name="forwardContext"></param>
            <param name="endActivity"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorFactory.CreateNodeMediatorSubProcess(Slickflow.Engine.Core.ActivityForwardContext,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Data.IDbSession)">
            <summary>
            Create Node Mediator Sub Process
            创建子流程节点处理类实例
            </summary>
            <param name="forwardContext"></param>
            <param name="activity"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorFactory.CreateNodeMediatorSubProcess(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Data.IDbSession)">
            <summary>
            Create Node Mediator Sub Process
            创建子流程节点处理类实例
            </summary>
            <param name="activity"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.NodeMediatorMultiSignCreator">
            <summary>
            Creator for multi instance node scenes
            多实例节点场景的创建器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorMultiSignCreator.CreateActivityTaskTransitionInstance(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Create activity task transition instance
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.NodeMediatorMultiSignForward">
            <summary>
            Execution of signed child nodes
            加签子节点执行
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorMultiSignForward.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorMultiSignForward.CompleteWorkItem(System.Nullable{System.Int32},Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Complete work item
            </summary>     
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.NodeMediatorMultiSignTogether">
            <summary>
            Sign together child node execution
            会签子节点执行
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorMultiSignTogether.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorMultiSignTogether.CompleteWorkItem(System.Nullable{System.Int32},Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Complete work item
            </summary>
            <param name="taskID"></param>
            <param name="activityResource"></param>
            <param name="session"></param>        
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.NodeMediatorRevise">
            <summary>
            Node Mediator Revise
            流程修订的具体执行类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorRevise.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorRevise.CompleteWorkItem(System.Nullable{System.Int32},Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Complete work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorRevise.CloneChildNodeOfMI(Slickflow.Engine.Common.PerformerList,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Data.IDbSession)">
            <summary>
            Copy multi instance node data
            复制多实例子节点数据
            </summary>
            <param name="plist"></param>
            <param name="mainActivityInstance"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorRevise.IsTaskExisted(System.Collections.Generic.List{Slickflow.Engine.Business.Entity.ActivityInstanceEntity},System.String)">
            <summary>
            Determine whether the activity instance already exists
            判断活动实例是否已经存在
            </summary>
            <param name="childNodeOfMI"></param>
            <param name="userID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorRevise.CloneChildNodeOfAndSplitMI(Slickflow.Engine.Common.PerformerList,System.String,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Data.IDbSession)">
            <summary>
            Copy parallel branch multi instance node data
            复制并行分支多实例节点数据
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.NodeMediatorSignForward">
            <summary>
            Node Mediator Sign Forward
            加签主节点执行器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorSignForward.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorSignForward.UpgradeToMainSignForwardNode(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Xpdl.Common.SignForwardTypeEnum)">
            <summary>
            Upgrade the current node to become the signing master node
            升级当前节点为加签主节点
            </summary>
            <param name="currentActivityInstance"></param>
            <param name="signForwardType"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorSignForward.CreateSignForwardTasks(Slickflow.Engine.Common.ActivityResource)">
            <summary>
            Create a signature node record
            创建加签节点记录
            </summary>
            <param name="activityResource"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.NodeMediatorSubProcess">
            <summary>
            Node Mediator Sub Process
            子流程节点执行器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorSubProcess.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorSubProcess.CompleteWorkItem(System.Nullable{System.Int32},Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Complete work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorSubProcess.CreateActivityTaskTransitionInstance(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Create activity task transition instance
            创建活动任务转移数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorSubProcess.CreateSubProcessNode(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Engine.Common.Performer,Slickflow.Data.IDbSession)">
            <summary>
            Create sub process node
            创建子流程节点数据以及子流程记录
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorSubProcess.CreateMultipleInstance(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Create multiple instance
            会签类型的主节点, 多实例节点处理
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorSubProcess.CreateSubProcessRunner(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Common.Performer,Slickflow.Data.IDbSession)">
            <summary>
            When creating a subprocess, regenerate the runner information
            创建子流程时，重新生成runner信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.NodeMediatorSubProcessNested">
            <summary>
            Node Mediator Sub Process Nested
            子流程节点执行器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorSubProcessNested.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorSubProcessNested.CompleteWorkItem(System.Nullable{System.Int32},Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Complete work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorSubProcessNested.CreateActivityTaskTransitionInstance(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Create activity task transition instance
            创建活动任务转移数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorSubProcessNested.CreateSubProcessNode(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Engine.Common.Performer,Slickflow.Data.IDbSession)">
            <summary>
            Create sub process 
            创建子流程节点数据以及子流程记录
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorSubProcessNested.CreateMultipleInstance(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Create multiple instance
            会签类型的主节点, 多实例节点处理
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorSubProcessNested.CreateSubProcessRunner(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Common.Performer,Slickflow.Data.IDbSession)">
            <summary>
            When creating a subprocess, regenerate the runner information
            创建子流程时，重新生成runner信息
            </summary>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.NodeMediatorTask">
            <summary>
            Node Mediator Task
            任务节点执行器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorTask.ExecuteWorkItem">
            <summary>
            Execute work item
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorTask.CompleteWorkItem(System.Nullable{System.Int32},Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Complete work item
            完成节点实例
            </summary>   
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorTask.CreateActivityTaskTransitionInstance(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Create activity task transition instance
            创建活动任务转移实例数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.NodeMediatorTask.WriteBackSrcOrgInformation(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Data.IDbSession)">
            <summary>
            Maintain source node information for multiple returns
            维护多次退回时的源节点信息
            </summary>
            <param name="toActivityInstance"></param>
            <param name="fromActivityInstance"></param>
            <param name="session"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.ScriptExecutor">
            <summary>
            Script Executor
            脚本执行器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ScriptExecutor.ExecuteScriptList(System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.ScriptDetail},Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute script list
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ScriptExecutor.Execute(Slickflow.Engine.Xpdl.Entity.ScriptDetail,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ScriptExecutor.ExecutePythonMethod(Slickflow.Engine.Xpdl.Entity.ScriptDetail,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute Python script
            执行外部方法
            SetVariable:
            https://stackoverflow.com/questions/26426955/setting-and-getting-variables-in-net-hosted-ironpython-script/45734097
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ScriptExecutor.ExecuteSQLMethod(Slickflow.Engine.Xpdl.Entity.ScriptDetail,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Excute sql method
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Pattern.ServiceExecutor">
            <summary>
            Service Executor
            自动服务方法类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ServiceExecutor.ExecuteServiceList(System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.ServiceDetail},Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute service list
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ServiceExecutor.Execute(Slickflow.Engine.Xpdl.Entity.ServiceDetail,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ServiceExecutor.ExecuteLocalService(Slickflow.Engine.Xpdl.Entity.ServiceDetail,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute Local Service
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ServiceExecutor.ExecuteWebApiMethod(Slickflow.Engine.Xpdl.Entity.ServiceDetail,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute WebApi Method
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ServiceExecutor.ExecuteStoreProcedureMethod(Slickflow.Engine.Xpdl.Entity.ServiceDetail,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute Store procedure
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Pattern.ServiceExecutor.ExecuteCSharpLibraryMethod(Slickflow.Engine.Xpdl.Entity.ServiceDetail,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Execute library
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Result.WfExecutedResult">
            <summary>
            执行结果对象封装
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Core.Result.WfExecutedResult.ProcessInstanceIDStarted">
            <summary>
            New instance ID returned by process initiation
            流程启动返回的新实例ID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Core.Result.WfExecutedResult.BackwardTaskReceiver">
            <summary>
            When the process is rolled back, the recipient information of the returned task
            流程做回退处理时，返回的任务接收人信息
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Core.Result.WfExecutedResult.ReturnDataContext">
            <summary>
            Return parameters during process rollback
            流程回退时返回参数
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Result.WfExecutedResult.Default">
            <summary>
            Default
            缺省方法
            </summary>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.Result.WfExecutedStatus">
            <summary>
            Status execution enumeration type
            状态执行枚举类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Result.WfExecutedStatus.Default">
            <summary>
            Default
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Result.WfExecutedStatus.Success">
            <summary>
            Success
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Result.WfExecutedStatus.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Result.WfExecutedStatus.Exception">
            <summary>
            Exception
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Result.WfExceptionType">
            <summary>
            Workflow Exception Type
            异常类型类
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Result.WfNodeMediatedResult">
            <summary>
            Node mediator result
            活动节点执行结果
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Core.Result.WfNodeMediatedResult.Feedback">
            <summary>
            Feedback
            返回内容
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Result.WfNodeMediatedResult.CreateNodeMediatedResultWithException(Slickflow.Engine.Core.Result.WfNodeMediatedFeedback)">
            <summary>
            Created method
            </summary>
            <param name="feedback"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.Result.WfNodeMediatedFeedback">
            <summary>
            Execute feedback enumeration
            执行反馈枚举
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Result.WfNodeMediatedFeedback.ForwardToNextSequenceTask">
            <summary>
            Serial signature will be added to set the task of the next execution node to enter the running state
            串行会(加)签，设置下一个执行节点的任务进入运行状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Result.WfNodeMediatedFeedback.WaitingForCompletedMore">
            <summary>
            Parallel lines will be signed, waiting for nodes to reach a sufficient completion rate
            并行会(加)签，等待节点到达足够多的完成比例
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Result.WfNodeMediatedFeedback.NotEnoughApprovalBranchesCount">
            <summary>
            When signing, the pass rate requirement was not met
            会(加)签时，没有达到通过率要求
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Result.WfNodeMediatedFeedback.NeedOtherGatewayBranchesToJoin">
            <summary>
            Parallel convergence requires other branches
            并行汇合需要其它分支
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Result.WfNodeMediatedFeedback.OrJoinOneBranchHasBeenFinishedWaittingOthers">
            <summary>
            OrJoin scenario, the first branch that meets the criteria is completed, and subsequent branches are blocked
            OrJoin场景，第一个满足条件的分支完成，其后的被阻止
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Result.WfNodeMediatedFeedback.IntermediateEventFailed">
            <summary>
            Intermediate event handling node exception
            中间事件处理节点异常
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Result.WfNodeMediatedFeedback.OtherUnknownReasonToDebug">
            <summary>
            Other unknown factors need to be debugged
            其它未知因素需调试
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Core.Result.WfNodeMediatedFeedback.UnknownNodeTypeToWatch">
            <summary>
            Unknown type of nodes need to be monitored
            未知类型的节点需监视
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.ReturnDataContext">
            <summary>
            The parameter class returned by rollback
            回退返回的参数类
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Runtime.WfRuntimeException">
            <summary>
            Workflow Runtime Exception
            流程运行时异常类
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.Runtime.WfRuntimeManager">
            <summary>
            Workflow Runtime Manager
            流程运行时管理
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManager.Execute(Slickflow.Data.IDbSession)">
            <summary>
            Execute Method
            执行方法
            </summary>
            <returns></returns>
        </member>
        <!-- Badly formed XML comment ignored for member "M:Slickflow.Engine.Core.Runtime.WfRuntimeManager.Callback(Slickflow.Engine.Core.Result.WfExecutedResult)" -->
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManager.RegisterEvent(System.EventHandler{Slickflow.Engine.Core.Event.WfEventArgs},System.EventHandler{Slickflow.Engine.Core.Event.WfEventArgs})">
            <summary>
            Register Event
            注册事件
            </summary>
            <param name="executing"></param>
            <param name="executed"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManager.UnRegiesterEvent(System.EventHandler{Slickflow.Engine.Core.Event.WfEventArgs},System.EventHandler{Slickflow.Engine.Core.Event.WfEventArgs})">
            <summary>
            Unregister Event
            解除注册事件
            </summary>
            <param name="executing"></param>
            <param name="executed"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Runtime.WfRuntimeManagerClose">
            <summary>
            Workflow Runtimer Manager Close
            流程运行时关闭
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerClose.ExecuteInstanceImp(Slickflow.Data.IDbSession)">
            <summary>
            Execution method for closing operation
            关闭操作的执行方法
            </summary>
            <param name="session"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory">
            <summary>
            Creating classes at runtime
            Static method: Create a runtime object for executing an instance
            运行时的创建类
            静态方法：创建执行实例的运行者对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory.CreateRuntimeInstanceStartup(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Core.Result.WfExecutedResult@)">
            <summary>
            Startup Process
            启动流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory.CreateRuntimeInstanceStartupSub(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Xpdl.Node.SubProcessNode,Slickflow.Engine.Common.PerformerList,Slickflow.Data.IDbSession,Slickflow.Engine.Core.Result.WfExecutedResult@)">
            <summary>
            Sub Process Startup
            子流程启动
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory.CreateRuntimeInstanceAppRunning(Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession,Slickflow.Engine.Core.Result.WfExecutedResult@)">
            <summary>
            Create a runtime instance object
            创建运行时实例对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory.CreateRuntimeInstanceRunAuto(Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession,Slickflow.Engine.Core.Result.WfExecutedResult@)">
            <summary>
            Create a runtime instance object
            创建运行时实例对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory.CreateRuntimeInstanceJump(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Core.Result.WfExecutedResult@)">
            <summary>
            Create a runtime instance object
            创建跳转实例信息
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory.CreateRuntimeInstanceReject(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Core.Result.WfExecutedResult@)">
            <summary>
            Create a runtime instance object
            创建运行时实例对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory.CreateRuntimeInstanceClose(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Core.Result.WfExecutedResult@)">
            <summary>
            Create a runtime instance object
            创建运行时实例对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory.CreateRuntimeInstanceSendBack(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Core.Result.WfExecutedResult@)">
            <summary>
            Create a runtime instance object
            创建运行时实例对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory.IsInvalidStepsInPrevousActivityList(System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.Activity},System.Collections.Generic.IDictionary{System.String,Slickflow.Engine.Common.PerformerList},System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.Activity})">
            <summary>
            Determine whether the steps passed are in the list
            判断传递的步骤是否在列表中
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory.FilterPreviousActivityList(System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.Activity},System.Collections.Generic.IList{Slickflow.Engine.Business.Entity.ActivityInstanceEntity})">
            <summary>
            Filter pre nodes
            过滤前置节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory.CreateRuntimeInstanceWithdraw(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Core.Result.WfExecutedResult@)">
            <summary>
            Create a runtime instance object
            创建运行时实例对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory.CreateRuntimeInstanceResend(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Core.Result.WfExecutedResult@)">
            <summary>
            Create a runtime instance object
            创建运行时实例对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory.CreateRuntimeInstanceRevise(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Core.Result.WfExecutedResult@)">
            <summary>
            Create a runtime instance object
            创建运行时实例对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory.CreateRuntimeInstanceReverse(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Core.Result.WfExecutedResult@)">
            <summary>
            Create a runtime instance object
            创建运行时实例对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory.CreateRuntimeInstanceSignForward(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Core.Result.WfExecutedResult@)">
            <summary>
            Create a runtime instance object
            创建运行时实例对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory.RegisterEvent(Slickflow.Engine.Core.Runtime.WfRuntimeManager,System.EventHandler{Slickflow.Engine.Core.Event.WfEventArgs},System.EventHandler{Slickflow.Engine.Core.Event.WfEventArgs})">
            <summary>
            Regiester Event
            </summary>
            <param name="runtimeInstance"></param>
            <param name="executing"></param>
            <param name="executed"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerFactory.UnregisterEvent(Slickflow.Engine.Core.Runtime.WfRuntimeManager,System.EventHandler{Slickflow.Engine.Core.Event.WfEventArgs},System.EventHandler{Slickflow.Engine.Core.Event.WfEventArgs})">
            <summary>
            Unregister Event
            事件注销
            </summary>
            <param name="runtimeInstance"></param>
            <param name="executing"></param>
            <param name="executed"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Runtime.WfRuntimeManagerJump">
            <summary>
            Handling of jump methods
            跳转方式的处理
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerJump.ExecuteInstanceImp(Slickflow.Data.IDbSession)">
            <summary>
            Jump execution method
            跳转执行方法
            </summary>
            <param name="session"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Runtime.WfRuntimeManagerReject">
            <summary>
            Handling of reject methods 
            驳回处理
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerReject.ExecuteInstanceImp(Slickflow.Data.IDbSession)">
            <summary>
            Reject Execute Method
            驳回执行方法
            </summary>
            <param name="session"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Runtime.WfRuntimeManagerResend">
            <summary>
            Handling of resend methods
            返送回的处理
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerResend.ExecuteInstanceImp(Slickflow.Data.IDbSession)">
            <summary>
            Resend execution method
            返送操作的处理逻辑
            </summary>
            <param name="session"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Runtime.WfRuntimeManagerReverse">
            <summary>
            Handling of reverse methods
            流程返签时的运行时
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerReverse.ExecuteInstanceImp(Slickflow.Data.IDbSession)">
            <summary>
            Reverse execute method
            返签执行方法
            </summary>
            <param name="session"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Runtime.WfRuntimeManagerRevise">
            <summary>
            Handling of revise methods
            流程重新修订处理类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerRevise.ExecuteInstanceImp(Slickflow.Data.IDbSession)">
            <summary>
            Revise execute method
            修订操作的处理逻辑
            </summary>
            <param name="session"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Runtime.WfRuntimeManagerRun">
            <summary>
            Runtimer Manager Run
            应用执行运行时
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerRun.ExecuteInstanceImp(Slickflow.Data.IDbSession)">
            <summary>
            Run execute method
            运行执行方法
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerRun.OnProcessRunning(Slickflow.Data.IDbSession)">
            <summary>
            Process Running event
            执行流程时的绑定事件
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerRun.OnProcessCompleted(Slickflow.Data.IDbSession)">
            <summary>
            Process Complete event
            执行流程完成事件
            </summary>
            <param name="session"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Runtime.WfRuntimeManagerSendBack">
            <summary>
            Runtime manager sendback
            退回流程运行时
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerSendBack.ExecuteInstanceImp(Slickflow.Data.IDbSession)">
            <summary>
            The processing logic of sendback operation
            退回操作的处理逻辑
            </summary>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerSendBack.DistributeEachPerformerTask(Slickflow.Engine.Core.SendBack.SendBackOperation,Slickflow.Engine.Common.PerformerList,Slickflow.Data.IDbSession)">
            <summary>
            Generate tasks for the executor
            给执行者生成任务
            </summary>
            <param name="sendbackOperation"></param>
            <param name="performerList"></param>
            <param name="session"></param>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerSendBack.SetRunningNodeSendBack(Slickflow.Data.IDbSession)">
            <summary>
            Update the current running node status to sendback status
            更新当前运行节点状态为退回状态
            </summary>
            <param name="session"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Runtime.WfRuntimeManagerSignForward">
            <summary>
            Runtime Manager Signforward
            加签执行运行时
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerSignForward.ExecuteInstanceImp(Slickflow.Data.IDbSession)">
            <summary>
            The processing logic of signforward operation
            加签执行方法
            </summary>
            <param name="session"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Runtime.WfRuntimeManagerStartup">
            <summary>
            Runtime Manager Startup
            流程启动运行时
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerStartup.ExecuteInstanceImp(Slickflow.Data.IDbSession)">
            <summary>
            The processing logic of startup
            启动执行方法
            </summary>
            <param name="session"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.Runtime.WfRuntimeManagerStartupSub">
            <summary>
            Runtime Manager Startup Sub Process
            流程启动运行时
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.Runtime.WfRuntimeManagerStartupSub.ExecuteInstanceImp(Slickflow.Data.IDbSession)">
            <summary>
            The processing logic of startup subprocess
            启动执行方法
            </summary>
            <param name="session"></param>
        </member>
        <member name="T:Slickflow.Engine.Core.SendBack.NodeSendBack">
            <summary>
            Node Send Back
            节点退回器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.SendBack.NodeSendBack.CreateBackwardToActivityInstanceObject(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Common.BackwardTypeEnum,System.Int32,System.Int32,Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Create Backward activity instance
            创建退回类型的活动实例对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.SendBack.NodeSendBack.CreateNewTask(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Virtual method for creating tasks
            1.  For automatically executed work items, there is no need to rewrite this method
            2.  For manually executed work items, the method needs to be rewritten to insert pending task data
            创建任务的虚方法
            1. 对于自动执行的工作项，无需重写该方法
            2. 对于人工执行的工作项，需要重写该方法，插入待办的任务数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.SendBack.NodeSendBack.InsertTransitionInstance(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Insert transition instance
            插入连线实例的方法
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.SendBack.NodeSendBack.CreateBackwardActivityTaskTransitionInstance(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Common.BackwardTypeEnum,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Create backward activity task transition instance
            创建退回时的流转节点对象、任务和转移数据
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.SendBack.NodeSendBackFactory">
            <summary>
            Create a sendback node processor
            创建退回节点处理器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.SendBack.NodeSendBackFactory.CreateNodeReverter(Slickflow.Engine.Core.SendBack.SendBackOperation,Slickflow.Data.IDbSession)">
            <summary>
            Create method
            创建方法
            </summary>
            <param name="sendbackOperation"></param>
            <param name="session"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Core.SendBack.NodeSendBackMIP">
            <summary>
            The current node is processing returns in parallel signing mode
            当前节点是并行会签模式下的退回处理
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.SendBack.NodeSendBackMIP.Execute">
            <summary>
            Execute method
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.SendBack.NodeSendBackMIP.CreateBackwardActivityTaskTransitionOfLastMultipleInstance(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.BackwardTypeEnum,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            The revocation operation of the last multi instance node with multiple signatures
            最后一个会签多实例子节点的撤销操作
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.SendBack.NodeSendBackMIS">
            <summary>
            Sequence sign together internal sendback processing
            串行会签内部退回处理
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.SendBack.NodeSendBackMIS.Execute">
            <summary>
            Execute method
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.SendBack.NodeSendBackMIS.CreateBackwardActivityTaskOfInnerMultipleInstance(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.BackwardTypeEnum,System.Int32,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            Create active instances and task data for rollback between multiple instance nodes
            创建多实例节点之间回滚时的活动实例，任务数据
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.SendBack.NodeSendBackMISReady">
            <summary>
            Sendback processor for task types
            Sequence signature, the first node is in pending status
            任务类型的退回处理器
            串行会签，第一个节点处于待办
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.SendBack.NodeSendBackMISReady.Execute">
            <summary>
            Execute method
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.SendBack.NodeSendBackMISReady.CreateBackwardActivityTaskTransitionOfLastMultipleInstance(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.BackwardTypeEnum,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            The revocation operation of the last multi instance node with multiple signatures
            最后一个会签多实例子节点的撤销操作
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.SendBack.NodeSendBackTask">
            <summary>
            Sendback processing for task types
            任务类型的退回处理器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.SendBack.NodeSendBackTask.Execute">
            <summary>
            Execute method
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.SendBack.NodeSendBackTask.CancelBrothersNode(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.WfAppRunner,Slickflow.Data.IDbSession)">
            <summary>
            Cancel adjacent branch nodes
            取消相邻分支节点
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.SendBack.NodeSendBackToMIPPrevious">
            <summary>
            The predecessor node of the current running node is the parallel sign together node for the sendback processing
            当前运行节点的前置节点是并行会签节点的退回处理
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.SendBack.NodeSendBackToMIPPrevious.Execute">
            <summary>
            Execute method
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.SendBack.NodeSendBackToMIPPrevious.CreateBackwardActivityTaskTransitionOfLastMultipleInstance(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.BackwardTypeEnum,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            The revocation operation of the last multi instance node with multiple signatures
            最后一个会签多实例子节点的撤销操作
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.SendBack.NodeSendBackToMISPrevious">
            <summary>
            Sign together type sendback processor
            The revocation operation of the last multi instance node with multiple signatures
            会签类型的退回处理器
            最后一个会签多实例子节点的撤销操作
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.SendBack.NodeSendBackToMISPrevious.Execute">
            <summary>
            Execute method
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Core.SendBack.NodeSendBackToMISPrevious.CreateBackwardActivityTaskTransitionOfLastMultipleInstance(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Common.BackwardTypeEnum,Slickflow.Engine.Common.TransitionTypeEnum,Slickflow.Engine.Common.TransitionFlyingTypeEnum,Slickflow.Engine.Common.ActivityResource,Slickflow.Data.IDbSession)">
            <summary>
            The revocation operation of the last multi instance node with multiple signatures
            最后一个会签多实例子节点的撤销操作
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Core.SendBack.SendBackOperation">
            <summary>
            Sendback Operation Data
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Delegate.ActivityDelegateService">
            <summary>
            Activity Delegate Service
            活动委托服务类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Delegate.ActivityDelegateService.#ctor(Slickflow.Data.IDbSession,Slickflow.Engine.Delegate.DelegateContext)">
            <summary>
            Constructor
            </summary>
            <param name="session"></param>
            <param name="context"></param>
        </member>
        <member name="M:Slickflow.Engine.Delegate.ActivityDelegateService.GetInstance``1(System.Int32)">
            <summary>
            Get Instance
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Delegate.DelegateContext">
            <summary>
            Delegate execution context
            代理执行上下文
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Delegate.DelegateExecutor">
            <summary>
            Delegate Agent Executor
            委托代理执行器
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateExecutor.InvokeExternalDelegate(Slickflow.Data.IDbSession,Slickflow.Engine.Delegate.EventFireTypeEnum,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Core.ActivityForwardContext)">
            <summary>
            Call program methods for external business applications
            调用外部业务应用的程序方法
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateExecutor.InvokeExternalDelegate(Slickflow.Data.IDbSession,Slickflow.Engine.Delegate.EventFireTypeEnum,Slickflow.Engine.Delegate.DelegateEventList,System.Int32)">
            <summary>
            Call program methods for external business applications
            调用外部业务应用的程序方法
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateExecutor.InvokeExternalDelegate(Slickflow.Data.IDbSession,Slickflow.Engine.Delegate.EventFireTypeEnum,Slickflow.Engine.Delegate.DelegateEventList,Slickflow.Engine.Delegate.DelegateContext)">
            <summary>
            Call program methods for external business applications
            调用外部业务应用的程序方法
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateExecutor.Execute(Slickflow.Data.IDbSession,Slickflow.Engine.Delegate.DelegateContext,System.Collections.Generic.IEnumerable{System.Collections.Generic.KeyValuePair{Slickflow.Engine.Delegate.EventFireTypeEnum,System.Func{Slickflow.Engine.Delegate.DelegateContext,Slickflow.Engine.Delegate.IDelegateService,System.Boolean}}})">
            <summary>
            Execution delegation list method
            执行委托列表方法
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateExecutor.Execute(Slickflow.Data.IDbSession,Slickflow.Engine.Delegate.DelegateContext,System.Collections.Generic.KeyValuePair{Slickflow.Engine.Delegate.EventFireTypeEnum,System.Func{Slickflow.Engine.Delegate.DelegateContext,Slickflow.Engine.Delegate.IDelegateService,System.Boolean}})">
            <summary>
            Execution delegation method
            执行委托方法
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Delegate.DelegateScopeTypeEnum">
            <summary>
            Delegate Scope Type
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Delegate.DelegateScopeTypeEnum.Process">
            <summary>
            Process Level
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Delegate.DelegateScopeTypeEnum.Activity">
            <summary>
            Activity Level
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Delegate.DelegateServiceBase">
            <summary>
            Delegate Service Base
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateServiceBase.GetProcessInstanceID">
            <summary>
            Read instance primary key ID
            读取实例主键ID
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateServiceBase.GetSession">
            <summary>
            Get Session
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateServiceBase.GetCondition(System.String)">
            <summary>
            Get Condition Value
            获取条件参数数值
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateServiceBase.SetCondition(System.String,System.String)">
            <summary>
            Set Condition Value
            设置条件
            </summary>
            <param name="name"></param>
            <param name="value"></param>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateServiceBase.SetActivityResource(Slickflow.Engine.Common.ActivityResource)">
            <summary>
            Set Activity Resource
            设置活动资源
            </summary>
            <param name="activityResource"></param>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateServiceBase.SaveVariable(Slickflow.Engine.Common.ProcessVariableTypeEnum,System.String,System.String)">
            <summary>
            Save Variable
            保存变量
            </summary>
            <param name="name"></param>
            <param name="value"></param>
            <param name="variableType"></param>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateServiceBase.GetVariable(Slickflow.Engine.Common.ProcessVariableTypeEnum,System.String)">
            <summary>
            Get Variable
            获取变量
            </summary>
            <param name="name"></param>
            <param name="variableType"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateServiceBase.GetVariableThroughly(System.String)">
            <summary>
            Get Variable Throughtly
            获取变量内容
            </summary>
            <param name="name"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Delegate.DelegateServiceFactory">
            <summary>
            Delegate Service Factory
            委托服务创建类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateServiceFactory.CreateDelegateService(Slickflow.Engine.Delegate.DelegateScopeTypeEnum,Slickflow.Data.IDbSession,Slickflow.Engine.Delegate.DelegateContext)">
            <summary>
            Create Delegate Service
            创建委托服务
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Delegate.DelegateUtil">
            <summary>
            Delegate Utility
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateUtil.CompositeJsonValue(System.String,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Construct JSON string for the final object
            构造最终对象的Json字符串
            </summary>
            <param name="arguments"></param>
            <param name="delegateService"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateUtil.FormatJsonStringIfSimple(System.String)">
            <summary>
            If it is a simple string, add double quotation marks
            如果是简单字符串, 加双引号
            jack => "jack"
            </summary>
            <param name="jsonValue"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateUtil.CompositeSqlParametersValue(System.String,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Construct JSON string for the final object
            构造最终对象的Json字符串
            </summary>
            <param name="arguments"></param>
            <param name="delegateService"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateUtil.CompositeKeyValue(System.String,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Construct JSON string for the final object
            构造最终对象的Json字符串
            </summary>
            <param name="arguments"></param>
            <param name="delegateService"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Delegate.DelegateUtil.CompositeParameterValues(System.String,Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Construct a variable value list
            构造可变数值列表
            </summary>
            <param name="arguments"></param>
            <param name="delegateService"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Delegate.EventFireTypeEnum">
            <summary>
            External event interaction trigger type
             1.  Process event:
            Process Start ->Process Run ->Process End
             2.  Event:
            Activity creation ->Activity execution ->Activity completion
             3.  Task:
            Allocation ->Complete
             外部事件交互触发类型
             1. 流程事件：
             流程启动->流程运行->流程结束
             2. 活动事件：
             活动创建->活动执行->活动完成
             3. 任务：
             分配->完成
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Delegate.IExternable">
            <summary>
            Externally executable interface
            可外部执行接口
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Delegate.ExternalServiceBase">
            <summary>
            External Service Base
            外部服务基类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Delegate.ExternalServiceBase.Executable(Slickflow.Engine.Delegate.IDelegateService)">
            <summary>
            Set Delegate Service
            设置委托服务
            </summary>
            <param name="delegateService"></param>
        </member>
        <member name="T:Slickflow.Engine.Delegate.IDelegateService">
            <summary>
            Delegate Service Interface
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Delegate.DelegateEventList">
            <summary>
            Delegate Event List
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Delegate.IExternalService">
            <summary>
            External Service Interface
            外部服务接口
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Delegate.ProcessDelegateService">
            <summary>
            Process Delegate Service
            流程委托服务类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Delegate.ProcessDelegateService.GetInstance``1(System.Int32)">
            <summary>
            Get Instance
            </summary>
            <typeparam name="T"></typeparam>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Essential.MessageDelegateService">
            <summary>
            Message delegation function in the message queue
            消息队列中的消息委托函数
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Essential.MessageDelegateService.PublishMessage(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity)">
            <summary>
            Build the message to be published
            构建要发布的消息
            </summary>
            <param name="processInstance"></param>
            <param name="throwActivity"></param>
            <param name="throwActivityInstance"></param>
        </member>
        <member name="M:Slickflow.Engine.Essential.MessageDelegateService.ConsumeMessage(Slickflow.Module.Essential.Entity.MessageEntity)">
            <summary>
            Message consumption function
            消息消费函数
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Essential.MessageDelegateService.GetRunnerFromMessagExchange(Slickflow.Engine.Essential.MessageRunnerView)">
            <summary>
            Encapsulate the operator object from the message view
            从消息视图中封装运行者对象
            </summary>
            <param name="msgRunnerView"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Essential.MessageRunnerView">
            <summary>
            Message Runner View
            消息运行者对象视图
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Essential.SignalDelegateService">
            <summary>
            Signal Delegate Service
            消息队列中的信号委托函数
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Essential.SignalDelegateService.PublishSignal(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity)">
            <summary>
            Build Singal Published
            构建要发布的消息
            </summary>
            <param name="processInstance"></param>
            <param name="throwActivity"></param>
            <param name="throwActivityInstance"></param>
        </member>
        <member name="M:Slickflow.Engine.Essential.SignalDelegateService.ConsumeSignal(Slickflow.Module.Essential.Entity.SignalEntity)">
            <summary>
            Singal Consume function
            消息消费函数
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Essential.SignalDelegateService.GetStartRunnerFromSignalExchange(Slickflow.Engine.Essential.SignalRunnerView,Slickflow.Engine.Business.Entity.JobInfoEntity)">
            <summary>
            Get start info from signal exchange
            从信号交换获取启动信息
            </summary>
            <param name="msgRunnerView"></param>
            <param name="jobInfo"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Essential.SignalDelegateService.RunProcessSignalCatchEventOneByOne(Slickflow.Engine.Essential.SignalRunnerView,Slickflow.Engine.Business.Entity.JobInfoEntity)">
            <summary>
            Run the process belonging to the SignalCatch node
            运行属于SignalCatch节点的流程
            </summary>
            <param name="signalRunner"></param>
            <param name="jobInfo"></param>
        </member>
        <member name="M:Slickflow.Engine.Essential.SignalDelegateService.GetRunnerFromActivityInstance(Slickflow.Engine.Essential.SignalRunnerView,Slickflow.Engine.Business.Entity.JobInfoEntity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity)">
            <summary>
            Get runner info from activity instance
            从活动实例获取运行者信息
            </summary>
            <param name="signalRunner"></param>
            <param name="jobInfo"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Essential.SignalRunnerView">
            <summary>
            Signal Runner View
            信号运行者对象视图
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Essential.WfMessageDelegationException">
            <summary>
            Message Delegation Exception
            消息代理服务异常类
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Essential.WfSignalDelegationException">
            <summary>
            Singal Delegattion Exception
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Service.IWorkflowService">
            <summary>
            Workflow Service Interface
            工作流服务接口
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Service.WorkflowService">
            <summary>
            Process operation flow service (execution part)
            流程运行流转服务(执行部分)
            </summary>
            <summary>
            Process Definition Data Service Class
            流程定义数据服务类
            </summary>
            <summary>
            Workflow Service (Data Query)
            工作流服务(数据查询)
            </summary>
            <summary>
            Chain interface service class
            链式接口服务类
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Service.WorkflowService.ResourceService">
            <summary>
            Role User Resource Service Interface
            角色用户资源服务接口
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.#ctor">
            <summary>
            Constructor
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetFirstActivity(System.String,System.String)">
            <summary>
            Obtain the first feasible node of the process
            获取流程的第一个可办理节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetTaskActivityList(System.String,System.String)">
            <summary>
            Get the node list of task types
            获取任务类型的节点列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetTaskActivityList(System.Int32)">
            <summary>
            Get the node list of task types
            获取任务类型的节点列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetAllTaskActivityList(System.String,System.String)">
            <summary>
            Get a list of nodes for all task types (including countersignature and subprocesses)
            获取全部任务类型的节点列表（包含会签和子流程）
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetNextActivity(System.String,System.String,System.String)">
            <summary>
            Get the next node information of the current node
            获取当前节点的下一个节点信息
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetNextActivity(System.String,System.String,System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Get the next node information of the current node
            获取当前节点的下一个节点信息
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetNextActivity(Slickflow.Engine.Common.WfAppRunner,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Simple mode: Obtain the next node of the process based on the application 
            (without considering the situation of multiple subsequent nodes)
            简单模式：根据应用获取流程下一步节点(不考虑有多个后续节点的情况）
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetNextActivity(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Simple mode: Obtain the next node of the process based on the application 
            (without considering the situation of multiple subsequent nodes)
            简单模式：根据应用获取流程下一步节点(不考虑有多个后续节点的情况）
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetNextActivityTree(Slickflow.Engine.Common.WfAppRunner,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Obtain the next node list according to the application process
            根据应用获取流程下一步节点列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetNextActivityTreeAsync(Slickflow.Engine.Common.WfAppRunner,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Obtain the next node list according to the application process
            根据应用获取流程下一步节点列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetNextActivityTree(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Collections.Generic.IDictionary{System.String,System.String},System.Data.IDbTransaction)">
            <summary>
            Obtain the next node list according to the application process
            根据应用获取流程下一步节点列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetNextActivityTreeAsync(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Collections.Generic.IDictionary{System.String,System.String},System.Data.IDbTransaction)">
            <summary>
            Obtain the next node list according to the application process
            根据应用获取流程下一步节点列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetNextActivityTree(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Obtain the next node list according to the application process
            获取下一步活动列表树
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetNextActivityTreeAsync(System.Int32,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Obtain the next node list according to the application process
            获取下一步活动列表树
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetNextActivityRoleUserTree(Slickflow.Engine.Common.WfAppRunner,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            According to the application, obtain the next node list of the process, including role users
            根据应用获取流程下一步节点列表，包含角色用户
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetNextActivityRoleUserTreeAsync(Slickflow.Engine.Common.WfAppRunner,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            According to the application, obtain the next node list of the process, including role users
            根据应用获取流程下一步节点列表，包含角色用户
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetNextStepInfo(Slickflow.Engine.Common.WfAppRunner,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            According to the application, obtain the next node list of the process, including role users
            Includes:
            1) The next step for the gateway is to add a pre loaded user list of personnel;
            2) The next step in the co signing mode is to add a pre loaded user list of personnel;
            根据应用获取流程下一步节点列表，包含角色用户
            包含：
            1) 网关下一步添加人员的预加载用户列表；
            2) 会签模式的下一步添加人员的预加载用户列表；
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetNextStepInfoAsync(Slickflow.Engine.Common.WfAppRunner,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Asynchronous retrieval of next step list
            异步获取下一步列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetFirstActivityRoleUserTree(Slickflow.Engine.Common.WfAppRunner,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Get the list of node roles and personnel for the next step of the starting node when the process starts
            Unified integration into: GetNextActivityRoleUserTree()
            流程启动时获取开始节点下一步的节点角色人员列表
            统一整合到: GetNextActivityRoleUserTree()
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetFirstActivityRoleUserTreeAsync(Slickflow.Engine.Common.WfAppRunner,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Get the list of node roles and personnel for the next step of the starting node when the process starts
            Unified integration into: GetNextActivityRoleUserTree()
            流程启动时获取开始节点下一步的节点角色人员列表
            统一整合到: GetNextActivityRoleUserTree()
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetActivityInstanceCompleted(System.Int32)">
            <summary>
            Get activity instance completed
            获取已经完成的节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetActivityInstanceCompleted(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Get activity instance completed
            获取已经完成的节点记录
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetTransitionInstanceList(Slickflow.Engine.Business.Entity.TransitionInstanceQuery)">
            <summary>
            Get transition instance list
            获取转移实例记录
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetActivityEntity(System.String,System.String,System.String)">
            <summary>
            Get activity entity
            获取当前活动实体
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetActivityRoles(System.String,System.String,System.String)">
            <summary>
            Get activity roles
            获取活动节点下的角色数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetPreviousActivityTree(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Get previous activity list
            获取上一步节点信息
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetPreviousActivityTreeAsync(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Get previous activity list
            获取上一步节点信息
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetPreviousStepInfo(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Get previous activity list
            获取上一步节点信息
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetPreviousStepInfoAsync(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Get previous activity list
            异步获取上一步节点信息
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetSignForwardStepInfo(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Obtain performer information for the signing process
            获取加签步骤人员信息
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Start">
            <summary>
            Process Startup
            Coding Example：
            var wfResult = wfService.CreateRunner(runner.UserID, runner.UserName)
                            .UseApp(runner.AppInstanceID, runner.AppName, runner.AppInstanceCode)
                            .UseProcess(runner.ProcessGUID, runner.Version)
                            .Start();
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Service.WorkflowService.startLock">
            <summary>
            Lock object
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Start(System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Process Startup
            Coding Example：
            var wfResult = wfService.CreateRunner(runner.UserID, runner.UserName)
                            .UseApp(runner.AppInstanceID, runner.AppName, runner.AppInstanceCode)
                            .UseProcess(runner.ProcessGUID, runner.Version)
                            .Start(conn, trans);
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.StartProcess(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Start process
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.StartProcessAsync(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Start process async
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.StartProcess(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Start process
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.StartProcessAsync(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Start process async
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.StartByMessage">
            <summary>
            Start by Message
            消息启动流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.StartByMessage(System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Start by Message
            消息启动流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.StartProcessByMessage(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Start by Message
            启动流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.StartProcessByMessageAsync(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Start by Message Async
            异步消息启动流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.StartProcessByMessage(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Start by Message
            流程启动
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.StartProcessByMessageAsync(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Start by Message Async
            异步流程启动
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Run">
            <summary>
            Running process
            Coding example:
            var wfResult = wfService.CreateRunner(runner.UserID, runner.UserName)
                            .UseApp(runner.AppInstanceID, runner.AppName, runner.AppInstanceCode)
                            .UseProcess(runner.ProcessGUID, runner.Version)
                            .Run();
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Run(System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Running process
            Coding example:
            var wfResult = wfService.CreateRunner(runner.UserID, runner.UserName)
                            .UseApp(runner.AppInstanceID, runner.AppName, runner.AppInstanceCode)
                            .UseProcess(runner.ProcessGUID, runner.Version)
                            .Run(conn, trans);
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.RunProcessApp(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process Run
            Explanation: The new method uniformly calls RunProcess()
            流程流转
            说明：新方法统一调用RunProcess()
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.RunProcessApp(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Process Run
            Explanation: The new method uniformly calls RunProcess()
            流程流转
            说明：新方法统一调用RunProcess()
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.RunProcess(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Run Process
            流程流转
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.RunProcessAsync(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Run Process Async
            异步执行流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.RunProcess(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Run Process
            流程流转
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.RunProcessAsync(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Run Process Async
            异步流程流转
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.RunAuto">
            <summary>
            Run Automatically
            自动运行
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.RunAuto(System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Run Automatically
            自动运行
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.RunProcessAuto(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Run process auto
            流程流转
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.RunProcessAutoAsync(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Run process auto async
            异步执行流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.RunProcessAuto(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Run Process auto
            流程流转
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.RunProcessAutoAsync(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Run process auto async
            异步流程流转
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Withdraw">
            <summary>
            Process withdraw
            流程撤销
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Withdraw(System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Process withdraw
            流程撤销
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.WithdrawProcess(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process withdraw
            流程撤销
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.WithdrawProcessAsync(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process withdraw async
            异步撤销流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.WithdrawProcess(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Process withdraw
            撤销流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.WithdrawProcessAsync(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Process withdraw async
            异步撤销流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SendBack">
            <summary>
            Process sendback
            流程退回
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SendBack(System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Process sendback
            流程退回
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SendBackProcess(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process sendback
            退回到上一步
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SendBackProcessAsync(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process sendback async
            异步退回流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SendBackProcess(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Process sendback
            退回到上一步
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SendBackProcessAsync(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Process sendback async
            异步退回流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Resend">
            <summary>
            Process Resend
            流程返送
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Resend(System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Process Resend
            流程返送
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ResendProcess(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process Resend
            从新返送(来自sendback的节点)
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ResendProcessAsync(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process Resend Async
            异步返送流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ResendProcess(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Process Resend
            从新返送(来自sendback的节点)
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ResendProcessAsync(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Process Resend Async
            异步返送流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Revise">
            <summary>
            Process revise
            (Reassignment of tasks to returned nodes)
            流程修订
            (退回后的节点重新指派任务)
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Revise(System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Process revise
            流程修订
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ReviseProcess(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process revise
            从新修订(来自sendback的节点)
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ReviseProcessAsync(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process revise async
            异步修订流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ReviseProcess(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Process revise
            从新修订(来自sendback的节点)
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ReviseProcessAsync(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Process revise async
            异步修订流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Reverse">
            <summary>
            Process reverse
            (Completed processes can be reversed)
            流程返签
            (已经结束的流程可以被复活）
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Reverse(System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Process reverse
            流程返签
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ReverseProcess(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process reverse
            流程返签
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ReverseProcessAsync(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process reverse async
            异步返签流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ReverseProcess(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Process reverse
            流程返签
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ReverseProcessAsync(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Process reverse async
            异步返签流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Reject">
            <summary>
            Process reject
            流程驳回
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Reject(System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Process reject
            流程驳回
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.RejectProcess(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process reject
            流程驳回
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.RejectProcessAsync(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process reject async
            异步驳回流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.RejectProcess(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Process reject
            流程驳回
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.RejectProcessAsync(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Process reject async
            异步驳回流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Close">
            <summary>
            Process Close
            流程关闭
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Close(System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
             Process Close
            流程关闭
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.CloseProcess(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
             Process Close
            流程关闭
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.CloseProcessAsync(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
             Process Close Async
            异步关闭流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.CloseProcess(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
             Process Close
            流程关闭
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.CloseProcessAsync(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
             Process Close Async
            异步关闭流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Jump(Slickflow.Engine.Common.JumpOptionEnum)">
            <summary>
            Process Jump
            流程跳转
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Jump(System.Data.IDbConnection,System.Data.IDbTransaction,Slickflow.Engine.Common.JumpOptionEnum)">
            <summary>
            Process Jump
            流程跳转
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.JumpProcess(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Common.JumpOptionEnum)">
            <summary>
            Process Jump
            流程跳转
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.JumpProcessAsync(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Common.JumpOptionEnum)">
            <summary>
            Process Jump Async
            异步流程跳转
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.JumpProcess(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction,Slickflow.Engine.Common.JumpOptionEnum)">
            <summary>
            Process Jump
            流程跳转
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.JumpProcessAsync(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction,Slickflow.Engine.Common.JumpOptionEnum)">
            <summary>
            Process Jump Async
            异步流程跳转
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.FillNextActivityPerforms(Slickflow.Engine.Common.WfAppRunner,Slickflow.Engine.Common.JumpOptionEnum)">
            <summary>
            Regenerate the list of performers for the jump activity
            重新生成跳转活动的执行人员列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SignForward">
            <summary>
            Process Signforward
            流程加签
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SignForward(System.Data.IDbConnection,System.Data.IDbTransaction)">
            <summary>
            Process Signforward
            流程加签
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SignForwardProcess(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process Signforward
            加签
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SignForwardProcessAsync(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process Signforward Async
            异步流程加签
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SignForwardProcess(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Process Signforward
            流程加签
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SignForwardProcessAsync(System.Data.IDbConnection,Slickflow.Engine.Common.WfAppRunner,System.Data.IDbTransaction)">
            <summary>
            Process Signforward Async
            异步流程加签
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ResumeProcess(System.Int32,Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Resume process instance (only applicable to suspended operations)
            Suspend (restore) processes, cancel (run) processes, discard processes in progress or completed
            恢复流程实例(只针对挂起操作）
            挂起(恢复)流程成、取消(运行的)流程、废弃执行中或执行完的流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SuspendProcess(System.Int32,Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process Suspend
            挂起流程实例
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.CancelProcess(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process Cancel
            取消流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.DiscardProcess(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process Discard
            废弃流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.TerminateProcess(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Process Terminate
            终结流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.TerminateProcess(System.Data.IDbConnection,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            Process Terminate
            终结流程实例
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.AgreeTask(System.Int32)">
            <summary>
            Agree
            同意
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.RefuseTask(System.Int32)">
            <summary>
            Refuse
            拒绝
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SetTaskRead(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Set task to read status (retrieve task based on task ID)
            设置任务为已读状态(根据任务ID获取任务)
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SetTaskEMailSent(System.Int32)">
            <summary>
            Set task email send status
            更新任务邮件发送状态
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetTaskView(System.Int32)">
            <summary>
            Get task view
            获取任务视图
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetTaskView(System.Int32,System.Int32)">
            <summary>
            Get task view
            获取任务视图
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetTaskView(System.Data.IDbConnection,System.String,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            Get task view
            获取任务视图
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetRunningTasks(Slickflow.Engine.Business.Entity.TaskQuery)">
            <summary>
            Get running tasks
            获取运行中的任务
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetFirstRunningTask(System.Int32)">
            <summary>
            Get first runnint task of activity instance
            获取活动实例下的第一个任务记录
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetReadyTasks(Slickflow.Engine.Business.Entity.TaskQuery)">
            <summary>
            Get tasks in ready status
            获取待办任务
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetCompletedTasks(Slickflow.Engine.Business.Entity.TaskQuery)">
            <summary>
            Get tasks in completed status
            获取办结任务列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetTaskListEMailUnSent">
            <summary>
            Get task list about email unsent
            获取未发送邮件通知的待办任务列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessByVersion(System.String,System.String)">
            <summary>
            Get Process by Version
            流程定义数据读取
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessByName(System.String,System.String)">
            <summary>
            Get Process by Version
            流程定义数据读取
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessByCode(System.String,System.String)">
            <summary>
            Get Process by Version
            流程定义数据读取
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessUsing(System.String)">
            <summary>
            Retrieve the current using version of the process 
            获取当前版本的流程定义记录
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessByID(System.Int32)">
            <summary>
            Retrieve the process by id
            获取流程定义记录
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessFileByID(System.Int32)">
            <summary>
            Retrieve the process file by id
            获取流程定义文件
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessList">
            <summary>
            Get process list
            获取流程定义数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessListSimple">
            <summary>
            Obtain process definition data (including only basic attributes)
            获取流程定义数据（只包括基本属性）
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessFile(System.String,System.String)">
            <summary>
            Get process file
            流程定义的XML文件获取
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SaveProcessFile(Slickflow.Engine.Business.Entity.ProcessFileEntity)">
            <summary>
            Save process file
            保存流程定义的xml文件
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.InsertProcess(Slickflow.Engine.Business.Entity.ProcessEntity)">
            <summary>
            Insert process
            创建流程定义记录
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.CreateProcess(Slickflow.Engine.Business.Entity.ProcessEntity)">
            <summary>
            Create process
            创建流程定义记录
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.CreateProcessVersion(Slickflow.Engine.Business.Entity.ProcessEntity)">
            <summary>
            Create process version
            创建流程定义记录新版本
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.UpdateProcess(Slickflow.Engine.Business.Entity.ProcessEntity)">
            <summary>
            Update process
            更新流程定义记录
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.UpdateProcessUsingState(System.String,System.String,System.Byte)">
            <summary>
            Update process state
            更新流程使用状态
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.UpgradeProcess(System.String,System.String,System.String)">
            <summary>
            Upgrade process
            升级流程记录
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.DeleteProcess(System.String,System.String)">
            <summary>
            Delete process
            删除流程定义记录
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.DeleteProcess(System.String)">
            <summary>
            Delete process
            删除流程定义记录
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.DeleteInstanceInt(System.String,System.String)">
            <summary>
            Delete instance internal
            删除流程实例包括其关联数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ImportProcess(System.String)">
            <summary>
            Import process file and generate a new process
            导入流程XML文件，并生成新流程
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ValidateProcess(Slickflow.Engine.Business.Entity.ProcessEntity)">
            <summary>
            Validate process
            流程校验
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ResetCache(System.String,System.String)">
            <summary>
            Reset Cachae
            重置缓存中的流程定义信息
            </summary>
            <param name="processGUID">流程Guid编号</param>
            <param name="version">流程版本</param>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessInstance(System.Int32)">
            <summary>
            Get process instance by id
            获取流程实例数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessInstance(System.Data.IDbConnection,System.Int32,System.Data.IDbTransaction)">
            <summary>
            Get process instance by id
            获取流程实例数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessInstance(System.String)">
            <summary>
            Get process instance by app instance id
            获取流程实例数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessInstanceByActivity(System.Int32)">
            <summary>
            Get process instance by activity instance id
            获取流程实例数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetRunningProcessInstance(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Get process instance by runner
            获取运行中的流程实例
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessInstanceCount(System.String,System.String)">
            <summary>
            Get process instance count
            判断流程实例是否存在
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessInitiator(System.Int32)">
            <summary>
            Get process initiator
            获取流程发起人信息
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetActivityInstance(System.Int32)">
            <summary>
            Get activity instance
            获取活动实例数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetActivityInstances(System.Int32)">
            <summary>
            Get activity instance
            获取一个流程实例下的所有活动实例
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetTargetActivityInstanceList(System.Int32)">
            <summary>
            Get target activity instance list
            获取目标活动实例列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetTaskPerformers(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Get task performers
            获取当前等待办理节点的任务分配人列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.IsLastTask(System.Int32)">
            <summary>
            Determine whether the current task is the last task
            (Suitable for scenarios with simple nodes or multiple instance nodes)
            判断当前任务是否是最后一个任务
            (适应于简单节点或者多实例节点的场景)
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.EntrustTask(Slickflow.Engine.Business.Entity.TaskEntrustedEntity,System.Boolean)">
            <summary>
            Entrust task
            创建新的委托任务
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ReplaceTask(System.Int32,System.Collections.Generic.List{Slickflow.Engine.Business.Entity.TaskReplacedEntity},Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Replace task
            取代任务
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SetProcessOverdue(System.Int32,System.DateTime,Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Set process overdue
            设置流程实例的过期时间
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SetProcessJobTimerCompleted(System.Data.IDbConnection,System.Int32,System.Data.IDbTransaction)">
            <summary>
            Set the scheduled job of the process instance to completion status
            (Used for HangFire backend polling task)
            设置活动实例的定时作业为完成状态
            (用于HangFire后台轮询任务)
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SetActivityJobTimerCompleted(System.Data.IDbConnection,System.Int32,System.Data.IDbTransaction)">
            <summary>
            Set the scheduled job of the activity instance to completion status
            (Used for HangFire backend polling task)
            设置活动实例的定时作业为完成状态
            (用于HangFire后台轮询任务)
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetRunningNode(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Get running node
            获取流程当前运行节点信息
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.IsMineTask(Slickflow.Engine.Business.Entity.ActivityInstanceEntity,System.String)">
            <summary>
            Determine if it is my task
            判断是否是我的任务
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetRunningActivityInstance(Slickflow.Engine.Business.Entity.TaskQuery)">
            <summary>
            Get running activity instance
            获取正在运行中的活动实例
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessVariable(System.Int32)">
            <summary>
            Get process variable
            获取流程变量
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessVariable(Slickflow.Engine.Business.Entity.ProcessVariableQuery)">
            <summary>
            Get process variable
            获取流程变量
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetProcessVariableList(Slickflow.Engine.Business.Entity.ProcessVariableQuery)">
            <summary>
            Get process variable list
            获取变量列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.DeleteProcessVariable(System.Int32)">
            <summary>
            Delete process variable
            删除流程变量
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.ValidateProcessVariable(System.Int32,System.String)">
            <summary>
            Validate process variable
            验证触发表达式是否满足
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.UpdateProcessInstance(Slickflow.Engine.Business.Entity.ProcessInstanceEntity)">
            <summary>
            Update process instance
            更新流程实例实体
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SaveProcessVariable(Slickflow.Engine.Business.Entity.ProcessVariableEntity)">
            <summary>
            Save process variable
            保存流程变量
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetRoleAll">
            <summary>
            Get role all
            获取所有角色数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetRoleByProcess(System.String,System.String)">
            <summary>
            Get role by process
            获取流程定义文件中的角色信息
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetRoleUserListByProcess(System.String,System.String)">
            <summary>
            Get role user list by process
            获取流程文件中角色用户的列表数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetUserAll">
            <summary>
            Get user all
            获取所有用户数据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetUserListByRole(System.String)">
            <summary>
            Get user list by role
            根据角色获取用户列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.GetPerformerList(Slickflow.Engine.Common.NodeView)">
            <summary>
            Get performer list
            获取节点上的执行者列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.CreateRunner(Slickflow.Engine.Common.WfAppRunner)">
            <summary>
            Create runner
            创建运行用户身份
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.CreateRunner(System.String,System.String)">
            <summary>
            Create runner
            创建运行用户身份
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.UseApp(System.String,System.String,System.String)">
            <summary>
            User application
            绑定业务票据
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.UseProcess(System.String,System.String)">
            <summary>
            Use Process Definition
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.NextStepInt(Slickflow.Engine.Common.PerformerList)">
            <summary>
            Next activity
            This method is used for internal testing
            Special note: Do not use this method in formal production environments
            下一步活动
            内部测试时用到此方法
            特别注意：正式生产环境，不要使用该方法
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.NextStepInt(System.String,System.String)">
            <summary>
            Next activity
            This method is used for internal testing
            Special note: Do not use this method in formal production environments
            下一步活动
            内部测试时用到此方法
            特别注意：正式生产环境，不要使用该方法
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.NextStep(System.Collections.Generic.IDictionary{System.String,Slickflow.Engine.Common.PerformerList})">
            <summary>
            Next step information
            下一步活动
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.NextStep(System.String,Slickflow.Engine.Common.PerformerList)">
            <summary>
            Next step information
            下一步活动
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.PrevStepInt">
            <summary>
            Previous step internal
            指定上一步类型
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.IfCondition(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Set condition
            设置变量条件
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.IfCondition(System.String,System.String)">
            <summary>
            Set condition
            添加条件变量
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.OnTask(System.Int32)">
            <summary>
            Set task
            传递任务ID
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SetVariable(System.String,System.String)">
            <summary>
            Set variable
            添加动态变量
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.SetVariable(System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Set variable
            添加动态变量
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Service.WorkflowService.Subscribe(Slickflow.Engine.Delegate.EventFireTypeEnum,System.Func{Slickflow.Engine.Delegate.DelegateContext,Slickflow.Engine.Delegate.IDelegateService,System.Boolean})">
            <summary>
            Subscribe
            活动事件订阅
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Storage.XPDLLocalStorage">
            <summary>
            Process definition file storage
            1) Default local files, which can be read from databases, cloud storage files, and other methods
            2) This inheritance class implements database storage methods
            流程定义文件存储
            1） 默认本地文件，可以实现数据库读取，云端存储文件读取等方式
            2） 此继承类是实现数据库存储方式
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Storage.XPDLLocalStorage.Read(Slickflow.Engine.Business.Entity.ProcessEntity)">
            <summary>
            Read local file
            本地文件存储读取方法
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Storage.XPDLLocalStorage.Save(System.String,System.Xml.XmlDocument)">
            <summary>
            Save to local file
            XML文件本地存储
            </summary>
            <param name="filePath"></param>
            <param name="xmlDoc"></param>
        </member>
        <member name="T:Slickflow.Engine.Storage.XPDLStorageFactory">
            <summary>
            Factory method for external storage
            外部存储的工厂方法
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Storage.XPDLStorageFactory.CreateXPDLStorage">
            <summary>
            Create XPDL storage
            创建外部存储方法实例
            </summary>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Utility.CachedHelper">
            <summary>
            Process definition file cache
            流程定义文件Cache
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.CachedHelper.SetXpdlCache(System.String,System.String,System.Xml.XmlDocument)">
            <summary>
            Set Xpdl Cache
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.CachedHelper.GetXpdlCache(System.String,System.String)">
            <summary>
            Read xpdl cache
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.CachedHelper.TryUpdate(System.String,System.String,System.Xml.XmlDocument)">
            <summary>
            update cache
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.CachedHelper.SetEntityCache(System.Int32,System.Object)">
            <summary>
            Cache the dynamic mapping method for entity Reader conversion
            设置实体Reader转换的动态映射方法缓存
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.CachedHelper.GetEntityCache(System.Int32)">
            <summary>
            Cache the dynamic mapping method for reading entity Reader conversion
            读取实体Reader转换的动态映射方法缓存
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Utility.ConfigHelper">
            <summary>
            Config Helper
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.ConfigHelper.GetAppSettingString(System.String)">
            <summary>
            Obtain node information for application configuration
            获取应用配置的节点信息
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.ConfigHelper.GetConnectionString(System.String)">
            <summary>
            Obtain node information of the connection string
            获取连接串的节点信息
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.ConfigHelper.GetExecutingDirectory">
            <summary>
            Get the execution path of the current application
            获取当前应用程序的执行路径
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Utility.EMailSendUtility">
            <summary>
            EMail send utility
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.EMailSendUtility.SendEMailAsync(System.String,System.String,System.String)">
            <summary>
            Send Email
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.EMailSendUtility.SendCompletedCallback(System.Object,System.ComponentModel.AsyncCompletedEventArgs)">
            <summary>
            The callback method for sending emails after completion
            邮件发送完毕的回调方法
            </summary>
            <param name="sender"></param>
            <param name="e"></param>
        </member>
        <member name="T:Slickflow.Engine.Utility.EnumHelper">
            <summary>
            Convert enumeration types based on string conversion
            根据字符串转换枚举类型
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.EnumHelper.ParseEnum``1(System.String)">
            <summary>
            Parse Enum
            枚举类型解析
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.EnumHelper.TryParseEnum``1(System.String)">
            <summary>
            Parse Enum
            枚举类型解析
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.EnumHelper.GetFirst``1(System.Collections.Generic.List{``0})">
            <summary>
            Get the first element of a non empty list
            获取非空列表的首个元素
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Utility.MimeFormat">
            <summary>
            Mime format
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Utility.HttpClientHelper">
            <summary>
            HttpClient Helper
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.CreateHelper(System.String)">
            <summary>
            Create Helper
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.CreateHelper(System.String,System.String)">
            <summary>
            Create Helper
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.Get">
            <summary>
            HttpGet
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.Get``1">
            <summary>
            HttpGet
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.GetAsync``1">
            <summary>
            GetAsync
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.Post``2(``0)">
            <summary>
            HttpPost
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.PostAsync``2(``0)">
            <summary>
            HttpPost async
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.Post(System.String)">
            <summary>
            Post
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.PostAsync(System.String)">
            <summary>
            Post
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.Query``2(``0)">
            <summary>
            Query
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.QueryAsync``2(``0)">
            <summary>
            Query Async
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.Insert``2(``0)">
            <summary>
            Insert
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.InsertAsync``2(``0)">
            <summary>
            Insert Async
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.Put``2(``0)">
            <summary>
            Put
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.PutAsync``2(``0)">
            <summary>
            Put async
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.Put(System.String)">
            <summary>
            Put
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.Update``2(``0)">
            <summary>
            Update
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.UpdateAsync``2(``0)">
            <summary>
            Update Async
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.Delete">
            <summary>
            Delete
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.Delete``1">
            <summary>
            Delete
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.HttpClientHelper.DeleteAsync``1">
            <summary>
            Delete Aysnc
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Utility.MD5Helper">
            <summary>
            MD5 Helper
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.MD5Helper.ComputeMD5(System.IO.Stream)">
            <summary>
            Calculate the MD5 value of the file content
            计算文件内容的MD5值
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.MD5Helper.GetMD5(System.String)">
            <summary>
            Get the MD5 value of the file content
            获取文本类型的MD5值
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Utility.RandomSequenceGenerator">
            <summary>
            Random sequence generator
            随机序列生成器
            https://www.c-sharpcorner.com/article/generating-random-number-and-string-in-C-Sharp/
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.RandomSequenceGenerator.GetRandomNumber(System.Int32,System.Int32)">
            <summary>
            Get Random Number
            获取随机数字
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.RandomSequenceGenerator.GetRandomInt4">
            <summary>
            Get Random Int 4
            获得随机整数，默认4位整数
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.RandomSequenceGenerator.GetRandomString(System.Int32,System.Boolean)">
            <summary>
            Get Random String
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.RandomSequenceGenerator.GetRandomSequece">
            <summary>
            Get Random Sequence
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Utility.ReflectionHelper">
            <summary>
            Reflection Helper
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.ReflectionHelper.GetSpecialInstance``1(System.String)">
            <summary>
            Get Special Instance
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.ReflectionHelper.GetProperty(System.Linq.Expressions.LambdaExpression)">
            <summary>
            Get Property
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Utility.ResponseResult">
            <summary>
            Response Result
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Utility.ResponseResult.Status">
            <summary>
            Status(0-default, 1-success, -1-error)
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Utility.ResponseResult.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Utility.ResponseResult.NewID">
            <summary>
            New ID Value
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Utility.ResponseResult.ExtraData">
            <summary>
            Extra Data
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.ResponseResult.Default(System.String)">
            <summary>
            Default Response
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.ResponseResult.Success(System.String)">
            <summary>
            Success Response
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.ResponseResult.Success(System.Object,System.String)">
            <summary>
            Success Response
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.ResponseResult.Error(System.String)">
            <summary>
            Error Response
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Utility.ResponseResult`1">
            <summary>
            Response Result Generic
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Utility.ResponseResult`1.Status">
            <summary>
            Status
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Utility.ResponseResult`1.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Utility.ResponseResult`1.NewID">
            <summary>
            New ID Value
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Utility.ResponseResult`1.Entity">
            <summary>
            Entity
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Utility.ResponseResult`1.TotalPages">
            <summary>
            Total Pages
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Utility.ResponseResult`1.TotalRowsCount">
            <summary>
            Total Rows Count
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.ResponseResult`1.Default">
            <summary>
            Default Response
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Utility.ResponseResult`1.Success(`0,System.String)">
            <summary>
            Success Response
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.ResponseResult`1.Success(System.Int32,System.String)">
            <summary>
            Success Response
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.ResponseResult`1.Error(System.String)">
            <summary>
            Error Response
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Utility.SerializationHelper">
            <summary>
            Serialization Helper
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.SerializationHelper.Serialize(System.Type,System.Object)">
            <summary>
            Serialize method
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.SerializationHelper.Deserialize(System.Type,System.String)">
            <summary>
            Deserialize
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.SerializationHelper.SplitStrings(System.Collections.Generic.IEnumerable{System.String},System.String)">
            <summary>
            Split Strings
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Utility.XMLHelper">
            <summary>
            XMLHelper 
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Utility.XMLHelper.GetXmlNodeByXpath(System.Xml.XmlDocument,System.String)">
            <summary>
            选择匹配XPath表达式的第一个节点XmlNode.
            </summary>
            <param name="xmlDoc">XML文档</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名")</param>
            <returns>返回XmlNode</returns>
        </member>
        <member name="M:Slickflow.Engine.Utility.XMLHelper.GetXmlNodeByXpath(System.Xml.XmlDocument,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
            选择匹配XPath表达式的第一个节点XmlNode.
            </summary>
            <param name="xmlDoc">XML文档</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名")</param>
            <param name="nsmgr">命名空间</param>
            <returns>返回XmlNode</returns>
        </member>
        <member name="M:Slickflow.Engine.Utility.XMLHelper.GetXmlNodeListByXpath(System.Xml.XmlDocument,System.String,System.Xml.XmlNamespaceManager)">
            <summary>
            选择匹配XPath表达式的节点列表XmlNodeList.
            </summary>
            <param name="xmlDoc">XML文档</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名")</param>
            <param name="nsmgr">命名空间</param> 
            <returns>返回的XmlNodeList</returns>
        </member>
        <member name="M:Slickflow.Engine.Utility.XMLHelper.GetXmlNodeText(System.Xml.XmlNode,System.String)">
            <summary>
            获取节点文本
            </summary>
            <param name="xmlNode">XML节点</param>
            <param name="childNodeName">子节点名称</param>
            <returns>文本</returns>
        </member>
        <member name="M:Slickflow.Engine.Utility.XMLHelper.GetXmlAttribute(System.Xml.XmlNode,System.String,System.Boolean)">
            <summary>
            选择节点的某一个xml属性名称
            </summary>
            <param name="xmlNode">xml节点</param>
            <param name="attributeName">属性名称</param>
            <param name="isLowerCase">属性小写</param>
            <returns>属性值</returns>
        </member>
        <member name="M:Slickflow.Engine.Utility.XMLHelper.SetXmlAttribute(System.Xml.XmlElement,System.String,System.String)">
            <summary>
            设置节点属性的文本
            </summary>
            <param name="xmlNode">节点</param>
            <param name="name">属性名称</param>
            <param name="value">文本</param>
        </member>
        <member name="M:Slickflow.Engine.Utility.XMLHelper.SetXmlAttribute(System.Xml.XmlNode,System.String,System.String)">
            <summary>
            设置节点属性的文本
            </summary>
            <param name="xmlNode">节点</param>
            <param name="name">属性名称</param>
            <param name="value">文本</param>
        </member>
        <member name="M:Slickflow.Engine.Utility.XMLHelper.CreateXmlDocument(System.String,System.String,System.String,System.String,System.String)">
            <summary>
            创建一个XML文档
            </summary>
            <param name="xmlFileName">XML文档完全文件名(包含物理路径)</param>
            <param name="rootNodeName">XML文档根节点名称(须指定一个根节点名称)</param>
            <param name="version">XML文档版本号(必须为:"1.0")</param>
            <param name="encoding">XML文档编码方式</param>
            <param name="standalone">该值必须是"yes"或"no",如果为null,Save方法不在XML声明上写出独立属性</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Slickflow.Engine.Utility.XMLHelper.CreateXmlNodeByXPath(System.String,System.String,System.String,System.String,System.String,System.String)">
            <summary>
            依据匹配XPath表达式的第一个节点来创建它的子节点(如果此节点已存在则追加一个新的同名节点
            </summary>
            <param name="xmlFileName">XML文档完全文件名(包含物理路径)</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名</param>
            <param name="xmlNodeName">要匹配xmlNodeName的节点名称</param>
            <param name="innerText">节点文本值</param>
            <param name="xmlAttributeName">要匹配xmlAttributeName的属性名称</param>
            <param name="value">属性值</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Slickflow.Engine.Utility.XMLHelper.CreateOrUpdateXmlNodeByXPath(System.String,System.String,System.String,System.String)">
            <summary>
            依据匹配XPath表达式的第一个节点来创建或更新它的子节点(如果节点存在则更新,不存在则创建)
            </summary>
            <param name="xmlFileName">XML文档完全文件名(包含物理路径)</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名</param>
            <param name="xmlNodeName">要匹配xmlNodeName的节点名称</param>
            <param name="innerText">节点文本值</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Slickflow.Engine.Utility.XMLHelper.CreateOrUpdateXmlAttributeByXPath(System.String,System.String,System.String,System.String)">
            <summary>
            依据匹配XPath表达式的第一个节点来创建或更新它的属性(如果属性存在则更新,不存在则创建)
            </summary>
            <param name="xmlFileName">XML文档完全文件名(包含物理路径)</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名</param>
            <param name="xmlAttributeName">要匹配xmlAttributeName的属性名称</param>
            <param name="value">属性值</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Slickflow.Engine.Utility.XMLHelper.DeleteXmlNodeByXPath(System.String,System.String)">
            <summary>
            删除匹配XPath表达式的第一个节点(节点中的子元素同时会被删除)
            </summary>
            <param name="xmlFileName">XML文档完全文件名(包含物理路径)</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Slickflow.Engine.Utility.XMLHelper.DeleteXmlAttributeByXPath(System.String,System.String,System.String)">
            <summary>
            删除匹配XPath表达式的第一个节点中的匹配参数xmlAttributeName的属性
            </summary>
            <param name="xmlFileName">XML文档完全文件名(包含物理路径)</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名</param>
            <param name="xmlAttributeName">要删除的xmlAttributeName的属性名称</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="M:Slickflow.Engine.Utility.XMLHelper.DeleteAllXmlAttributeByXPath(System.String,System.String)">
            <summary>
            删除匹配XPath表达式的第一个节点中的所有属性
            </summary>
            <param name="xmlFileName">XML文档完全文件名(包含物理路径)</param>
            <param name="xpath">要匹配的XPath表达式(例如:"//节点名//子节点名</param>
            <returns>成功返回true,失败返回false</returns>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.CollaborationModelHelper">
            <summary>
            Convert collaborative models into entities
            协作模型转换成实体
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.CollaborationModelHelper.ConvertCollaborationFromXml(System.Xml.XmlDocument,System.Xml.XmlNode)">
            <summary>
            Convert to Collaboration from xml
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.CollaborationModelHelper.ConvertCollaboration(System.Xml.XmlNode)">
            <summary>
            Convert to Collaboration
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.CollaborationModelHelper.ConvertParticipant(System.Xml.XmlNode)">
            <summary>
            Convert Participant
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.CollaborationModelHelper.ConvertProcess(System.Xml.XmlNode)">
            <summary>
            Convert Process
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Common.ActionMethodEnum">
            <summary>
            Action Method Type
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Common.SubMethodEnum">
            <summary>
            Sub Method Type
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Common.ActionTypeEnum">
            <summary>
            Action Type
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Common.CompareTypeEnum">
            <summary>
            Type of pass rate setting for countersignature nodes
            会签节点的通过率设置类型
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Common.ComplexTypeEnum">
            <summary>
            Mutiple instance sign togerthe and sign forward
            会加签类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Common.ComplexTypeEnum.SignTogether">
            <summary>
            Sign together
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Common.ComplexTypeEnum.SignForward">
            <summary>
            Sign forward
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Common.FireTypeEnum">
            <summary>
            Event fire Type
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Common.MergeTypeEnum">
            <summary>
            Merget Type
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Common.ProcessValidateResult">
            <summary>
            Process Validate Result
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Common.ProcessValidateResultTypeEnum">
            <summary>
            Process Validate Result Type
            流程校验错误类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Common.ProcessValidateResultTypeEnum.None">
            <summary>
            No Error
            默认没有校验错误
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Common.ProcessValidateResultTypeEnum.Successed">
            <summary>
            Validated successed
            校验成功
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Common.ProcessValidateResultTypeEnum.WithoutStartEvent">
            <summary>
            Without start event
            没有开始节点
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Common.ProcessValidateResultTypeEnum.WithoutEndEvent">
            <summary>
            Without end event
            没有结束节点
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Common.ProcessValidateResultTypeEnum.WithoutStartEndPath">
            <summary>
            Without start end path
            存在孤立活动
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Common.ScriptMethodEnum">
            <summary>
            Script Method
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Common.ServiceMethodEnum">
            <summary>
            Service Method Type
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Common.SignForwardTypeEnum">
            <summary>
            Sign forward Type
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Common.SignForwardTypeEnum.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Common.SignForwardTypeEnum.SignForwardBefore">
            <summary>
            Before
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Common.SignForwardTypeEnum.SignForwardBehind">
            <summary>
            Behind
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Common.SignForwardTypeEnum.SignForwardParallel">
            <summary>
            Parallel
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Common.TriggerTypeEnum">
            <summary>
            Trigger Type
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Common.TriggerTypeEnum.None">
            <summary>
            None
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Common.TriggerTypeEnum.EMail">
            <summary>
            EMail
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Common.TriggerTypeEnum.Timer">
            <summary>
            Timer
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Common.TriggerTypeEnum.Message">
            <summary>
            Message
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Common.TriggerTypeEnum.Signal">
            <summary>
            Singal
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Common.TriggerTypeEnum.Conditional">
            <summary>
            Conditional
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.ConvertHelper">
            <summary>
            Convert Helper
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ConvertHelper.ConvertXmlActivityNodeToActivityEntity(System.Xml.XmlNode,System.Xml.XmlNamespaceManager,System.String)">
            <summary>
            Convert XmlNode to Activity Entity
            </summary>
            <param name="xmlNode">Xml Node</param>
            <param name="xnpmgr">XML namespace manager</param>
            <param name="processGUID">ProcessGUID</param>
            <returns>Activity Entity</returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ConvertHelper.ComnvertXmlFormNodeToFormEntity(System.Xml.XmlNode,System.Xml.XmlNamespaceManager,System.String)">
            <summary>
            Convert nodt to Form
            </summary>
            <param name="xmlNode">Xml Node</param>
            <param name="xnpmgr">XML namespace manager</param>
            <param name="processGUID">ProcessGUID</param>
            <returns>Form</returns>
            <exception cref="T:Slickflow.Engine.Common.WfXpdlException"></exception>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.ConvertorFactory">
            <summary>
            Convertor Factory
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ConvertorFactory.CreateConvertor(System.Xml.XmlNode,System.Xml.XmlNamespaceManager,Slickflow.Engine.Common.ActivityTypeEnum@)">
            <summary>
            Factory method
            </summary>
            <param name="xmlNode">XML node</param>
            <param name="xnpmgr">XML namespace manager</param>
            <param name="activityType">activity type</param>
            <returns>IConvert</returns>
            <exception cref="T:System.ApplicationException"></exception>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ConvertorFactory.GetActivityTypeByNodeName(System.Xml.XmlNode)">
            <summary>
            Get activity type by node name
            </summary>
            <param name="node">xml node</param>
            <returns>activity type</returns>
            <exception cref="T:System.ApplicationException"></exception>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Convertor.ConvertorBase">
            <summary>
            Convert Base
            转换器基类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBase.Convert">
            <summary>
            Convert
            </summary>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder">
            <summary>
            Convertor Builder
            转换器构建类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.GetFormsNode">
            <summary>
            Get Forms Node
            获取Forms的XML节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.GetActionsNode">
            <summary>
            Get Actions Node
            获取Action的XML节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.GetBoundariesNode">
            <summary>
            Get Boundaries Node
            获取Boundary的XML节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.GetSectionsNode">
            <summary>
            Get Sections Node
            获取Section的XML节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.GetPerformersNode">
            <summary>
            Get Performers Node
            获取Performer的XML节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.GetServicesNode">
            <summary>
            Get Services Node
            获取Services的XML节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.GetScriptsNode">
            <summary>
            Get Scripts Node
            获取Scripts的XML节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.GetNotificationsNode">
            <summary>
            Get Notifications Node
            获取Notifications的XML节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.ConvertGeneral">
            <summary>
            Convert general info
            转换通用属性
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.ConvertForms">
            <summary>
            Convert Forms
            转换表单信息
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.ConvertActions">
            <summary>
            Convert Actions
            转换Action节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.ConvertBoundires">
            <summary>
            Convert Boundires
            转换Boundaries节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.ConvertPartakers">
            <summary>
            Convert Performers
            转换Performers节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.ConvertServices">
            <summary>
            Convert Services
            转换Services节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.ConvertScripts">
            <summary>
            Convert Scripts
            转换Scripts节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.ConvertSections">
            <summary>
            Covnert Sections
            转换Sections节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.ConvertNotifications">
            <summary>
            Convert Notifications
            转换Notificaitons节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.ConvertXmlActionNodeToActionEntity(System.Xml.XmlNode)">
            <summary>
            Convert Actions
            转换Action实体
            </summary>
            <param name="node">XML节点</param>
            <returns>操作实体</returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.ConvertXmlServiceNodeToServiceEntity(System.Xml.XmlNode)">
            <summary>
            Convert Service
            转换Service实体
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.ConvertXmlScriptNodeToScriptEntity(System.Xml.XmlNode)">
            <summary>
            Convert Script Node
            转换脚本任务节点
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.ConvertXmlPerformerNodeToPartakerEntity(System.Xml.XmlNode)">
            <summary>
            Convert Partaker
            转换Partaker节点
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.ConvertXmlBoundaryNodeToBoundaryEntity(System.Xml.XmlNode)">
            <summary>
            Convert Boundary
            转换Boundary节点
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.ConvertXmlSectionNodeToSectionEntity(System.Xml.XmlNode)">
            <summary>
            Convert Section
            转换Section节点
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.ConvertXmlNotificationNodeToPartakerEntity(System.Xml.XmlNode)">
            <summary>
            Convert Partaker
            转换Partaker节点
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.ConvertorBuilder.Create(System.Xml.XmlNode,System.Xml.XmlNamespaceManager,Slickflow.Engine.Xpdl.Entity.Activity)">
            <summary>
            Create method
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Convertor.DefaultlConvertor">
            <summary>
            Default Convertor
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Convertor.EventConvertor">
            <summary>
            Event Convertor
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.EventConvertor.ConvertElementDetail(Slickflow.Engine.Xpdl.Entity.Activity)">
            <summary>
            Convert Element Detail
            </summary>
            <param name="entity"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.EventConvertor.GetEventDefinitionNode(System.Xml.XmlNode,Slickflow.Engine.Xpdl.Common.TriggerTypeEnum@)">
            <summary>
            Get Event Definition Node
            获得事件定义节点
            </summary>
            <param name="eventNode"></param>
            <param name="triggerType"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.EventConvertor.GetMessageDirectionFromEventNode(System.Xml.XmlNode)">
            <summary>
            Get Message Direction from Event Node
            获取消息Throw/Catch 类型
            </summary>
            <param name="eventNode"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Convertor.GatewayConvertor">
            <summary>
            Gateway Convertor
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Convertor.IConvert">
            <summary>
            Node Convert Interface
            节点转变实体
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Convertor.MultiSignConvertor">
            <summary>
            Multiple Instance Convertor
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Convertor.SubProcessConvertor">
            <summary>
            Sub Process Convertor
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.SubProcessConvertor.ConvertSubInfoes">
            <summary>
            Convert sub process object list
            转换子流程对象列表
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.SubProcessConvertor.GetSubInfoesNode">
            <summary>
            Retrieve the XML node of SubInfo
            获取SubInfo的XML节点
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Convertor.SubProcessConvertor.ConvertXmlSubInfoNodeToSubInfoEntity(System.Xml.XmlNode)">
            <summary>
            Convert SubInfo node
            转换SubInfo节点
            </summary>
            <param name="node"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.Action">
            <summary>
            Action
            操作实体
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.MethodInfo">
            <summary>
            Reflection component method
            反射组件方法
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.MethodInfo.AssemblyFullName">
            <summary>
            Assembly Full Name
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.MethodInfo.TypeFullName">
            <summary>
            Class Full Name
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.MethodInfo.ConstructorParameters">
            <summary>
            Class Constructor Parameter
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.MethodInfo.MethodName">
            <summary>
            Method Name
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.MethodInfo.MethodParameters">
            <summary>
            Method Parameters
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.CodeInfo">
            <summary>
            Code Info
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.CodeInfo.CodeText">
            <summary>
            Code Script Text
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.Activity">
            <summary>
            Activity
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.ID">
            <summary>
            ID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.ActivityGUID">
            <summary>
            ActivityGUID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.ActivityName">
            <summary>
            Activity Name
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.ActivityCode">
            <summary>
            Activity Code
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.ActivityUrl">
            <summary>
            URL of the activity associated page
            活动关联页面的URL
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.Description">
            <summary>
            Description
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.ProcessGUID">
            <summary>
            ProcessGUID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.ActivityType">
            <summary>
            Activity Type
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.WorkItemType">
            <summary>
            WorkItem Type
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.TriggerDetail">
            <summary>
            Trigger Detail
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.GatewayDetail">
            <summary>
            Gateway Detail
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.MultiSignDetail">
            <summary>
            Mutiple Instance Detail
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.SkipDetail">
            <summary>
            Skip Detail
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.Node">
            <summary>
            Node
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.SectionList">
            <summary>
            Section List
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.MyProperties">
            <summary>
            Custom attributes associated with activities
            JSON data format
            活动关联的自定义属性
            JSON数据格式
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.ActionList">
            <summary>
            Action List
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.ServiceList">
            <summary>
            Service List
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.ScriptList">
            <summary>
            Script List
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.BoundaryList">
            <summary>
            Boundary List
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.PartakerList">
            <summary>
            Partaker List
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Activity.NotificationList">
            <summary>
            Notification List
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.ActivityView">
            <summary>
            Activity View
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.Boundary">
            <summary>
            Boundary
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.Collaboration">
            <summary>
            Collaboration
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.ConditionDetail">
            <summary>
            Condtion Detail on Transition
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.GatewayDetail">
            <summary>
            Gateway Detail
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.GroupBehaviour">
            <summary>
            Group Behaviour on Transiton
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.GroupBehaviour.DefaultBranch">
            <summary>
            Default branch (OrSplit, if other branches do not meet the criteria, select the default branch)
            默认分支(OrSplit，其它分支不满足条件，选择默认分支)
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.GroupBehaviour.Priority">
            <summary>
            Priority (for XOrSplit branch type)
            优先级(用于XOrSplit分支类型）
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.GroupBehaviour.Forced">
            <summary>
            Mandatory required option (for EORJoin merge type)
            强制必需选项(用于EOrJoin合并类型)
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.GroupBehaviour.Approval">
            <summary>
            Approval Options (for ApprovalorSplit, 1-Agree; 1-Reject)
            审批选项(用于ApprovalOrSplit, 1-同意;-1-拒绝)
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.MultiSignDetail">
            <summary>
            Multiple Instance Sign detail
            会签节点详细类型
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.MultiSignDetail.ComplexType">
            <summary>
            Type of countersignature and additional signature
            会签加签类型
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.MultiSignDetail.MergeType">
            <summary>
            Serial parallel type (countersignature)
            串行并行类型(会签加签)
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.MultiSignDetail.CompareType">
            <summary>
            Type of pass rate setting for co signing and additional signing nodes
            会签加签节点的通过率设置类型
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.MultiSignDetail.CompleteOrder">
            <summary>
            The pass rate of signing the master node record
            会签主节点记录的通过率
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.MultiSignDetail.SignForwardType">
            <summary>
            Sign Forward Type
            before/behind/parallel
            加签类型
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.Participant">
            <summary>
            Participant
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.Process">
            <summary>
            Process
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.Receiver">
            <summary>
            Receiver
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.ScriptDetail">
            <summary>
            Script Detail
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.SectionDetail">
            <summary>
            Section Detail
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.ServiceDetail">
            <summary>
            Service Detail
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.ServiceDetail.MethodInfo">
            <summary>
            Reflection method configuration information
            反射方法配置信息
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.SkipDetail">
            <summary>
            Jump information described on node type
            节点类型上描述的跳转信息
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.SkipDetail.IsSkip">
            <summary>
            Whether to Skip
            是否跳转
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.SkipDetail.Skipto">
            <summary>
            Skip to which node
            跳转到的节点
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.TaskImplementDetail">
            <summary>
            Task Implement Detail
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.TaskImplementDetail.ImplementationType">
            <summary>
            Task implementation type definition
            任务实现类型定义
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.Transition">
            <summary>
            Transition
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Transition.DirectionType">
            <summary>
            Direction Type
            方向类型
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Transition.Receiver">
            <summary>
            Receiver
            接收者类型
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.Transition.GroupBehaviours">
            <summary>
            Group behavior types
            群体行为类型
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.TransitionPriorityCompare">
            <summary>
            Compare by priority of connections
            按连线的优先级比较
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Entity.TransitionPriorityCompare.Compare(Slickflow.Engine.Xpdl.Entity.Transition,Slickflow.Engine.Xpdl.Entity.Transition)">
            <summary>
            Compare
            </summary>
            <param name="x"></param>
            <param name="y"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Entity.TriggerDetail">
            <summary>
            Trigger Detail
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.TriggerDetail.TriggerType">
            <summary>
            Trigger Type
            触发器类型
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.TriggerDetail.MessageDirection">
            <summary>
            Message Direction
            消息捕获抛出类型
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Entity.TriggerDetail.Expression">
            <summary>
            Expression
            事件类型表达式
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.ExpressionParser">
            <summary>
            Expression Parser
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ExpressionParser.Parse(System.String)">
            <summary>
            Parse expresson
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ExpressionParser.ReplaceParameterToValue(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Replace parameter values in conditional expressions
            取代条件表达式中的参数值
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ExpressionParser.IsNumeric(System.String)">
            <summary>
            Determine whether the string is of numeric type
            判断字符串是否是数字类型
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.IDynamicRunable">
            <summary>
            Dynamic Runable
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.IDynamicRunable.InvokeMethod(Slickflow.Engine.Xpdl.Entity.TaskImplementDetail,System.Object[])">
            <summary>
            Invoke method
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.IProcessModel">
            <summary>
            Process Model Interface
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.NextActivityTreeResult">
            <summary>
            Next Activity Tree Result
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Node.MultipleInstanceNode">
            <summary>
            Multiple Instance Node
            多实例节点类型
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Node.NodeBase">
            <summary>
            Node base
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Node.SubProcessNode">
            <summary>
            Sub Process Node
            子流程节点
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Node.SubProcessNode.SubProcessID">
            <summary>
            SubProcessID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Node.SubProcessNode.SubProcessGUID">
            <summary>
            SubProcessGUID
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Node.SubProcessNode.SubVarName">
            <summary>
            Dynamically bound variable name for subprocess ID
            子流程ID的动态绑定变量名称
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Node.SubProcessNode.SubProcessNested">
            <summary>
            Embedded subprocess
            内嵌子流程
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.ProcessModelBPMN">
            <summary>
            BPMN2 Process Model
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.ProcessModelBPMN.Process">
            <summary>
            Process 
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.ProcessModelBPMN.ProcessEntity">
            <summary>
            Process Entity
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.ConvertProcessModelFromXML(Slickflow.Engine.Business.Entity.ProcessEntity)">
            <summary>
            Convert process model from xml
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.#ctor(Slickflow.Engine.Business.Entity.ProcessEntity)">
            <summary>
            Constructor
            </summary>
            <param name="entity"></param>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetActivity(System.String)">
            <summary>
            Get Activity
            </summary>
            <param name="activityGUID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetActivityList">
            <summary>
            Get Activity List
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.TranverseTransitionList(System.Collections.Generic.List{Slickflow.Engine.Xpdl.Entity.Activity},System.String)">
            <summary>
            Recursive traversal of predecessor nodes on transfer
            递归遍历转移上的前置节点
            </summary>
            <param name="activityList"></param>
            <param name="fromActivityGUID"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetAllTaskActivityList">
            <summary>
            Obtain the nodes of task types (including countersignature nodes and subprocess nodes) 
            and form a sequence in Transition order
            获取任务类型的节点(包含会签节点和子流程节点)，按照Transition顺序组成序列
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.TranverseTaskTransitionList(System.Collections.Generic.List{Slickflow.Engine.Xpdl.Entity.Activity},System.String)">
            <summary>
            Recursive traversal of predecessor nodes on transfer
            递归遍历转移上的前置节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetTaskActivityList">
            <summary>
            Get Task activity list
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetAllTaskActivityList(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Xpdl.Entity.Activity)">
            <summary>
            Get a list of task nodes between branches and merges
            获取分支和合并之间的任务节点列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.TranverseTransitionListBetweenSplitJoin(System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.Activity},System.String,System.String)">
            <summary>
            Recursive traversal of predecessor nodes on transfer
            递归遍历转移上的前置节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.AppendActivity(System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.Activity},Slickflow.Engine.Xpdl.Entity.Activity)">
            <summary>
            Add nodes to the node list and remove duplicate nodes
            添加节点到节点列表中，去掉有重复的节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetStartActivity">
            <summary>
            Get Start Activity
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetFirstActivity">
            <summary>
            Get First Activity
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetFirstActivityList(Slickflow.Engine.Xpdl.Entity.Activity,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Get the list of activity nodes at the beginning of the process
            (there may be multiple nodes after the start node)
            获取流程起始的活动节点列表(开始节点之后，可能有多个节点)
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetEndActivity">
            <summary>
            Get End Activity
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetForcedBranchesCountBeforeEOrJoin(Slickflow.Engine.Xpdl.Entity.Activity,System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.Transition}@)">
            <summary>
            Obtain the mandatory number of branches for properties on the pre branch connection of the merged node
            获取合并节点的前置分支连线上的属性的强制分支数目
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetForwardTransition(System.String,System.String)">
            <summary>
            Get Forward Transition
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetForwardTransitionList(System.String)">
            <summary>
            Get the collection of subsequent connections for the current node
            获取当前节点的后续连线的集合
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetForwardTransitionList(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Retrieve the set of subsequent connections to the current node (using conditional filtering)
            获取当前节点的后续连线的集合（使用条件过滤）
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetFromActivityList(System.String)">
            <summary>
            Retrieve the source node list based on the transfer on XML
            根据XML上的转移获取来源节点列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetNextActivity(System.String)">
            <summary>
            Get the next node information of the current node
            获取当前节点的下一个节点信息
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetFirstActivityTree(Slickflow.Engine.Xpdl.Entity.Activity,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Obtain the next activity node tree for use in the flow interface
            获取下一步活动节点树，供流转界面使用
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetFirstActivityTree(Slickflow.Engine.Xpdl.Entity.Activity,System.Collections.Generic.IDictionary{System.String,System.String},Slickflow.Data.IDbSession)">
            <summary>
            Obtain the next activity node tree for use in the flow interface
            获取下一步活动节点树，供流转界面使用
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetFirstActivityList(Slickflow.Engine.Xpdl.Entity.Activity,System.Collections.Generic.IDictionary{System.String,System.String},Slickflow.Data.IDbSession)">
            <summary>
            Obtain the next node list accompanied by runtime condition information
            获取下一步节点列表，伴随运行时条件信息
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetNextActivityTree(System.String)">
            <summary>
            Obtain the next activity node tree for use in the flow interface
            获取下一步活动节点树，供流转界面使用
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetNextActivityTree(System.String,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Obtain the next activity node tree for use in the flow interface
            获取下一步活动节点树，供流转界面使用
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetNextActivityTree(System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},Slickflow.Data.IDbSession)">
            <summary>
            Obtain the next activity node tree for use in the flow interface
            获取下一步活动节点树，供流转界面使用
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.Tranverse(Slickflow.Engine.Xpdl.Schedule.NextActivityComponent,System.Collections.Generic.IList{Slickflow.Engine.Common.NodeView})">
            <summary>
            Tranverse
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetNextActivityList(System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},Slickflow.Data.IDbSession)">
            <summary>
            Obtain the next node list accompanied by runtime condition information
            获取下一步节点列表，伴随运行时条件信息
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetNextActivityList(System.String,System.Nullable{System.Int32},System.Collections.Generic.IDictionary{System.String,System.String},Slickflow.Engine.Common.ActivityResource,System.Linq.Expressions.Expression{System.Func{Slickflow.Engine.Common.ActivityResource,Slickflow.Engine.Xpdl.Entity.Activity,System.Boolean}},Slickflow.Data.IDbSession)">
            <summary>
             Obtain the next node list accompanied by runtime condition information
            获取下一步节点列表（伴随条件和资源）
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetNextActivityListByExpressionRecurisivly(Slickflow.Engine.Xpdl.Schedule.NextActivityComponent,Slickflow.Engine.Common.ActivityResource,System.Linq.Expressions.Expression{System.Func{Slickflow.Engine.Common.ActivityResource,Slickflow.Engine.Xpdl.Entity.Activity,System.Boolean}})">
            <summary>
            Recursively obtain the list of next nodes that meet the conditions
            递归获取满足条件的下一步节点列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.AddChildToNewGatewayComponent(Slickflow.Engine.Xpdl.Schedule.NextActivityComponent,Slickflow.Engine.Xpdl.Schedule.NextActivityComponent,Slickflow.Engine.Xpdl.Schedule.NextActivityComponent)">
            <summary>
            Add child nodes to gateway nodes
            添加子节点到网关节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.IsInternalNextPerformerType(Slickflow.Engine.Common.NextPerformerIntTypeEnum)">
            <summary>
            Determine whether it is an internally defined executor type
            判断是否是内部定义的执行者类型
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetNextActivityListWithoutCondition(System.String)">
            <summary>
            Obtain the next node list without adding conditions
            不加条件获取下一步节点列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetNextActivityListWithoutConditionRecurily(System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.Activity},System.String)">
            <summary>
            Recursive retrieval of the next node list
            递归获取下一步节点列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetPreviousActivityList(System.String)">
            <summary>
            Obtain the next node list accompanied by runtime condition information
            (Excluding judgments within multiple instance nodes, as there are no corresponding transition records)
            获取下一步节点列表，伴随运行时条件信息
            （不包含多实例节点内部的判断，因为没有相应的Transition记录）
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetPreviousActivityList(System.String,System.Boolean@)">
            <summary>
            Retrieve the list of predecessor nodes (excluding internal judgments of multi instance nodes 
            as there are no corresponding transition records)
            获取前置节点列表（不包含多实例节点内部的判断，因为没有相应的Transition记录）
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetPreviousActivityList(System.String,System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.Activity},System.Boolean@)">
            <summary>
            Retrieve the list of predecessor nodes (excluding internal judgments of multi instance nodes 
            as there are no corresponding transition records)
            获取前置节点列表（不包含多实例节点内部的判断，因为没有相应的Transition记录）
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetPreviousActivityTree(System.String)">
            <summary>
            Get Previous Activity Tree
            获取上一步
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetRoles">
            <summary>
            Retrieve the list of roles under the process
            获取流程下的角色列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetActivityPerformers(System.String)">
            <summary>
            Obtain a list of handling personnel according to the activity definition
            根据活动定义获取办理人员列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetActivityPerformers(System.Collections.Generic.IList{Slickflow.Engine.Common.NodeView})">
            <summary>
            Obtain a list of handling personnel according to the activity definition
            根据活动定义获取办理人员列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetActivityRoles(System.String)">
            <summary>
            Retrieve the set of role defined on the node
            获取节点上定义的角色集合
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetActivityPartakers(System.String)">
            <summary>
            Retrieve the set of roles and personnel defined on the node
            获取节点上定义的角色及人员集合
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetFormList">
            <summary>
            Get form list
            获取流程下的表单列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetActivityNotifications(System.String)">
            <summary>
            Retrieve the list of notification users defined on the node
            获取节点上定义的通知用户列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.ParseCondition(Slickflow.Engine.Xpdl.Entity.Transition,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Parse Condition by LINQ
            用LINQ解析条件表达式
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.IsValidTransition(Slickflow.Engine.Xpdl.Entity.Transition,System.Collections.Generic.IDictionary{System.String,System.String})">
            <summary>
            Is it a transition that meets the conditions? If the condition is empty, it defaults to being valid.
            是否是满足条件的Transition，如果条件为空，默认是有效的。
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.IsMIParallel(Slickflow.Engine.Xpdl.Entity.Activity)">
            <summary>
            Whether is multiple instance parallel
            是否并行会签节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.IsMISequence(Slickflow.Engine.Xpdl.Entity.Activity)">
            <summary>
            Whether is multiple instance sequence
            是否串行会签节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.IsMINode(Slickflow.Engine.Xpdl.Entity.Activity)">
            <summary>
            Whether is multiple instance ndoe
            是否会签节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.IsMINode(Slickflow.Engine.Business.Entity.ActivityInstanceEntity)">
            <summary>
            Whether is multiple instance ndoe
            判断是否会签节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.IsTaskNode(Slickflow.Engine.Xpdl.Entity.Activity)">
            <summary>
            Whehter is task node
            是否任务节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.IsTaskNode(Slickflow.Engine.Business.Entity.ActivityInstanceEntity)">
            <summary>
            Whether is task node
            是否任务节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.IsAndSplitMI(Slickflow.Engine.Xpdl.Entity.Activity)">
            <summary>
            Whehter is and split mi container
            是否并行容器节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetBackwardTransitionList(System.String)">
            <summary>
            Obtain the predecessor connection of the node
            获取节点的前驱连线
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetBackwardGatewayActivity(Slickflow.Engine.Xpdl.Entity.Activity,System.Int32@,System.Int32@)">
            <summary>
            Obtain the branch nodes corresponding to the merged nodes
            获取与合并节点相对应的分支节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetBackwardTransitionList(System.String,System.Linq.Expressions.Expression{System.Func{Slickflow.Engine.Xpdl.Entity.Transition,System.Boolean}})">
            <summary>
            Get the predecessor node list of the node (Lambda expression)
            获取节点的前驱节点列表(Lambda表达式)
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetBackwardTransitionList(System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.Transition},System.Linq.Expressions.Expression{System.Func{Slickflow.Engine.Xpdl.Entity.Transition,System.Boolean}})">
            <summary>
            Get the predecessor node list of the node (Lambda expression)
            获取节点的前驱节点列表(Lambda表达式)
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetBackworkTransitionListWithCondition(System.String)">
            <summary>
            According to the process definition file, obtain a list of conditional node precursor connections
            (with conditions that can be reconstructed using Lambda expressions)
            根据流程定义文件，获取带有条件的节点前驱连线列表，（带有条件，可以用Lambda表达式重构）
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelBPMN.GetBackwardTransitionListCount(System.String)">
            <summary>
            Obtain the number of pre node connections
            获取节点前驱连线的数目
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.ProcessModelConvertor">
            <summary>
            Process Model Convertor
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelConvertor.ConvertProcessModelFromXML(System.Xml.XmlNode)">
            <summary>
            Convert Process Model from xml
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelConvertor.ConvertProcessAttribute(System.Xml.XmlNode)">
            <summary>
            Process attribute
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelConvertor.ConvertXmlChildNode(System.Xml.XmlNode,Slickflow.Engine.Xpdl.Entity.Process)">
            <summary>
            Convert xml child node
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelConvertor.GetWorkItemType(Slickflow.Engine.Common.ActivityTypeEnum)">
            <summary>
            Obtain work item types based on activity types
            根据活动类型获取工作项类型
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelConvertor.ConvertSubProcess(System.Xml.XmlNode)">
            <summary>
            Convert sub process
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelConvertor.ConvertTransition(System.Xml.XmlNode,Slickflow.Engine.Xpdl.Entity.Process)">
            <summary>
            Convert to transition
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.ProcessModelFactory">
            <summary>
            Process Model Factory Class
            1.  Four types of process model creation (by process, by process instance, by task view, by subprocess node)
            2.  Distinguish the creation mode of sub processes (handle the situation where sub processes are embedded into the main process)
            流程模型工厂类
            1. 流程模型创建的4种类型(按流程, 按流程实例, 按任务视图, 按子流程节点)
            2. 区分出子流程的创建模式(子流程嵌入到主流程里面的情况处理)
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelFactory.CreateByProcess(Slickflow.Engine.Business.Entity.ProcessEntity)">
            <summary>
            Create by Process
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelFactory.CreateByProcess(System.String,System.String)">
            <summary>
            Create by Process version
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelFactory.CreateByProcess(System.Data.IDbConnection,System.String,System.String,System.Data.IDbTransaction)">
            <summary>
            Create by Process version
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelFactory.CreateByProcessInstance(Slickflow.Engine.Business.Entity.ProcessInstanceEntity)">
            <summary>
            Create by Process instance
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelFactory.CreateByProcessInstance(System.Data.IDbConnection,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.Data.IDbTransaction)">
            <summary>
            Create by Process instance
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelFactory.CreateByTask(Slickflow.Engine.Business.Entity.TaskViewEntity)">
            <summary>
            Create by task
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelFactory.CreateByTask(System.Data.IDbConnection,Slickflow.Engine.Business.Entity.TaskViewEntity,System.Data.IDbTransaction)">
            <summary>
            Create by task
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelFactory.CreateSubByNode(System.Data.IDbConnection,Slickflow.Engine.Xpdl.Node.SubProcessNode,System.Data.IDbTransaction)">
            <summary>
            Create by sub process node
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelFactory.BuildProcessEntityFromXpdl(Slickflow.Engine.Xpdl.Entity.Process)">
            <summary>
            Build process objects with nested subprocesses
            构建内嵌子流程的流程对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelFactory.CreateSubByProcessInstance(System.Data.IDbConnection,Slickflow.Engine.Business.Entity.ProcessInstanceEntity,System.Data.IDbTransaction)">
            <summary>
            Create sub process by process instance
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelFactory.CreateSubByTask(System.Data.IDbConnection,Slickflow.Engine.Business.Entity.TaskViewEntity,System.Data.IDbTransaction)">
            <summary>
            Create sub process by task
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelFactory.CreateSubInternal(System.Data.IDbConnection,System.String,System.String,System.Nullable{Slickflow.Engine.Common.SubProcessTypeEnum},System.Int32,System.String,System.Data.IDbTransaction)">
            <summary>
            Create sub process internal
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.ProcessModelHelper">
            <summary>
            Process Model Helper
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelHelper.GetStartActivity(Slickflow.Engine.Xpdl.Entity.Process)">
            <summary>
            Get start activity
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelHelper.GetEndActivity(Slickflow.Engine.Xpdl.Entity.Process)">
            <summary>
            Get end activity
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelHelper.GetActivity(Slickflow.Engine.Xpdl.Entity.Process,System.String)">
            <summary>
            Get activity
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelHelper.GetFirstActivity(Slickflow.Engine.Xpdl.Entity.Process)">
            <summary>
            Get first activity
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelHelper.GetNextActivity(Slickflow.Engine.Xpdl.Entity.Process,System.String)">
            <summary>
            Get Next Activity by from
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelHelper.ConvertFromActivityEntity(Slickflow.Engine.Xpdl.Entity.Activity)">
            <summary>
            Convert to activity view
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelHelper.GetForwardTransitionList(Slickflow.Engine.Xpdl.Entity.Process,System.String)">
            <summary>
            Get transition list
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelHelper.GetForwardTransition(Slickflow.Engine.Xpdl.Entity.Process,System.String,System.String)">
            <summary>
            Get transition
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelHelper.GetBackwardTransitionList(Slickflow.Engine.Xpdl.Entity.Process,System.String)">
            <summary>
            Get backward transition list
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelHelper.ConvertFromXmlNodeProcess(System.Xml.XmlNode)">
            <summary>
            Convert to process file entity
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessModelHelper.ConvertToXPDLProcess(System.Xml.XmlDocument)">
            <summary>
            Convert to process
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.ProcessValidator">
            <summary>
            Process Validator
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessValidator.Validate(Slickflow.Engine.Business.Entity.ProcessEntity)">
            <summary>
            Validate
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.ProcessValidator.TranverseTransitonList(Slickflow.Engine.Xpdl.Entity.Process,System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.Activity},System.Collections.Generic.IList{Slickflow.Engine.Xpdl.Entity.Transition},System.String)">
            <summary>
            Iterative verification method
            迭代验证方法
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.ApprovedTransitionValidatedTypeEnum">
            <summary>
            Approval transition validate type
            审批转移检验类型
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.ApprovedTransitionValidatedResult">
            <summary>
            Approval transition validate result object
            审批转移检验结果对象
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.NextActivityComponent">
            <summary>
            Next Activity Component
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityComponent.GetEnumerator">
            <summary>
            Get Enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityComponent.Add(Slickflow.Engine.Xpdl.Schedule.NextActivityComponent)">
            <summary>
            Add Children
            添加子节点
            </summary>
            <param name="nextActivity"></param>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityComponent.Remove(Slickflow.Engine.Xpdl.Schedule.NextActivityComponent)">
            <summary>
            Remove Children
            删除子节点
            </summary>
            <param name="nextActivity"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.NextActivityComponentFactory">
            <summary>
            Next Activity Component Factory
            下一步节点的工厂类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityComponentFactory.CreateNextActivityComponent(Slickflow.Engine.Xpdl.Entity.Transition,Slickflow.Engine.Xpdl.Entity.Activity)">
            <summary>
            Create Next Activity Component
            创建下一步活动的节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityComponentFactory.CreateNextActivityComponent(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Xpdl.Entity.Activity)">
            <summary>
            Create jump nodes (forced pull jump method, 
            subsequent node status can be forcibly pulled from the previous node to the current node [subsequent node])
            创建跳转节点(强制拉取跳转方式，后续节点状态可以强制拉取前置节点到当前节点[后续节点])
            </summary>
            <param name="fromActivity"></param>
            <param name="toActivity"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityComponentFactory.CreateJumpforwardEmptyTransition(Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Xpdl.Entity.Activity)">
            <summary>
            Create jump forward empty transition
            创建跳转Transition实体对象
            </summary>
            <param name="fromActivity"></param>
            <param name="toActivity"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityComponentFactory.CreateNextActivityComponent">
            <summary>
            Create next activity component
            创建下一步根显示节点
            </summary>
            <returns>根节点</returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityComponentFactory.CreatePreviousActivityComponent">
            <summary>
            Create previous activity component
            创建上一步根显示节点
            </summary>
            <returns>根节点</returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityComponentFactory.CreateNextActivityComponent(Slickflow.Engine.Xpdl.Schedule.NextActivityComponent)">
            <summary>
            Create next activity component
            根据现有下一步节点列表，创建新的下一步节点列表对象
            </summary>
            <param name="c"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.NextActivityIntermediate">
            <summary>
            Next Activity Intermediate
            中间类型节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityIntermediate.Add(Slickflow.Engine.Xpdl.Schedule.NextActivityComponent)">
            <summary>
            Add child
            添加子节点
            </summary>
            <param name="nextActivity"></param>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityIntermediate.Remove(Slickflow.Engine.Xpdl.Schedule.NextActivityComponent)">
            <summary>
            Remove child
            移除子节点
            </summary>
            <param name="nextActivity"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityIntermediate.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Schedule.NextActivityIntermediate.NextActivityList">
            <summary>
            Next activity list
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.NextActivityItem">
            <summary>
            单一下一步节点(不包含子节点）
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityItem.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedResult">
            <summary>
            Next Activity Matched Result
            执行活动的可选类型
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedResult.CreateNextActivityMatchedResultObject(Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType,Slickflow.Engine.Xpdl.Schedule.NextActivityComponent)">
            <summary>
            Create Method
            创建方法
            </summary>
            <param name="matchedType"></param>
            <param name="root"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType">
            <summary>
            Next Activity Matched Type
            下一步活动的调度状态
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType.Unknown">
            <summary>
            Unknown
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType.Failed">
            <summary>
            Failed
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType.Successed">
            <summary>
            Successed
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType.NoneTransitionFilteredByCondition">
            <summary>
            Filter by expression
            被表达式过滤
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType.WaitingForOtherSplitting">
            <summary>
            Other necessary parallel branches are required
            需要其他必需的并行分支
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType.WaitingForAgreedOrRefused">
            <summary>
            Waiting for approval or rejection of the operation (ApprovalorSplit)
            等待同意或者拒绝操作(ApprovalOrSplit)
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType.NoneTransitionMatchedToSplit">
            <summary>
            There are no paths that meet the conditions (OrSplit, XOrSplit)
            没有任何满足条件的路径（OrSplit, XOrSplit)
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType.FailedPassRateOfMulitipleInstance">
            <summary>
            The signing node does not meet the pass rate
            会签节点未满足通过率
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType.WaitingForOthersJoin">
            <summary>
            Waiting for other branches that need to be merged
            等待其它需要合并的分支
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType.NotMadeItselfToJoin">
            <summary>
            Condition not matched (OrJoin, XOrJoin)
            条件没有匹配(OrJoin, XOrJoin)
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType.CannotContinueRunning">
            <summary>
            Cannot continue running
            不能继续运行
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.NextActivityRouteChoiceEnum">
            <summary>
            Next Activity Route Choice Type
            下一步分支选择的类型
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Schedule.NextActivityRouteChoiceEnum.Single">
            <summary>
            Single Choice
            单一选择
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Schedule.NextActivityRouteChoiceEnum.OrMultiple">
            <summary>
            Or Multiple
            或多选
            </summary>
        </member>
        <member name="F:Slickflow.Engine.Xpdl.Schedule.NextActivityRouteChoiceEnum.MustAll">
            <summary>
            Must All
            必全选
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.NextActivityRouter">
            <summary>
            Next node list (including child nodes)
            下一步节点列表（其下包含子节点)
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityRouter.Add(Slickflow.Engine.Xpdl.Schedule.NextActivityComponent)">
            <summary>
            Add child
            </summary>
            <param name="nextActivity"></param>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityRouter.Remove(Slickflow.Engine.Xpdl.Schedule.NextActivityComponent)">
            <summary>
            Remove child
            </summary>
            <param name="nextActivity"></param>
            <returns></returns>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityRouter.GetEnumerator">
            <summary>
            Get enumerator
            </summary>
            <returns></returns>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Schedule.NextActivityRouter.NextActivityList">
            <summary>
            Next activity list
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.NextActivityRouteResult">
            <summary>
            Next activity result category:
            1.  If RouteChoiceType is single, assign a value to the NextActivity property;
            2.  If RouteChoiceType is or multiple-choice, all must be selected, then assign a value to the NestedNextActiveList property.
            下一步的活动结果类：
            1. 如果RouteChoiceType为单一，则对NextActivity属性赋值；
            2. 如果RouteChoiceType为或多选、必全选，则对NestedNextActivityList 属性赋值。
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Schedule.NextActivityRouteResult.RouteChoiceType">
            <summary>
            Route Choice Type
            路由选择类型的枚举
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Schedule.NextActivityRouteResult.NormalActivity">
            <summary>
            Normal Activity
            下一步节点
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Schedule.NextActivityRouteResult.GatewayActivity">
            <summary>
            Gateway Activity
            下一个路由节点
            </summary>
        </member>
        <member name="P:Slickflow.Engine.Xpdl.Schedule.NextActivityRouteResult.Children">
            <summary>
            Children
            下一步的节点列表
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.NextActivityRouteResultHelper">
            <summary>
            Help class for the next activity routing list
            下一步活动路由列表的帮助类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityRouteResultHelper.AddNewNextActivityToRoutedList(Slickflow.Engine.Xpdl.Schedule.NextActivityRouteResult@,Slickflow.Engine.Xpdl.Schedule.NextActivityRouteResult)">
            <summary>
            Add child nodes to the next step list
            给下一步列表中继续添加子节点
            </summary>
            <param name="nextActivityRoutedResult"></param>
            <param name="child"></param>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.NextActivityScheduleBase">
            <summary>
            Next Activity Schedule
            节点调度基类
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityScheduleBase.GetNextActivityListFromGateway(Slickflow.Engine.Xpdl.Entity.Transition,Slickflow.Engine.Xpdl.Entity.Activity,System.Collections.Generic.IDictionary{System.String,System.String},Slickflow.Data.IDbSession,Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType@)">
            <summary>
            Abstract method for obtaining the next node list based on gateway type
            根据网关类型获取下一步节点列表的抽象方法
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityScheduleBase.GetNextActivityListFromGatewayCore(Slickflow.Engine.Xpdl.Entity.Transition,System.Collections.Generic.IDictionary{System.String,System.String},Slickflow.Data.IDbSession,Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType@)">
            <summary>
            Obtain the next node list based on Transition
            根据Transition，获取下一步节点列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityScheduleBase.AddChildToGatewayComponent(Slickflow.Engine.Xpdl.Entity.Transition,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Xpdl.Schedule.NextActivityComponent,Slickflow.Engine.Xpdl.Schedule.NextActivityComponent)">
            <summary>
            Add child nodes to the gateway routing node, 
            and process them based on whether the gateway node and child nodes are empty or not
            把子节点添加到网关路由节点，根据网关节点和子节点是否为空处理
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.NextActivityScheduleFactory">
            <summary>
            Next Activity Schedule Factory
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityScheduleFactory.CreateActivitySchedule(Slickflow.Engine.Xpdl.IProcessModel,Slickflow.Engine.Common.GatewaySplitJoinTypeEnum,System.Nullable{System.Int32})">
            <summary>
            Create ActivitySchedule
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityScheduleFactory.CreateActivityScheduleIntermediate(Slickflow.Engine.Xpdl.IProcessModel)">
            <summary>
            Create ActivitySchedule
            </summary>
            <param name="processModel"></param>
            <returns></returns>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.NextActivityScheduleIntermediate">
            <summary>
            Next scheduling for intermediate event nodes
            中间事件节点下一步调度
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityScheduleIntermediate.GetNextActivityListFromGateway(Slickflow.Engine.Xpdl.Entity.Transition,Slickflow.Engine.Xpdl.Entity.Activity,System.Collections.Generic.IDictionary{System.String,System.String},Slickflow.Data.IDbSession,Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType@)">
            <summary>
            Get Next Activity List from Gateway Node
            获取下一步节点列表
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.NextActivityScheduleJoin">
            <summary>
            Merge types to obtain the next node list
            合并类型，获取下一步节点列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityScheduleJoin.GetNextActivityListFromGateway(Slickflow.Engine.Xpdl.Entity.Transition,Slickflow.Engine.Xpdl.Entity.Activity,System.Collections.Generic.IDictionary{System.String,System.String},Slickflow.Data.IDbSession,Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType@)">
            <summary>
            Get Next Activity List from Gateway Node
            获取下一步节点列表
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.NextActivityScheduleSplit">
            <summary>
            Split type, obtain the next node list
            分支类型，获取下一步节点列表
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.Schedule.NextActivityScheduleSplit.GetNextActivityListFromGateway(Slickflow.Engine.Xpdl.Entity.Transition,Slickflow.Engine.Xpdl.Entity.Activity,System.Collections.Generic.IDictionary{System.String,System.String},Slickflow.Data.IDbSession,Slickflow.Engine.Xpdl.Schedule.NextActivityMatchedType@)">
            <summary>
            Get next activity list from gateway
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.Schedule.PreviousActivityMatchedResult">
            <summary>
            Previous Activity Mathced Result
            上一步节点匹配结果
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.XPDLDefinition">
            <summary>
            Constant definitions used in the XML file of process definition
            流程定义的XML文件中，用到的常量定义
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.XPDLHelper">
            <summary>
            XPDL Helper
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.XPDLHelper.IsSimpleComponentNode(Slickflow.Engine.Common.ActivityTypeEnum)">
            <summary>
            Is simple component node
            是否简单组件节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.XPDLHelper.IsGatewayComponentNode(Slickflow.Engine.Common.ActivityTypeEnum)">
            <summary>
            Is gateway component node
            是否复合逻辑处理节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.XPDLHelper.IsCrossOverComponentNode(Slickflow.Engine.Common.ActivityTypeEnum)">
            <summary>
            Is cross over component node
            是否中间事件或服务类型节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.XPDLHelper.IsInterTimerEventComponentNode(Slickflow.Engine.Xpdl.Entity.Activity)">
            <summary>
            Is intermediate timer event node
            判断是否是中间Timer事件节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.XPDLHelper.IsWorkItem(Slickflow.Engine.Common.ActivityTypeEnum)">
            <summary>
            Is work item
            是否是可办理的任务节点
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.XPDLHelper.GetWorkItemType(Slickflow.Engine.Common.ActivityTypeEnum)">
            <summary>
            Get work item type by activity type
            根据活动类型获取工作项类型
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.XPDLHelper.GetMessageCatchActivity(Slickflow.Engine.Business.Entity.ProcessInstanceEntity,Slickflow.Engine.Xpdl.Entity.Activity,Slickflow.Engine.Business.Entity.ActivityInstanceEntity,Slickflow.Engine.Business.Entity.ProcessEntity@)">
            <summary>
            Get message catch activity
            获取跨流程XML的消息节点实体对象
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.XPDLHelper.GetSlickflowXmlNamespaceManager(System.Xml.XmlDocument,System.Boolean)">
            <summary>
            Get slickflow xml document namespace manager
            添加XML文档的命名空间
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.XPDLHelper.GetXmlPathOfProcess(System.Boolean)">
            <summary>
            Get xml path for process
            获取流程节点的查找路径
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.XPDLHelper.IsOrGateway(System.Xml.XmlNode)">
            <summary>
            Is or gateway
            判断是否或网关
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.XPDLHelper.IsXOrGateway(System.Xml.XmlNode)">
            <summary>
            Is xor gateway
            判断是否或网关
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.XPDLHelper.IsAndGateway(System.Xml.XmlNode)">
            <summary>
            Is and gateway
            判断是否或网关
            </summary>
        </member>
        <member name="T:Slickflow.Engine.Xpdl.XPDLMemoryCachedHelper">
            <summary>
            XPDL memroy cachaed helper
            流程文件缓存
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.XPDLMemoryCachedHelper.SetXpdlCache(System.String,System.String,Slickflow.Engine.Xpdl.Entity.Process)">
            <summary>
            Set xpdl cache
            设置流程缓存
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.XPDLMemoryCachedHelper.GetXpdlCache(System.String,System.String)">
            <summary>
            Get xpdl cache
            获取流程缓存
            </summary>
        </member>
        <member name="M:Slickflow.Engine.Xpdl.XPDLMemoryCachedHelper.TryUpdate(System.String,System.String,Slickflow.Engine.Xpdl.Entity.Process)">
            <summary>
            Update xpdl cache
            更新流程缓存
            </summary>
        </member>
        <member name="T:System.Linq.Dynamic.DynamicProperty">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicProperty.#ctor(System.String,System.Type)">
            <summary>
            
            </summary>
            <param name="name"></param>
            <param name="type"></param>
        </member>
        <member name="P:System.Linq.Dynamic.DynamicProperty.Name">
            <summary>
            
            </summary>
        </member>
        <member name="P:System.Linq.Dynamic.DynamicProperty.Type">
            <summary>
            
            </summary>
        </member>
        <member name="T:System.Linq.Dynamic.DynamicClass">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicClass.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicExpression.Parse(System.Type,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="resultType"></param>
            <param name="expression"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicExpression.ParseLambda(System.Type,System.Type,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="itType"></param>
            <param name="resultType"></param>
            <param name="expression"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicExpression.ParseLambda(System.Linq.Expressions.ParameterExpression[],System.Type,System.String,System.Object[])">
            <summary>
            
            </summary>
            <param name="parameters"></param>
            <param name="resultType"></param>
            <param name="expression"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicExpression.ParseLambda``2(System.String,System.Object[])">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <typeparam name="S"></typeparam>
            <param name="expression"></param>
            <param name="values"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicExpression.CreateClass(System.Linq.Dynamic.DynamicProperty[])">
            <summary>
            
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="M:System.Linq.Dynamic.DynamicExpression.CreateClass(System.Collections.Generic.IEnumerable{System.Linq.Dynamic.DynamicProperty})">
            <summary>
            
            </summary>
            <param name="properties"></param>
            <returns></returns>
        </member>
        <member name="T:System.Linq.Dynamic.ParseException">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.Linq.Dynamic.ParseException.#ctor(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="message"></param>
            <param name="position"></param>
        </member>
        <member name="P:System.Linq.Dynamic.ParseException.Position">
            <summary>
            
            </summary>
        </member>
        <member name="M:System.Linq.Dynamic.ParseException.ToString">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
